[{"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\index.js":"1","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\serviceWorker.js":"2","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\App.js":"4","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\auth.service.js":"5","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js":"6","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js":"7","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\board-admin.component.js":"8","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Auth\\register.component.js":"9","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Auth\\profile.component.js":"10","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js":"11","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js":"12","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\DetailUnverifiedOrder\\DetailUnverifiedOrder.js":"13","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js":"14","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js":"15","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Auth\\login.component.js":"16","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js":"17","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js":"18","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Home.js":"19","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js":"20","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js":"21","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\UnverifiedOrders\\UnverifiedOrders.js":"22","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx":"23","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx":"24","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx":"25","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx":"26","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx":"27","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js":"28","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Homepage\\index.js":"29","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Progress\\index.js":"30","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\errors\\PageNotFound\\index.js":"31","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\FinalisasiLaporan\\index.js":"32","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeStatusOrder\\index.js":"33","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Bast\\index.js":"34","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\HalamanAdmin\\index.js":"35","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Dashboard\\index.js":"36","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"37","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"38","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"39","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\APIConfig.js":"40","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\auth-header.js":"41","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\user.service.js":"42","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js":"43","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ReportAdmin\\index.js":"44","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ReportFinance\\index.js":"45","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js":"46","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetail.js":"47","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js":"48","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Services\\serviceList.js":"49","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js":"50","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ReportHead\\index.js":"51","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ManagedService\\msDetail.js":"52","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\InstallationProjectService.js":"53","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Table\\index.js":"54","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js":"55","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Button\\index.js":"56","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\DoughnutChart\\index.js":"57","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\BarChart\\index.js":"58","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Modal\\index.js":"59","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Backdrop\\index.js":"60"},{"size":642,"mtime":1624013264330,"results":"61","hashOfConfig":"62"},{"size":5480,"mtime":1624013264456,"results":"63","hashOfConfig":"62"},{"size":375,"mtime":1624013264424,"results":"64","hashOfConfig":"62"},{"size":13929,"mtime":1624013262471,"results":"65","hashOfConfig":"62"},{"size":956,"mtime":1624611492694,"results":"66","hashOfConfig":"62"},{"size":7472,"mtime":1624013263440,"results":"67","hashOfConfig":"62"},{"size":7134,"mtime":1624013263628,"results":"68","hashOfConfig":"62"},{"size":889,"mtime":1624013262940,"results":"69","hashOfConfig":"62"},{"size":7500,"mtime":1624013262503,"results":"70","hashOfConfig":"62"},{"size":1751,"mtime":1624013262487,"results":"71","hashOfConfig":"62"},{"size":13314,"mtime":1624013263143,"results":"72","hashOfConfig":"62"},{"size":10412,"mtime":1624013263971,"results":"73","hashOfConfig":"62"},{"size":15406,"mtime":1624611492793,"results":"74","hashOfConfig":"62"},{"size":19863,"mtime":1624013263581,"results":"75","hashOfConfig":"62"},{"size":28693,"mtime":1624611492823,"results":"76","hashOfConfig":"62"},{"size":3970,"mtime":1624013262487,"results":"77","hashOfConfig":"62"},{"size":33557,"mtime":1624013262987,"results":"78","hashOfConfig":"62"},{"size":33608,"mtime":1624013263081,"results":"79","hashOfConfig":"62"},{"size":1329,"mtime":1624013262628,"results":"80","hashOfConfig":"62"},{"size":38629,"mtime":1624611492599,"results":"81","hashOfConfig":"62"},{"size":39848,"mtime":1624013263081,"results":"82","hashOfConfig":"62"},{"size":14043,"mtime":1624611492732,"results":"83","hashOfConfig":"62"},{"size":4932,"mtime":1624013262706,"results":"84","hashOfConfig":"62"},{"size":4614,"mtime":1624013262675,"results":"85","hashOfConfig":"62"},{"size":4229,"mtime":1624013262706,"results":"86","hashOfConfig":"62"},{"size":3893,"mtime":1624013262675,"results":"87","hashOfConfig":"62"},{"size":2838,"mtime":1624013262940,"results":"88","hashOfConfig":"62"},{"size":60272,"mtime":1624013263143,"results":"89","hashOfConfig":"62"},{"size":834,"mtime":1624013263315,"results":"90","hashOfConfig":"62"},{"size":5423,"mtime":1624013263846,"results":"91","hashOfConfig":"62"},{"size":632,"mtime":1624013264299,"results":"92","hashOfConfig":"62"},{"size":21616,"mtime":1624611492871,"results":"93","hashOfConfig":"62"},{"size":21791,"mtime":1624029758177,"results":"94","hashOfConfig":"62"},{"size":16409,"mtime":1624013262972,"results":"95","hashOfConfig":"62"},{"size":13586,"mtime":1624611492760,"results":"96","hashOfConfig":"62"},{"size":17975,"mtime":1624013263190,"results":"97","hashOfConfig":"62"},{"size":28070,"mtime":1624611492564,"results":"98","hashOfConfig":"62"},{"size":32535,"mtime":1624013263768,"results":"99","hashOfConfig":"62"},{"size":24979,"mtime":1624013263705,"results":"100","hashOfConfig":"62"},{"size":226,"mtime":1624611492653,"results":"101","hashOfConfig":"62"},{"size":352,"mtime":1624013264549,"results":"102","hashOfConfig":"62"},{"size":1141,"mtime":1624611492803,"results":"103","hashOfConfig":"62"},{"size":956,"mtime":1624013262878,"results":"104","hashOfConfig":"62"},{"size":73184,"mtime":1624611492687,"results":"105","hashOfConfig":"62"},{"size":72785,"mtime":1624611492578,"results":"106","hashOfConfig":"62"},{"size":2530,"mtime":1624013262878,"results":"107","hashOfConfig":"62"},{"size":4173,"mtime":1624013262909,"results":"108","hashOfConfig":"62"},{"size":1719,"mtime":1624013262909,"results":"109","hashOfConfig":"62"},{"size":936,"mtime":1624013262924,"results":"110","hashOfConfig":"62"},{"size":1859,"mtime":1624013262909,"results":"111","hashOfConfig":"62"},{"size":77947,"mtime":1624611492524,"results":"112","hashOfConfig":"62"},{"size":1585,"mtime":1624013262893,"results":"113","hashOfConfig":"62"},{"size":2044,"mtime":1624611492830,"results":"114","hashOfConfig":"62"},{"size":1828,"mtime":1624013262924,"results":"115","hashOfConfig":"62"},{"size":823,"mtime":1624013262628,"results":"116","hashOfConfig":"62"},{"size":802,"mtime":1624013262550,"results":"117","hashOfConfig":"62"},{"size":920,"mtime":1624013262612,"results":"118","hashOfConfig":"62"},{"size":1387,"mtime":1624013262550,"results":"119","hashOfConfig":"62"},{"size":478,"mtime":1624013262893,"results":"120","hashOfConfig":"62"},{"size":257,"mtime":1624013262550,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"vwke31",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"124"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\index.js",[],["260","261"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\serviceWorker.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\App.js",["262","263"],"import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Homepage from \"./containers/Homepage\";\r\nimport PenjadwalanMaintenance from \"./containers/PenjadwalanMaintenance/PenjadwalanMaintenance\";\r\nimport CreateMaintenance from \"./containers/CreateMaintenance/CreateMaintenance\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport LookUpdateMaintenance from \"./containers/LookUpdateMaintenance/LookUpdateMaintenance\";\r\nimport CreateOrder from \"./containers/CreateOrder/CreateOrder\";\r\nimport DetailOrder from \"./containers/DetailOrder/DetailOrder\";\r\nimport ChangeOrderPI from \"./containers/ChangeOrderPI/ChangeOrderPI\";\r\nimport ChangeOrderMS from \"./containers/ChangeOrderMS/ChangeOrderMS\";\r\nimport ChangeOrderPIMS from \"./containers/ChangeOrderPIMS/ChangeOrderPIMS\";\r\nimport LaporanInstalasiMaintenance from \"./containers/LaporanInstalasiMaintenance\"\r\nimport StatusPersetujuanLaporan from \"./containers/StatusPersetujuanLaporan/StatusPersetujuanLaporan\";\r\nimport UnggahDokumenOrder from \"./containers/UnggahDokumenOrder/UnggahDokumenOrder\";\r\nimport Progress from \"./containers/Progress\";\r\nimport ReportAdmin from \"./containers/ReportAdmin\";\r\nimport ReportFinance from \"./containers/ReportFinance\";\r\nimport ReportHead from \"./containers/ReportHead\";\r\nimport PenugasanEngineer from \"./containers/PenugasanEngineer\";\r\nimport PeriodeKontrak from \"./containers/PeriodeKontrak\";\r\nimport Bast from \"./containers/Bast\";\r\nimport PageNotFound from \"./errors/PageNotFound\"\r\nimport HalamanAdmin from \"./containers/HalamanAdmin\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/Auth/login.component\";\r\nimport Register from \"./components/Auth/register.component\";\r\nimport Profile from \"./components/Auth/profile.component\";\r\nimport Home from \"./components/Home\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport ListVerifiedPiOrder from \"./components/VerifiedPiOrder/ListVerifiedPiOrder\";\r\nimport ListTaskComponent from './components/ListTask/ListTaskComponent';\r\nimport CreateTaskComponent from './components/ListTask/CreateTaskComponent';\r\nimport UpdateTaskComponent from './components/ListTask/UpdateTaskComponent';\r\nimport UpdateTaskProgressComponent from './components/ListTask/UpdateTaskProgressComponent';\r\nimport Dashboard from \"./containers/Dashboard\";\r\nimport ChangeStatusOrder from \"./containers/ChangeStatusOrder\";\r\nimport FinalisasiLaporan from \"./containers/FinalisasiLaporan\";\r\nimport UnverifiedOrders from \"./containers/UnverifiedOrders/UnverifiedOrders\";\r\nimport DetailUnverifiedOrder from \"./containers/DetailUnverifiedOrder/DetailUnverifiedOrder\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showPeriodeKontrak: false,\r\n      showPenugasanEngineer: false,\r\n      showMengelolaLaporan: false,\r\n\t    showBoardAdmin: false,\r\n      showHalamanAdmin: false,\r\n      showDeliveryProgress: false,\r\n      showBast: false,\r\n      showProgressOrder: false,\r\n      currentUser: undefined,\r\n      showInputDataOrder: false,\r\n      showPenjadwalanMaintenance: false,\r\n      showStatusPersetujuanLaporan: false,\r\n      showDashboard: false,\r\n      showChangeStatusOrder: false,\r\n      showFinalisasiLaporan:false,\r\n      showOrderStatusVerification: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser(); \r\n  \r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showPeriodeKontrak: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showPenugasanEngineer: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showMengelolaLaporan: user.roles.includes(\"ROLE_ENGINEER\"),\r\n\t\t    showBoardAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showHalamanAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showDeliveryProgress: user.roles.includes(\"ROLE_ENGINEER\"),\r\n        showOrderVerification: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showLaporanAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showLaporanFinance: user.roles.includes(\"ROLE_FINANCE\"),\r\n        showLaporanHead: user.roles.includes(\"ROLE_MANAGER\"),\r\n        showInputDataOrderAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showInputDataOrderDataEntry: user.roles.includes(\"ROLE_DATA_ENTRY\"),\r\n        showPenjadwalanMaintenance: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showProgressOrder: user.roles.includes(\"ROLE_MANAGER\"),\r\n        showBast: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\"),\r\n        showStatusPersetujuanLaporan: user.roles.includes(\"ROLE_MANAGER\"),\r\n        // showDashboard: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\"),\r\n        showChangeStatusOrder: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showOrderStatusVerification: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showFinalisasiLaporan: user.roles.includes(\"ROLE_ADMIN\")\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showPenjadwalanMaintenance, showPeriodeKontrak, showOrderVerification, showPenugasanEngineer, showMengelolaLaporan, showHalamanAdmin, showDeliveryProgress, \r\n    showLaporanAdmin, showOrderStatusVerification, showLaporanFinance, showLaporanHead, showBast, showProgressOrder, showStatusPersetujuanLaporan, showInputDataOrderAdmin, showInputDataOrderDataEntry, showFinalisasiLaporan,  showChangeStatusOrder} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" id=\"navbar\" variant=\"dark\" style={{ backgroundColor: '#2F3F58' }}>\r\n          <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {currentUser ?\r\n                <Nav.Link href=\"/dashboard\" variant=\"dark\" >Dashboard</Nav.Link>: <></>}\r\n                {currentUser && (showInputDataOrderAdmin || showInputDataOrderDataEntry || showOrderVerification || showProgressOrder || showChangeStatusOrder)?\r\n              <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  {(showInputDataOrderAdmin || showInputDataOrderDataEntry) && (<Nav.Link href=\"/order/order\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Input Data Order</Nav.Link>)}\r\n                  {showOrderStatusVerification && (<Nav.Link href=\"/order/status/verification\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Verifikasi Order</Nav.Link>)}\r\n                  {showProgressOrder && (<Nav.Link href=\"/order/progress\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Progress Delivery</Nav.Link>)}\r\n                  {showChangeStatusOrder && (<Nav.Link href=\"/order/ubahStatus\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Ubah Status</Nav.Link>)}\r\n                  </div>\r\n              </NavDropdown> : <></>}\r\n              {currentUser && (showPenugasanEngineer || showDeliveryProgress || showPeriodeKontrak || showPenjadwalanMaintenance) ?\r\n              <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                  {showPenugasanEngineer && (<Nav.Link href=\"/produksi/penugasan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Penugasan</Nav.Link>)}\r\n                  {showDeliveryProgress && (<Nav.Link href=\"/delivery-progress\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Progress Delivery</Nav.Link>)}\r\n                  {showPeriodeKontrak && (<Nav.Link href=\"/produksi/periode-kontrak\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Periode Kontrak</Nav.Link>)}\r\n                  {showPenjadwalanMaintenance && (<Nav.Link href=\"/produksi/maintenance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Penjadwalan Maintenance</Nav.Link>)}\r\n                  \r\n              </div>\r\n              \r\n              </NavDropdown> : <></>}\r\n              {currentUser && (showMengelolaLaporan || showLaporanAdmin || showLaporanFinance || showLaporanHead || showBast || showStatusPersetujuanLaporan || showFinalisasiLaporan)? \r\n              <NavDropdown title=\"Laporan\"  id=\"collasible-nav-dropdown\">\r\n              <div className=\"d-flex justify-content-between\">\r\n              {showMengelolaLaporan && (<Nav.Link href=\"/laporan/daftarLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>)}\r\n              {showLaporanAdmin &&  (<Nav.Link href=\"/laporan/admin\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>)}\r\n              {showLaporanFinance && (<Nav.Link href=\"/laporan/finance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>)}\r\n              {showLaporanHead && (<Nav.Link href=\"/laporan/head\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar BAST</Nav.Link>)}\r\n              {showBast && (<Nav.Link href=\"/laporan/create-bast\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Generate BAST</Nav.Link>)}\r\n              {showStatusPersetujuanLaporan && (<Nav.Link href=\"/laporan/verifikasiLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Verifikasi Laporan</Nav.Link>)}\r\n              {showFinalisasiLaporan && (<Nav.Link href=\"/laporan/finalisasi\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Finalisasi Laporan</Nav.Link>)}\r\n\r\n              </div>\r\n              </NavDropdown> : <></>}\r\n              {showHalamanAdmin && (<Nav.Link href=\"/halaman/admin\">Halaman Admin</Nav.Link>)}\r\n              </Nav>\r\n\r\n              {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Nav.Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Nav.Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Nav.Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n\r\n\r\n</Navbar.Collapse>\r\n</Navbar>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path={[\"/\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route path=\"/produksi/penugasan\" component={PenugasanEngineer} />\r\n              <Route path=\"/produksi/periode-kontrak\" component={PeriodeKontrak} />\r\n              <Route path=\"/laporan/daftarLaporan\" component={LaporanInstalasiMaintenance} />\r\n              <Route path=\"/api/test/admin\" component={BoardAdmin} />\r\n              <Route path=\"/halaman/admin\" component={HalamanAdmin} />\r\n              <Route path = \"/delivery-progress\" component = {ListVerifiedPiOrder}></Route>\r\n              <Route path = \"/list-task/:id\" component = {ListTaskComponent}></Route>\r\n              <Route path = \"/add-task/:id\" component = {CreateTaskComponent}></Route>\r\n              <Route path = \"/update-task/:idPi/:idTask\" component = {UpdateTaskComponent}></Route>\r\n              <Route path = \"/add-progress/:idPi/:idTask\" component = {UpdateTaskProgressComponent}></Route>\r\n              <Route path=\"/order/status/verification\" component={UnverifiedOrders} />\r\n              <Route path=\"/order/verification/detail/:id\" component={DetailUnverifiedOrder} />\r\n              <Route path = \"/order/progress\" component = {Progress}></Route>\r\n              <Route path = \"/laporan/finance\" component = {ReportFinance}></Route>\r\n              <Route path = \"/laporan/head\" component = {ReportHead}></Route>\r\n              <Route path = \"/laporan/admin\" component = {ReportAdmin}></Route>\r\n              <Route path = \"/laporan/create-bast\" component = {Bast}></Route>\r\n              <Route path=\"/order/order\" component={InputDataOrder} />\r\n              <Route exact path=\"/produksi/maintenance\" component={PenjadwalanMaintenance} />\r\n              <Route path=\"/produksi/maintenance/create/:id\" component={CreateMaintenance} />\r\n              <Route path=\"/produksi/maintenance/look-update/:id\" component={LookUpdateMaintenance} />\r\n              <Route path=\"/order/create\" component={CreateOrder} />\r\n              <Route path=\"/order/detail/:id\" component={DetailOrder} />\r\n              <Route path=\"/orderPI/change/:id/:idPi\" component={ChangeOrderPI} />\r\n              <Route path=\"/orderMS/change/:id/:idMs\" component={ChangeOrderMS} />\r\n              <Route path=\"/orderPIMS/change/:id/:idPi/:idMs\" component={ChangeOrderPIMS} />\r\n              <Route path=\"/laporan/verifikasiLaporan\" component={StatusPersetujuanLaporan} />\r\n              <Route path=\"/order/unggah/:id\" component={UnggahDokumenOrder} />\r\n              <Route path=\"/dashboard\" component={Dashboard} />\r\n              <Route path=\"/laporan/finalisasi\" component={FinalisasiLaporan} />\r\n              <Route path=\"/order/ubahStatus\" component={ChangeStatusOrder} />\r\n              <Route component={PageNotFound}/>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n          }\r\n        }\r\n  \r\n\r\nexport default App;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js",["264","265"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport authHeader from '../../services/auth-header';\r\n\r\nconst initState = {\r\n    orderTarget: null,\r\n    file: null,\r\n}\r\n\r\nclass InputDataOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            orderTarget: null,\r\n            isUnggah: false,\r\n            file: null,\r\n            isError: false,\r\n            isFinishedUpload: false,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            isFiltered: false,\r\n            ordersFiltered: [],\r\n        };\r\n        this.handleTambahOrder = this.handleTambahOrder.bind(this);\r\n        this.handleLookUpDetail = this.handleLookUpDetail.bind(this);\r\n        this.handleClickUnggah = this.handleClickUnggah.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\", { headers: authHeader() });\r\n            this.setState({ orders: listOrder.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return <div>Project Installation<br></br>Managed Service</div>;\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif){\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleTambahOrder = () => {\r\n        this.props.history.push(`/order/create`);\r\n    }\r\n\r\n    handleLookUpDetail = (order) => {\r\n        this.props.history.push(`/order/detail/${order.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleClickUnggah = (order) => {\r\n        this.props.history.push(`/order/unggah/${order.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrders = this.state.orders;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrders = this.state.orders.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) || \r\n                order.noPO.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.dateOrder).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.checkStatusOrder(order.verified).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersFiltered : newOrders });\r\n    }\r\n\r\n    render() {\r\n        const { orders, orderTarget, isError, isFiltered, ordersFiltered } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No', \r\n            'Nomor PO', \r\n            'Nama Order', \r\n            'Nama Pelanggan', \r\n            'Perusahaan Pelanggan',\r\n            'Tanggal Masuk',\r\n            'Jenis', \r\n            'Status', \r\n            'Aksi',\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersFiltered.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>])\r\n                        : orders.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <br></br>\r\n            <div className=\"d-flex justify-content-between\" style={{padding: 5}}>\r\n                <Button className={classes.button2} onClick={() => this.handleTambahOrder()}>+ Tambah Order</Button>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(InputDataOrder);","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js",["266","267","268"],"import React from \"react\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport authHeader from '../../services/auth-header';\r\nimport axios from 'axios';\r\n\r\nclass PenjadwalanMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: \"\",\r\n            orderFiltered: [],\r\n            ordersTerassign: [],\r\n            isFiltered: false,\r\n            isAssigned: false,\r\n            ordersTerassignFiltered: [],\r\n            isError: false,\r\n        };\r\n        this.handleCreateSchedule = this.handleCreateSchedule.bind(this);\r\n        this.handleLookSchedule = this.handleLookSchedule.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrderTerassigned = await APIConfig.get(\"/orderMSassigned\", { headers: authHeader() });\r\n            this.setState({ ordersTerassign: listOrderTerassigned.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleCreateSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/create/${idOrderMs}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleLookSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/look-update/${idOrderMs}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrdersAssigned = this.state.ordersTerassign;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrdersAssigned = this.state.ordersTerassign.filter(order => {\r\n                return (order.idOrder.noPO.toLowerCase().includes(value.toLowerCase()) || \r\n                order.idOrder.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.idOrder.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.actualStart).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.actualEnd).toLowerCase().includes(value.toLowerCase()) ||\r\n                order.idUserPic.fullname.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersTerassignFiltered : newOrdersAssigned });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordersTerassign,\r\n            isFiltered,\r\n            ordersTerassignFiltered,\r\n            isError\r\n        } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No','Nomor PO','Nama Pelanggan','Perusahaan Pelanggan', 'Jenis Order', \r\n            'Periode Mulai', 'Periode Selesai', 'PIC Engineer','Aksi'\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersTerassignFiltered.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</Button>\r\n                        </div>])\r\n                        : ordersTerassign.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</Button>\r\n                        </div>\r\n                        ]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <div className=\"d-flex justify-content-end\" style={{padding: 5}}>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PenjadwalanMaintenance;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\board-admin.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Auth\\register.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Auth\\profile.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js",["269"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport TableMaintenanceDetail from \"../../components/Maintenance/mnTableDetail\";\r\nimport MaintenanceList from \"../../components/Maintenance/maintenanceList\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass CreateMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: this.props.match.params.id,\r\n            listMaintenance: [{ index: Math.random(), dateMn: \"\"}],\r\n            orderMSTarget: null,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            noPO: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            fullname: \"\",\r\n            maintained: false,\r\n            finishedSubmitSchedule: false,\r\n            isError: false,\r\n            isCancelToMake: false\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitCreateMaintenance = this.handleSubmitCreateMaintenance.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.cancelToMake = this.cancelToMake.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderMSItem = await APIConfig.get(`/order/detail/MS/${this.state.idOrderMs}`, { headers: authHeader() });\r\n            this.setState({ orderMSTarget: orderMSItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    } \r\n\r\n    handleLookDetail() {\r\n        let orderMS = this.state.orderMSTarget;\r\n        this.setState({ \r\n            actualStart: orderMS.actualStart,\r\n            actualEnd: orderMS.actualEnd,\r\n            noPO: orderMS.idOrder.noPO,\r\n            clientName: orderMS.idOrder.clientName,\r\n            clientOrg: orderMS.idOrder.clientOrg,\r\n            fullname: orderMS.idUserPic.fullname,\r\n        })\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"dateMn\"].includes(e.target.name)) {\r\n            let listMaintenance = [...this.state.listMaintenance]\r\n            listMaintenance[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listMaintenance: [...prevState.listMaintenance, { index: Math.random(), dateMn: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listMaintenance: this.state.listMaintenance.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listMaintenance: this.state.listMaintenance.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    async handleSubmitCreateMaintenance(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listMaintenance.length;i++) {\r\n                if(new Date(this.state.listMaintenance[i].dateMn) < new Date(this.state.actualStart)) {\r\n                    let date = this.getDate(this.state.listMaintenance[i].dateMn);\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Tanggal Maintenance  ${date} tidak boleh dilakukan sebelum periode mulai`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n                if(new Date(this.state.listMaintenance[i].dateMn) > new Date(this.state.actualEnd)) {\r\n                    let date = this.getDate(this.state.listMaintenance[i].dateMn);\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Tanggal Maintenance  ${date} tidak boleh dilakukan setelah periode selesai`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n                if(this.state.listMaintenance[i].dateMn.length === 0) {\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Anda wajib mengisi field Tanggal Maintenance`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            for (let i=0; i<this.state.listMaintenance.length;i++) {\r\n                console.log(this.state.listMaintenance[i].dateMn);\r\n                const data = {\r\n                    dateMn: this.state.listMaintenance[i].dateMn,\r\n                    maintained: this.state.maintained,\r\n                };\r\n                await APIConfig.post(`/produksi/maintenance/tambah/${this.state.orderMSTarget.idOrderMs}`, data, { headers: authHeader() });\r\n                this.loadData();\r\n                this.setState({ finishedSubmitSchedule: true });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleConfirmCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToMake: true });\r\n    }\r\n\r\n    cancelToMake(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToMake: false });\r\n    }\r\n\r\n    render() {\r\n        let{ listMaintenance } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Buat Penjadwalan Maintenance</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                <ReactNotification />\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <TableMaintenanceDetail \r\n                                key={this.state.idOrder}\r\n                                idOrderMs={this.state.idOrderMs}\r\n                                noPO={this.state.noPO}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                fullname={this.state.fullname}\r\n                                periodeMulai={this.getDate(this.state.actualStart)}\r\n                                periodeSelesai={this.getDate(this.state.actualEnd)}\r\n                            />\r\n                            <br></br>\r\n                        </div>\r\n                        <form onChange={this.handleChange} >\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-sm-6\">\r\n                            <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"required\" style={{color: \"black\"}}>Tanggal Maintenance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <MaintenanceList add={this.addNewRow} delete={this.clickOnDelete} listMaintenance={listMaintenance} />\r\n                            </tbody>\r\n                            </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer text-right\">\r\n                            <Button className={classes.button1} onClick={this.handleSubmitCreateMaintenance}>Simpan</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.handleConfirmCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={this.state.isCancelToMake} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal membuat jadwal ?</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={this.cancelToMake}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={this.state.finishedSubmitSchedule} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jadwal Maintenance Berhasil Dibuat</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <div className=\"text-center\">\r\n                                <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                            </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            <Modal show={this.state.isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateMaintenance);","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js",["270"],"import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport OrderDetailForUnggah from \"../../components/Order/orderDetailForUnggah\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass UnggahDokumenOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            file: null,\r\n            verified: false,\r\n            isFinishedUpload: false,\r\n            isError: false,\r\n            isCancel: false,\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.checkTypeOrder = this.checkTypeOrder.bind(this);\r\n        this.handleChangeFile = this.handleChangeFile.bind(this);\r\n        this.checkStatusOrder = this.checkStatusOrder.bind(this);\r\n        this.handleSubmitDocument = this.handleSubmitDocument.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterUnggahDokumen = this.handleAfterUnggahDokumen.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            orderName: order.orderName,\r\n            clientName: order.clientName,\r\n            clientOrg: order.clientOrg,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            verified: order.verified,\r\n        });\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    handleChangeFile(event){\r\n        event.preventDefault();\r\n        this.setState({[event.target.name]: event.target.files[0]});\r\n    }\r\n\r\n    async handleSubmitDocument(event) {\r\n        event.preventDefault();\r\n        if(this.state.file === null || this.state.file === \"\"){\r\n            store.addNotification({\r\n                title: \"Peringatan!\",\r\n                message: \"Anda wajib memasukkan file yang akan diunggah\",\r\n                type: \"warning\",\r\n                container: \"top-left\",\r\n                insert: \"top\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeout\"],\r\n                dismiss: {\r\n                    duration: 7000,\r\n                    showIcon: true,\r\n                },\r\n                width: 500\r\n            });\r\n            return false;\r\n        }\r\n        try {\r\n            let response;\r\n            let newDocument;\r\n\r\n            const dataDocument = new FormData();\r\n            dataDocument.append(\"file\", this.state.file);\r\n            console.log(dataDocument);\r\n            response = await APIConfig.post(`/order/${this.state.orderTarget.idOrder}/document/upload`, dataDocument, { headers: authHeader() });\r\n            newDocument = response.data.result;\r\n            this.loadData();\r\n            this.setState({ isFinishedUpload: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterUnggahDokumen = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isFinishedUpload,\r\n            isError,\r\n            isCancel\r\n        } = this.state;\r\n        \r\n        return(\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Unggah Dokumen Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <OrderDetailForUnggah \r\n                                noPO={this.state.noPO}\r\n                                orderName={this.state.orderName}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                status={this.checkStatusOrder(this.state.verified)}\r\n                            />\r\n                            <br></br>\r\n                            <Form>\r\n                            <Table borderless responsive=\"xl\" size=\"md\">\r\n                                <ReactNotification />\r\n                                <tr>\r\n                                    <td><h5 className=\"d-flex justify-content-center\" style={{color: \"black\"}}>Dokumen Order <p style={{color: \"red\"}}>&nbsp;&nbsp;*</p></h5></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                        <Form.File name=\"file\" onChange={this.handleChangeFile}/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                    <Button className={classes.button2} onClick={this.handleSubmitDocument}>Simpan</Button>\r\n                                        <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button3} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </Table>\r\n                        </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={isFinishedUpload} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dokumen Order Berhasil Diunggah</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterUnggahDokumen()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal mengunggah dokumen ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button3} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UnggahDokumenOrder);","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\DetailUnverifiedOrder\\DetailUnverifiedOrder.js",["271","272","273","274","275","276","277","278","279","280","281","282"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js",["283","284","285","286","287","288","289","290"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Auth\\login.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js",["291"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass ChangeOrderMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderMS = this.handleSubmitChangeOrderMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            actualStart: moment(new Date(ordMS.actualStart)).format(\"YYYY-MM-DD\"),\r\n            actualEnd: moment(new Date(ordMS.actualEnd)).format(\"YYYY-MM-DD\"),\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderMS);\r\n","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js",["292"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass ChangeOrderPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPI = this.handleSubmitChangeOrderPI.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            startPI: moment(new Date(ordPI.startPI)).format(\"YYYY-MM-DD\"),\r\n            deadline: moment(new Date(ordPI.deadline)).format(\"YYYY-MM-DD\"),\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPI}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPI);","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Home.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js",["293","294"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js",["295"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass ChangeOrderPIMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPIMS = this.handleSubmitChangeOrderPIMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`, { headers: authHeader() });\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderPITarget);\r\n            console.log(this.state.orderMSTarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            startPI: moment(new Date(ordPI.startPI)).format(\"YYYY-MM-DD\"),\r\n            deadline: moment(new Date(ordPI.deadline)).format(\"YYYY-MM-DD\"),\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n            actualStart: moment(new Date(ordMS.actualStart)).format(\"YYYY-MM-DD\"),\r\n            actualEnd: moment(new Date(ordMS.actualEnd)).format(\"YYYY-MM-DD\"),\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPIMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPIMS);","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\UnverifiedOrders\\UnverifiedOrders.js",["296","297","298","299"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx",["300","301"],"import React, { Component } from 'react'\r\nimport InstallationProjectService from \"../../services/InstallationProjectService\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\n\r\n\r\nclass ListTaskComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id, //jangan diapus, sblmnya id doang, jadi idPi\r\n            //idTask: this.props.match.params.idTask,\r\n            listTask: []\r\n\r\n        }\r\n        this.addTask = this.addTask.bind(this);\r\n        this.editTask = this.editTask.bind(this);\r\n        this.editProgres = this.editProgres.bind(this);\r\n        this.deleteTask = this.deleteTask.bind(this);\r\n        \r\n    }\r\n\r\n    deleteTask(idTask){\r\n        InstallationProjectService.deleteTask(idTask).then( res => {\r\n            this.setState({listTask: this.state.listTask.filter(task => task.idTask !== idTask)})\r\n        });\r\n        alert(\"Task Berhasil Dihapus\");\r\n    }\r\n\r\n    editTask(id, idTask){\r\n        this.props.history.push(`/update-task/${id}/${idTask}`);\r\n    }\r\n\r\n    editProgres(id, idTask){\r\n        this.props.history.push(`/add-progress/${id}/${idTask}`);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        InstallationProjectService.getListTaskByIdPi(this.state.id).then((res) => {\r\n            this.setState({ listTask: res.data});\r\n        });\r\n        \r\n    }\r\n\r\n\r\n    addTask(idPi){\r\n        this.props.history.push(`/add-task/${idPi}`); //diubah sblmnya idOrder\r\n    }\r\n\r\n    //dibutton tambah jadi idPi, sblmnya id doang\r\n    //edit task jadi nambah idPi\r\n    render() {\r\n        const {piTarget} = this.state;\r\n        return (\r\n            <div className={classes.container}>\r\n            <div>\r\n                <h2 className=\"text-center\">Daftar Task Order</h2>\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                    <button onClick = { () => this.addTask(this.state.id) } className=\"btn btn-primary\">+ Tambah Task</button>\r\n                </div>\r\n                <div className = \"row\">\r\n                    <table className = \"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nama Task</th>\r\n                                <th>Deskripsi Task</th>\r\n                                <th>Progres Task</th>\r\n                                <th>Aksi</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {\r\n                                this.state.listTask.map(\r\n                                    task =>\r\n                                    <tr key = {task.idTask}>\r\n                                        <td>{task.taskName}</td>\r\n                                        <td>{task.description}</td>\r\n                                        <td>{task.percentage + \"%\"}</td>\r\n                                        <td>\r\n                                            <button onClick = { () => this.editTask(this.state.id, task.idTask)} className=\"btn btn-info\">Ubah Task</button>\r\n                                            <button onClick = { () => this.editProgres(this.state.id, task.idTask)} className=\"btn btn-warning\" style={{marginLeft: \"10px\"}}>Ubah Progres</button>\r\n                                            <button onClick = { () => this.deleteTask(task.idTask)} className=\"btn btn-danger\" style={{marginLeft: \"10px\"}}>Hapus Task</button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTaskComponent","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js",["302"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport ServiceList from \"../../components/Services/serviceList\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nconst initState = {\r\n    startPI: \"\",\r\n    deadline:\"\",\r\n    actualStart: \"\",\r\n    actualEnd: \"\",\r\n    listService: [{ index: Math.random(), name: \"\"}],\r\n}\r\n\r\nclass CreateOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            listService: [{ index: Math.random(), name: \"\"}],\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            orderTarget: null,\r\n            verified: false,\r\n            isSubmitOrder: false,\r\n            isSubmitOrderMS: false,\r\n            finishSubmitOrder: false,\r\n            orders: [],\r\n            ordersMS: [],\r\n            orderMSTarget: null,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitTambahOrder = this.handleSubmitTambahOrder.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleSubmitTambahPI = this.handleSubmitTambahPI.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitTambahMS = this.handleSubmitTambahMS.bind(this);\r\n        this.handleSubmitTambahService = this.handleSubmitTambahService.bind(this);\r\n        this.handleSubmitTambahPIMS = this.handleSubmitTambahPIMS.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\", { headers: authHeader() });\r\n            const listOrderMS  = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            this.setState({ orders: listOrder.data });\r\n            this.setState({ orderTarget: this.state.orders[this.state.orders.length - 1] });\r\n            this.setState({ ordersMS: listOrderMS.data });\r\n            this.setState({ orderMSTarget: this.state.ordersMS[this.state.ordersMS.length - 1] });\r\n            //console.log(this.state.orderTarget);\r\n            //console.log(this.state.orderMSTarget);\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"name\"].includes(e.target.name)) {\r\n            let listService = [...this.state.listService]\r\n            listService[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n        if (e.target.checked !== \"projectInstallation\" && e.target.checked !== \"managedService\" && ![\"name\"].includes(e.target.name)) {\r\n            this.setState({ [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listService: [...prevState.listService, { index: Math.random(), name: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listService: this.state.listService.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listService: this.state.listService.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isSubmitOrder: false, isSubmitOrderMS: false, isCancel: false, ...initState });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    async handleSubmitTambahOrder(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            /* if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            } */\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: new Date(),\r\n                verified: this.state.verified\r\n            }\r\n            await APIConfig.post(\"/order/tambah\", data, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState( { isSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitTambahPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            //let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let dateOrd = moment(new Date()).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari tanggal hari ini`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close\r\n            }\r\n            await APIConfig.post(`/order/tambah/PI/${this.state.orderTarget.idOrder}`, data, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n            this.handleCancel(event);\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Data Project Installation gagal disimpan! Masukkan kembali tanggal mulai dan selesai project!\");\r\n            console.log(error);\r\n        }\r\n        //this.handleCancel(event);\r\n    }\r\n\r\n    async handleSubmitTambahMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            //let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let dateOrd = moment(new Date()).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari tanggal hari ini`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated\r\n            };\r\n            await APIConfig.post(`/order/tambah/MS/${this.state.orderTarget.idOrder}`, data, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ isSubmitOrderMS: true});\r\n            this.setState({ isSubmitOrder: false });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Data Managed Service gagal disimpan! Masukkan kembali tanggal periode kontrak!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitTambahPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            //let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let dateOrd = moment(new Date()).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari tanggal hari ini`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari tanggal hari ini`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated\r\n            };\r\n            await APIConfig.post(`/order/tambah/PI/${this.state.orderTarget.idOrder}`, dataPI, { headers: authHeader() });\r\n            await APIConfig.post(`/order/tambah/MS/${this.state.orderTarget.idOrder}`, dataMS, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ isSubmitOrderMS: true});\r\n            this.setState({ isSubmitOrder: false });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Data PI dan MS gagal disimpan! Masukkan kembali tanggal serta periode mulai dan selesai!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmitTambahService(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listService.length;i++) {\r\n                if (this.state.listService[i].name === \"\" || this.state.listService[i].name === null) {\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: \"Anda wajib mengisi field Nama Service\",\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 380\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            for (let i=0; i<this.state.listService.length;i++) {\r\n                const data = {\r\n                    name: this.state.listService[i].name,\r\n                };\r\n                await APIConfig.post(`/ms/${this.state.orderMSTarget.idOrderMs}/createService`, data, { headers: authHeader() });\r\n                this.loadData();\r\n                this.setState({ finishSubmitOrder: true });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n        this.handleCancel(event);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        let { listService } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Tambah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input \r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                {/* <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\"\r\n                                                    defaultValue={dateToday} \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} /> */}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\" style={{color: \"black\"}}>\r\n                                                <label>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahOrder}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.projectInstallation && !this.state.managedService && this.state.isSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\" style={{color: \"black\"}}>\r\n                                    <h5 style={{color: \"black\"}} >Tambah Data PI</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahPI}>Simpan Data PI</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.managedService && !this.state.projectInstallation && this.state.isSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    <h5 style={{color: \"black\"}}>Tambah Data MS</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahMS}>Simpan Data MS</Button>\r\n                                </div>\r\n                            </div>                                            \r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.isSubmitOrderMS} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <form onChange={this.handleChange} >\r\n                    <div className=\"row\" style={{ marginTop: 20 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                            <div className=\"col-sm-10\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header text-center\"><h5 style={{color: \"black\"}}>Tambah Services</h5></div>\r\n                                    <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                        <table className=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"required\" style={{color: \"black\"}}>Nama Services</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <ServiceList add={this.addNewRow} delete={this.clickOnDelete} listService={listService} />\r\n                                        </tbody>\r\n                                        </table>\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                    </div>\r\n                                    <div className=\"card-footer text-center\">\r\n                                        <Button className={classes.button1} onClick={this.handleSubmitTambahService}>Simpan Data Services</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.managedService && this.state.projectInstallation && this.state.isSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <form onChange={this.handleChange} >\r\n                        <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header text-center\">\r\n                                    <h5 style={{color: \"black\"}}>Tambah Data PI-MS</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-center\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitTambahPIMS}>Simpan Data PI-MS</Button>\r\n                                </div>\r\n                            </div>                                            \r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Ditambahkan</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateOrder);","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Homepage\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Progress\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\errors\\PageNotFound\\index.js",["303"],"import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\n\r\nclass PageNotFound extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div id=\"wrapper\" className={classes.container}>\r\n                <div id=\"info\" class=\"text-center\">\r\n                    <h3 class={classes.title}>Halaman tidak ditemukan</h3>\r\n                    <div><a href=\"/\">Kembali ke Halaman Utama</a></div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageNotFound;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\FinalisasiLaporan\\index.js",["304","305","306","307","308","309","310"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ChangeStatusOrder\\index.js",["311","312","313","314","315"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport classes from \"../LaporanInstalasiMaintenance/styles.module.css\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass ChangeStatusOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n\t    listPi: [],\r\n\t    listMs: [],\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isSubmitted: false,\r\n            isErrorMsClosed: false,\r\n            isErrorPiClosed: false,\r\n            orderTarget: null,\r\n            statusMaintenances: [],\r\n            statusMs: \"\",\r\n            statusPi: \"\"\r\n\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleErrorMsClosed = this.handleErrorMsClosed.bind(this);\r\n        this.handleErrorPiClosed = this.handleErrorPiClosed.bind(this);\r\n        this.handleSubmitted = this.handleSubmitted.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified\", { headers: authHeader() } );\r\n            const listPi = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listMs = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            // const services = await APIConfig.get(\"/services\");\r\n            this.setState({ ordersVerified: orders.data, listPi: listPi.data, listMs: listMs.data});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.state.orderTarget);\r\n        try {\r\n            if(this.state.orderTarget.projectInstallation === true){\r\n                // console.log(this.state.orderTarget.idOrderPi);\r\n                const pi = this.getPi(this.state.orderTarget.idOrder);\r\n                if (this.state.statusPi === \"Closed\"){\r\n                    if (pi.percentage === 100){\r\n                        const dataPi = {\r\n                            idOrderPi: pi.idOrderPi,\r\n                            idUserEng: pi.picEngineerPi,\r\n                            percentage: pi.percentage,\r\n                            startPI: pi.startPI,\r\n                            deadline: pi.deadline,\r\n                            dateClosedPI: pi.dateClosedPI,\r\n                            status: this.state.statusPi\r\n                        }\r\n                        console.log(dataPi);\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/pi/${pi.idOrderPi}/updateStatus`, dataPi, { headers: authHeader() });\r\n                        this.handleSubmitted(event, this.state.orderTarget)\r\n                        this.setState({isEdit: false});\r\n                    } else {\r\n                        this.handleErrorPiClosed(event);\r\n                    }\r\n                } else {\r\n                    const dataPi = {\r\n                        idOrderPi: pi.idOrderPi,\r\n                        idUserEng: pi.picEngineerPi,\r\n                        percentage: pi.percentage,\r\n                        startPI: pi.startPI,\r\n                        deadline: pi.deadline,\r\n                        dateClosedPI: pi.dateClosedPI,\r\n                        status: this.state.statusPi\r\n                    }\r\n                    console.log(dataPi);\r\n                    await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/pi/${pi.idOrderPi}/updateStatus`, dataPi, { headers: authHeader() });\r\n                    this.handleSubmitted(event, this.state.orderTarget)\r\n                    this.setState({isEdit: false});\r\n                }\r\n            }\r\n            if(this.state.orderTarget.managedService === true){\r\n                const ms = this.getMs(this.state.orderTarget.idOrder);\r\n                if (this.state.statusMs === \"Closed\"){\r\n                    let listMaintenance = ms.listMaintenance;\r\n                    for(let i=0; i<listMaintenance.length; i++){\r\n                        let maintenance = listMaintenance[i];\r\n                        let booleanStatus = false;\r\n                        if (this.state.statusMaintenances[i] === \"Maintained\"){\r\n                            booleanStatus = true;\r\n                        }\r\n                        const dataMaintenance = {\r\n                            idMaintenance: maintenance.idMaintenance,\r\n                            dateMn: maintenance.dateMn,\r\n                            maintained: booleanStatus\r\n                        }\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/maintenance/${maintenance.idMaintenance}/updateStatus`, dataMaintenance, { headers: authHeader() });\r\n                    }\r\n                    console.log(ms.listMaintenance);\r\n                    const msUpdated = await APIConfig.get(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}`, { headers: authHeader() });\r\n                    console.log(msUpdated.data.listMaintenance);\r\n                    let statusAllMaintenance = true;\r\n                    let listMaintenanceChecked = msUpdated.data.listMaintenance;\r\n                    for(let i=0; i<listMaintenanceChecked.length; i++){\r\n                        let maintenanceCheck = listMaintenanceChecked[i];\r\n                        if (maintenanceCheck.maintained === false){\r\n                            statusAllMaintenance = false;\r\n                        }\r\n                    }\r\n                    if (statusAllMaintenance === true) {\r\n\r\n\r\n                        const dataMs = {\r\n                            idOrderMs: ms.idOrderMs,\r\n                            idUserPic: ms.picEngineerMs,\r\n                            actualStart: ms.actualStart,\r\n                            actualEnd: ms.actualEnd,\r\n                            activated: ms.activated,\r\n                            timeRemaining: ms.timeRemaining,\r\n                            dateClosedMS: ms.dateClosedMS,\r\n                            status: this.state.statusMs\r\n                        }\r\n                        // console.log(dataMs);\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/updateStatus`, dataMs, { headers: authHeader() });\r\n                        this.handleSubmitted(event, this.state.orderTarget)\r\n                        this.setState({isEdit: false});\r\n                    } else {\r\n                        this.handleErrorMsClosed(event);\r\n                    }\r\n                } else {\r\n                    let listMaintenance = ms.listMaintenance;\r\n                    for(let i=0; i<listMaintenance.length; i++){\r\n                        let maintenance = listMaintenance[i];\r\n                        let booleanStatus = false;\r\n                        if (this.state.statusMaintenances[i] === \"Maintained\"){\r\n                            booleanStatus = true;\r\n                        }\r\n                        const dataMaintenance = {\r\n                            idMaintenance: maintenance.idMaintenance,\r\n                            dateMn: maintenance.dateMn,\r\n                            maintained: booleanStatus\r\n                        }\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/maintenance/${maintenance.idMaintenance}/updateStatus`, dataMaintenance, { headers: authHeader() } );\r\n                    }\r\n\r\n                    const dataMs = {\r\n                        idOrderMs: ms.idOrderMs,\r\n                        idUserPic: ms.picEngineerMs,\r\n                        actualStart: ms.actualStart,\r\n                        actualEnd: ms.actualEnd,\r\n                        activated: ms.activated,\r\n                        timeRemaining: ms.timeRemaining,\r\n                        dateClosedMS: ms.dateClosedMS,\r\n                        status: this.state.statusMs\r\n                    }\r\n                    // console.log(dataMs);\r\n                    await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/updateStatus`, { headers: authHeader() });\r\n                    this.handleSubmitted(event, this.state.orderTarget)\r\n                    this.setState({isEdit: false});\r\n                }\r\n\r\n            }\r\n            await this.loadData()\r\n\r\n\r\n        } catch (error) {\r\n            alert(\"Perubahan status order gagal disimpan\");\r\n            // this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleErrorMsClosed(event) {\r\n        event.preventDefault();\r\n        this.setState({isErrorMsClosed: true});\r\n    }\r\n\r\n    handleErrorPiClosed(event) {\r\n        event.preventDefault();\r\n        this.setState({isErrorPiClosed: true});\r\n    }\r\n\r\n    handleSubmitted(event, order) {\r\n        event.preventDefault();\r\n        this.setState({isSubmitted: true, orderTarget: order});\r\n    }\r\n\r\n    // Mengambil order jenis project installation yang dipilih\r\n    getPi(idOrder){\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Mengambil order jenis managed services yang dipilih\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n\r\n        if (ms.length !== 0) {\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkTypeOrder(pi, ms){\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatus(order){\r\n        if (order.projectInstallation === true){\r\n            let pi = this.getPi(order.idOrder)\r\n\t  console.log(order)\r\n\t  console.log(pi)\r\n\t    if (pi.status === null){\r\n\t\treturn \"Inactive\";\t\r\n\t    } else { return pi.status;}\r\n            \r\n        }\r\n        else if (order.managedService === true){\r\n            let ms = this.getMs(order.idOrder)\r\n            if (ms.status === null){\r\n\t\treturn \"Inactive\";\t\r\n\t    } else { return ms.status;}\r\n        }\r\n    }\r\n\r\n    handleEdit(order, listMaintenance) {\r\n        this.setState({isEdit: true, orderTarget: order, listMaintenance: listMaintenance});\r\n        const statusMaintenancesUpdated = this.state.statusMaintenances;\r\n        if (order.projectInstallation === true){\r\n            this.setState({statusPi: this.checkStatus(order)});\r\n        }\r\n        else if (order.managedService === true){\r\n            this.setState({statusMs: this.checkStatus(order)});\r\n\t    let ms = this.getMs(order.idOrder);\r\n            listMaintenance = ms.listMaintenance;\r\n            for(let i=0; i<listMaintenance.length; i++){\r\n\r\n                let maintenance = listMaintenance[i];\r\n                if (maintenance.maintained === true){\r\n                    statusMaintenancesUpdated[i] = \"Maintained\";\r\n                } else {\r\n                    statusMaintenancesUpdated[i] = \"Not Maintained\";\r\n                }\r\n            }\r\n            console.log(statusMaintenancesUpdated);\r\n            this.setState({statusMaintenances: statusMaintenancesUpdated})\r\n        }\r\n    }\r\n\r\n    // Menyaring list order sesuai dengan data yang dimasukkan pada form search\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = this.state.ordersVerified.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n                    order.noPO.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false,\r\n            isErrorMsClosed: false,\r\n            isErrorPiClosed: false,\r\n            isSubmitted: false\r\n        });\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name, value);\r\n        const statusMaintenancesUpdated = this.state.statusMaintenances;\r\n        if( name.substring(0,17) === \"statusMaintenance\"){\r\n            let index = Number(name.substring(17));\r\n            statusMaintenancesUpdated[index] = value;\r\n            this.setState({ statusMaintenances: statusMaintenancesUpdated});\r\n        }else{\r\n            this.setState({ [name]: value});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordersVerified,\r\n            isEdit,\r\n            isErrorMsClosed,\r\n            isErrorPiClosed,\r\n            isSubmitted,\r\n            orderTarget,\r\n            statusMaintenances,\r\n            statusMs,\r\n            statusPi,\r\n        } = this.state;\r\n        let listMaintenance;\r\n        const tableHeaders = ['No.', 'Id Order', 'Nomor PO', 'Perusahaan', 'Tipe', 'Status','Aksi'];\r\n        const tableRows = ordersVerified.map((order) => [\r\n            order.idOrder,\r\n            order.noPO,\r\n            order.clientName,\r\n            this.checkTypeOrder(order.projectInstallation, order.managedService),\r\n            this.checkStatus(order),\r\n            <CustomizedButtons\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"#FD693E\"\r\n                onClick={() => this.handleEdit(order, listMaintenance)}>\r\n                Ubah\r\n            </CustomizedButtons>\r\n        ]);\r\n        const tableMaintenanceHeaders = ['No.', 'Tanggal Maintenance', 'Status'];\r\n        let tableMaintenanceRows;\r\n\r\n\r\n        if(orderTarget !== null){\r\n            if(orderTarget.projectInstallation === true){\r\n            }\r\n            if(orderTarget.managedService === true){\r\n\t\tlet ms = this.getMs(orderTarget.idOrder);\r\n                tableMaintenanceRows = ms.listMaintenance.map((maintenance, index) => [\r\n                    maintenance.dateMn,\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        size=\"lg\"\r\n                        key={index}\r\n                        name={\"statusMaintenance\" + index}\r\n                        value={ statusMaintenances[index] }\r\n                        onChange={this.handleChangeField}>\r\n                        <option value=\"Not Maintained\">Not Maintained</option>\r\n                        <option value=\"Maintained\">Maintained</option>\r\n                    </Form.Control>\r\n                ]);\r\n                listMaintenance = ms.listMaintenance.map((maintenance) => maintenance.idMaintenance);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Daftar Order</h1>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n                <CustomizedTables headers={tableHeaders} rows={tableRows}/>\r\n                <Modal show={isEdit} handleCloseModal={this.handleCancel}>\r\n                    <div><h3 id='titleform' >Form Ubah Status Order</h3></div>\r\n                    {orderTarget !== null ?\r\n                        <><Form>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>Id Order</td>\r\n                                    <td>: {orderTarget.idOrder}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Nomor PO</td>\r\n                                    <td>: {orderTarget.noPO}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Perusahaan</td>\r\n                                    <td>: {orderTarget.clientOrg}</td>\r\n                                </tr>\r\n                                { orderTarget.projectInstallation ?\r\n                                    <><tr>\r\n                                        <td style={{fontWeight: 'bold'}}>Project Installation</td>\r\n                                    </tr>\r\n                                        <tr>\r\n                                            <td>Status</td>\r\n                                            <td><Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"statusPi\"\r\n                                                value={ this.checkStatus(orderTarget) }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"Inactive\">Inactive</option>\r\n                                                <option value=\"In Progress\">In Progress</option>\r\n                                                <option value=\"On Hold\">On Hold</option>\r\n                                                <option value=\"Closed\">Closed</option>\r\n                                            </Form.Control></td>\r\n                                        </tr>\r\n                                        { this.state.isErrorPiClosed ?\r\n                                            <><tr>\r\n                                                <td style={{fontWeight: 'bold', color: \"#fd693e\"}}>Progress order belum 100%</td>\r\n                                            </tr></> : <></>}\r\n                                    </> : <></>}\r\n                                { orderTarget.managedService ?\r\n                                    <><tr>\r\n                                        <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                    </tr>\r\n                                        <tr>\r\n                                            <td>Maintenances</td>\r\n                                            <td>\r\n                                                <><CustomizedTables\r\n                                                    headers={tableMaintenanceHeaders}\r\n                                                    rows={tableMaintenanceRows}>\r\n                                                </CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Status</td>\r\n                                            <td><Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"statusMs\"\r\n                                                value={ this.checkStatus(orderTarget) }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"Inactive\">Inactive</option>\r\n                                                <option value=\"Active\">Active</option>\r\n                                                <option value=\"Closed\">Closed</option>\r\n                                            </Form.Control></td>\r\n                                        </tr>\r\n                                        { this.state.isErrorMsClosed ?\r\n                                            <><tr>\r\n                                                <td style={{fontWeight: 'bold', color: \"#FD693E\"}}>Masih ada maintenance yang belum di-maintain</td>\r\n                                            </tr></> : <></>}\r\n                                    </>: <></>}\r\n                            </table>\r\n                            <div style={{alignItems:'right'}}>\r\n                                <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleSubmit}>\r\n                                    Simpan\r\n                                </CustomizedButtons>\r\n                            </div>\r\n                        </Form></>\r\n                        : <></> }\r\n                </Modal>\r\n                <Modal show={isSubmitted} handleCloseModal={this.handleCancel}>\r\n                    {orderTarget !== null ? <>\r\n                        <div>\r\n                            <h3 id='titleform' >\r\n                                Status Order dengan nomor {orderTarget.noPO} berhasil diubah menjadi\r\n                                {orderTarget.projectInstallation ? \" \" + this.state.statusPi : <></>}\r\n                                {orderTarget.managedService ? \" \" + this.state.statusMs : <></>}\r\n                            </h3>\r\n                        </div></> : <></>}\r\n                    <div style={{alignItems:'right'}}>\r\n                        <CustomizedButtons variant=\"contained\" size=\"medium\" color=\"#FD693E\" onClick={this.handleCancel}>\r\n                            Ok\r\n                        </CustomizedButtons>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ChangeStatusOrder;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Bast\\index.js",["316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport {Form, Card, Table} from \"react-bootstrap\";\r\nimport { Input, FormControlLabel } from \"@material-ui/core\";\r\nimport './style.css';\r\nimport authHeader from '../../services/auth-header';\r\n\r\n\r\nclass Bast extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bast: {\r\n                //\"bast\":{\"idBast\":1,\"bastNum\":\"001/LMD-BAST/020/04/2021\",\"dateHandover\":\"2021-04-21T17:00:00.000+00:00\",\"startPeriod\":null,\"endPeriod\":null},\r\n                //\"order\":{\"idOrder\":1,\"orderName\":\"Proyek Installasi - proyek Ebesha Pacil\",\"clientName\":\"Kamila Kaffah\",\"clientOrg\":\"PT. Pacil\",\"clientDiv\":\"HRGA\",\"clientPIC\":\"PIC\",\"clientEmail\":\"kamila@pacil.id\",\"clientPhone\":\"0888303031\",\"dateOrder\":\"2021-04-01T16:13:09.000+00:00\",\"noPO\":\"PO/2021/04/0001\",\"noSPH\":null,\"description\":\"Order Proyek Instalasi eBesha\",\"hibernateLazyInitializer\":{},\"managedService\":false,\"verified\":false,\"projectInstallation\":true},\r\n                //\"engineer\":{\"id\":\"2\",\"username\":\"hannaj\",\"password\":\"$2a$10$s095279is4QwurSScfHPFOnRLHSzvcibI5bZtbA25s3cmIu5/EvfS\",\"nip\":\"1906020002\",\"fullname\":\"Hanna Jannatunnaiim\",\"surname\":\"Hanna\",\"email\":\"hanna@lmd.co.id\"}\r\n                },\r\n            report: {},\r\n            pi:{},\r\n            mn:{},\r\n            laporanList:[],\r\n            orderList:[],\r\n            bastList:[],\r\n            piList:[],\r\n            mnList:[],\r\n            dateHandover: null,\r\n            isOption: true,\r\n            isToCreate: false,\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isMn: null,\r\n            idPi: null,\r\n            idMn: null,\r\n            endPeriod: null,\r\n            startPeriod: null,\r\n            isPopup: false,\r\n            isError:true,\r\n            errorMsg: \"Seluruh field pada form ini harus terisi sebelum disubmit. Mohon melengkapi data sebelum membuat preview BAST.\",\r\n        };\r\n\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const laporan = await APIConfig.get(\"/laporan\", { headers: authHeader() });\r\n            const order = await APIConfig.get(\"/laporan/order\", { headers: authHeader() });\r\n            const bast = await APIConfig.get(\"/laporan/bast\", { headers: authHeader() });\r\n            const pi = await APIConfig.get(\"/laporan/pi\", { headers: authHeader() });\r\n            const mn = await APIConfig.get(\"/laporan/mn\", { headers: authHeader() });\r\n            this.setState({ laporanList: laporan.data,\r\n                orderList: order.data,\r\n                bastList: bast.data,\r\n                piList: pi.data,\r\n                mnList: mn.data});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleCreatePi(){\r\n        try {\r\n            const Pi = (await APIConfig.get(\"/laporan/bast/create/pi\", { headers: authHeader() })).data;\r\n            const list = APIConfig.get(\"/laporan/pi\", { headers: authHeader() }).data;\r\n            this.loadData()\r\n            //console.log(Pi);\r\n            this.setState({\r\n                listPi: list,\r\n                report: Pi.report,\r\n                bast: Pi.bastPi,\r\n                isOption: false,\r\n                isToCreate: true,\r\n                isMaintenance: false});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleCreateMn(){\r\n        try {\r\n            const Mn = (await APIConfig.get(\"/laporan/bast/create/mn\", { headers: authHeader() })).data;\r\n            this.loadData();\r\n            //console.log(Mn.maintenanceList);\r\n            this.setState({\r\n                listMn: Mn.maintenanceList,\r\n                report: Mn.report,\r\n                bast: Mn.bastMn,\r\n                isOption: false,\r\n                isToCreate: true,\r\n                isMaintenance: true});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleEdit(laporan){\r\n        this.setState({\r\n            isEdit: true,\r\n            laporanTarget:laporan});\r\n    }\r\n\r\n    handleCancel(event){\r\n        event.preventDefault();\r\n        this.setState({isEdit: false, isPopup:false});\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name, value);\r\n        var score;\r\n        var count = 0\r\n\r\n        if(name === \"idMaintenance\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.endPeriod===null\r\n            count++;\r\n            this.setState({mn: value})\r\n            this.setState({isError:score})\r\n        }\r\n        if(name === \"idOrderPi\" && value !== ''){\r\n            this.setState({pi: value})\r\n            this.setState({isError:false})\r\n        }\r\n        if(name === \"dateHandover\" && value !== ''){\r\n            this.setState({dateHandover: value})\r\n            count++;\r\n            //console.log(this.state.dateHandover);\r\n        }\r\n        if(name === \"startPeriod\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.idMaintenance === null ||this.state.endPeriod===null\r\n            count++;\r\n            this.setState({startPeriod: value})\r\n            this.setState({isError:score})\r\n        }\r\n        if(name === \"endPeriod\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.idMaintenance===null\r\n            count++;\r\n            this.setState({endPeriod: value})\r\n            this.setState({isError:score})\r\n        }\r\n\r\n\r\n        if(this.state.mn !== null){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.endPeriod===null\r\n            if(score === false){this.setState({isError:false})}\r\n        } else{\r\n            {this.setState({isError:false})}\r\n        }\r\n        console.log(this.state.isError)\r\n\r\n    }\r\n\r\n    handleSubmit(event){\r\n        let test = this.state.endPeriod;\r\n        if(test === null){\r\n            try{\r\n                let bastPi = {\r\n                    idReport: null,\r\n                    idBast: this.state.bast.idBast,\r\n                    bastNum: this.state.bast.bastNum,\r\n                    dateHandover: this.state.dateHandover,\r\n                    idMaintenance: null,\r\n                    idOrderPi: this.state.pi,\r\n                    startPeriod: null,\r\n                    endPeriod: null,\r\n                };\r\n                this.setState({isPopup: true,\r\n                    isToCreate: false,\r\n                })\r\n                if(this.state.isError === true){\r\n                    alert(this.state.errorMsg);\r\n                    this.setState({isOption:true, isToCreate:false, isPopup: false\r\n                    })\r\n                } if(this.state.isError === false){\r\n                    let res = APIConfig.post(`/laporan/create-bast/pi`, bastPi, { headers: authHeader() })\r\n                    this.setState({isPopup: true,\r\n                    })\r\n                    this.loadData();\r\n                }\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n        else{\r\n            try{\r\n                const dataMn = {\r\n                    idReport: null,\r\n                    idBast: this.state.bast.idBast,\r\n                    bastNum: this.state.bast.bastNum,\r\n                    dateHandover: this.state.dateHandover,\r\n                    idMaintenance: this.state.mn,\r\n                    idOrderPi: null,\r\n                    startPeriod: this.state.startPeriod,\r\n                    endPeriod: this.state.endPeriod,\r\n                };\r\n                if(this.state.isError === true){\r\n                    alert(this.state.errorMsg);\r\n                    this.setState({isOption:true, isToCreate:false, isPopup: false\r\n                    })\r\n                }\r\n                if(this.state.isError === false){\r\n                    let res = APIConfig.post(`/laporan/create-bast/mn`, dataMn, { headers: authHeader() });\r\n                    this.setState({isPopup: true,\r\n                    })\r\n                    this.loadData();\r\n                    console.log(this.state.bast.idOrderPi);\r\n                }\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let {isOption, isToCreate, isMaintenance, isPopup} = this.state;\r\n\r\n        let piList = this.state.piList;\r\n        let mnList = this.state.mnList;\r\n\r\n        const pi = this.state.pi;\r\n        const mn = this.state.mn;\r\n\r\n        return(\r\n            <div>\r\n                {isOption === true && isToCreate === false && isPopup === false?\r\n                <div id=\"buttonoption\">\r\n                    <Card id=\"option\">\r\n                        <h3 id=\"titleGenerate\" >Generate BAST</h3>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleCreatePi()}>Proyek Installasi</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleCreateMn()}>Maintenance</CustomizedButtons>\r\n                    </Card>\r\n\r\n                </div>\r\n                : <div></div>\r\n            }\r\n            {isToCreate === true && isOption === false && isMaintenance === true ?\r\n                <div>\r\n                    <Card >\r\n                        <Form>\r\n                            <table id=\"card-table\">\r\n                                <tr>\r\n                                    <td colSpan={2}><h4 id=\"titleGenerate\" >Create BAST Maintenance</h4></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Maintenance :</h5></td>\r\n                                    <td><Form.Control as=\"select\"  name=\"idMaintenance\"\r\n                                                      onChange={this.handleChangeField} placeholder=\"Maintenance\" title=\"Maintenance\">\r\n                                        <option value=''>-Pilih Maintenance-</option>\r\n                                        {mnList.map((mn, index) => <option key={index} value={mn.idMaintenance}> Maintenance of {mn.dateMn.toString().substr(0,10)} (ID:{mn.idMaintenance}) </option>)}\r\n                                    </Form.Control>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Tanggal Penyerahan:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"dateHandover\" onChange={this.handleChangeField}></Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Periode Awal Maintenance:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"startPeriod\" onChange={this.handleChangeField}> </Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Periode Akhir Maintenance:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"endPeriod\" onChange={this.handleChangeField}></Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={2}>\r\n                                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleSubmit()}>Create Preview BAST</CustomizedButtons>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </Form>\r\n                    </Card>\r\n\r\n                </div>\r\n                :\r\n                <div></div>\r\n            }\r\n                {isToCreate === true && isOption === false && isMaintenance === false && isPopup === false?\r\n                    <div>\r\n                        <Card id=\"option2\">\r\n                            <Form>\r\n                                <table id=\"card-table2\">\r\n                                    <tr>\r\n                                        <td colSpan={2}><h4 id=\"titleGenerate\" >Create BAST Project Installation</h4></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h5>Proyek Installasi:</h5></td>\r\n                                        <td>\r\n\r\n                                            <Form.Control as=\"select\" size=\"lg\" name=\"idOrderPi\"\r\n                                                          onChange={this.handleChangeField}>\r\n                                                <option value=''>-Pilih Proyek Installasi-</option>\r\n                                                {piList.map((pi, index) => <option key={index} value={pi.idOrderPi}>Proyek Installasi - {pi.idOrderPi}</option>)}\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><br></br></td>\r\n                                        <td><br></br></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h5>Tanggal Penyerahan:</h5></td>\r\n                                        <td><Input type=\"date\" name=\"dateHandover\" onChange={this.handleChangeField}></Input></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colSpan={2}>\r\n                                            <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleSubmit()}>Create Preview BAST</CustomizedButtons>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n\r\n                            </Form>\r\n                        </Card>\r\n\r\n                    </div>\r\n                    :\r\n                    <div> </div>\r\n                }\r\n                {isPopup === true?\r\n                    <div id=\"preview\">\r\n                        <Modal show={isPopup} handleCloseModal={this.handleCancel}>\r\n                            <h2 style={{ marginTop: 0, marginBottom: 0}}><b>Preview BAST untuk order telah berhasil dibuat.</b></h2>\r\n                            <a onClick={(event)=>this.handleClose(event)} href={\"/laporan/admin\"}><h6 id=\"highlighted3\"> &#8810; Kembali ke Daftar Laporan</h6></a>\r\n                        </Modal>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Bast;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\HalamanAdmin\\index.js",["329","330","331"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\Dashboard\\index.js",["332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport moment from \"moment\";\r\nimport BarChart from \"../../components/BarChart\";\r\nimport DoughnutChart from \"../../components/DoughnutChart\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            engineers: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            services: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isFailed: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            listPi: [],\r\n            listMs: [],\r\n            messageError: null,\r\n            listNamaBulanPi: [],\r\n            listNamaBulanMs: [],\r\n            piBelumSelesai: 0,\r\n            MsBelumSelesai: 0,\r\n            tepatWaktuTelat: [],\r\n            piMasuk: [],\r\n            piSelesai: [],\r\n            msMasuk: [],\r\n            msSelesai: [],\r\n            setPeriodChart2: false,\r\n            startMonth2: \"01_2021\",\r\n            endMonth2: \"12_2021\",\r\n            setPeriodChart3: false,\r\n            startMonth3: \"01_2021\",\r\n            endMonth3: \"12_2021\",\r\n            setPeriodChart4: false,\r\n            startMonth4: \"01_2021\",\r\n            endMonth4: \"12_2021\",\r\n        };\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n\r\n        this.handleAfterSetPeriod = this.handleAfterSetPeriod.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    // Mengambil dan mengupdate data yang masuk\r\n    async loadData() {\r\n        try {\r\n            console.log(\"kok kesini\")\r\n            const piBelumSelesai = await APIConfig.get(\"orders/pi/belumSelesai\", { headers: authHeader() });\r\n            const msBelumSelesai = await APIConfig.get(\"orders/ms/belumSelesai\", { headers: authHeader() });\r\n            const tepatWaktuTelat = await APIConfig.get(`orders/pi/tepatWaktuTelat/${this.state.startMonth2}/${this.state.endMonth2}`, { headers: authHeader() });\r\n            const listNamaBulanPi = await APIConfig.get(`/orders/pi/namaBulan/${this.state.startMonth3}/${this.state.endMonth3}`, { headers: authHeader() });\r\n            const piMasuk = await APIConfig.get(`/orders/pi/masuk/${this.state.startMonth3}/${this.state.endMonth3}`, { headers: authHeader() });\r\n            const piSelesai = await APIConfig.get(`/orders/pi/selesai/${this.state.startMonth3}/${this.state.endMonth3}`, { headers: authHeader() });\r\n            const listNamaBulanMs = await APIConfig.get(`/orders/ms/namaBulan/${this.state.startMonth4}/${this.state.endMonth4}`, { headers: authHeader() });\r\n            const msMasuk = await APIConfig.get(`/orders/ms/masuk/${this.state.startMonth4}/${this.state.endMonth4}`, { headers: authHeader() });\r\n            const msSelesai = await APIConfig.get(`/orders/ms/selesai/${this.state.startMonth4}/${this.state.endMonth4}`, { headers: authHeader() });\r\n            console.log(this.state.startMonth4);\r\n            // console.log(listPi);\r\n            this.setState({\r\n                piBelumSelesai: piBelumSelesai.data, msBelumSelesai: msBelumSelesai.data,\r\n                tepatWaktuTelat: tepatWaktuTelat.data,\r\n                listNamaBulanPi: listNamaBulanPi.data, piMasuk: piMasuk.data, piSelesai: piSelesai.data,\r\n                listNamaBulanMs: listNamaBulanMs.data, msMasuk: msMasuk.data, msSelesai: msSelesai.data,\r\n            });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Mengubah data yang ditargetkan sesuai dengan isi form\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n        console.log(this.state.startMonth4);\r\n    }\r\n\r\n\r\n    // Memunculkan modal Set Period untuk Chart 2\r\n    handleSetPeriodChart2(event){\r\n        this.setState({setPeriodChart2: true})\r\n    }\r\n\r\n    // Memunculkan modal Set Period untuk Chart 3\r\n    handleSetPeriodChart3(event){\r\n        this.setState({setPeriodChart3: true})\r\n    }\r\n\r\n    // Memunculkan modal Set Period untuk Chart 4\r\n    handleSetPeriodChart4(event){\r\n        this.setState({setPeriodChart4: true})\r\n    }\r\n\r\n    handleAfterSetPeriod(event){\r\n        console.log(\"masuk ke sini\");\r\n        console.log(this.state.startMonth4);\r\n        this.setState({\r\n            setPeriodChart2: false,\r\n            setPeriodChart3: false,\r\n            setPeriodChart4: false\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    // Menutup semua modal\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            isEdit: false,\r\n            isReport: false,\r\n            isExtend: false,\r\n            isReportExtend: false,\r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            services: [],\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            picEngineerMs: null,\r\n            newNoPO: null,\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            isFailed: false,\r\n            isSuccess: false,\r\n            isError: false,\r\n            messageError: null,\r\n            setPeriodChart2: false,\r\n            startMonth2: null,\r\n            endMonth2: null,\r\n            setPeriodChart3: false,\r\n            startMonth3: null,\r\n            endMonth3: null,\r\n            setPeriodChart4: false,\r\n            startMonth4: null,\r\n            endMonth4: null,\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordersVerified,\r\n            isEdit,\r\n            isExtend,\r\n            orderTarget,\r\n            engineers,\r\n            actualStart,\r\n            actualEnd,\r\n            picEngineerMs,\r\n            isAdded,\r\n            timeRemaining,\r\n            isSuccess,\r\n            isFailed,\r\n            isError,\r\n            messageError,\r\n            servicesEngineer,\r\n            servicesEngineerName,\r\n            isReport,\r\n            isReportExtend,\r\n            orderFiltered,\r\n            isFiltered,\r\n            listService,\r\n            services,\r\n            piBelumSelesaiMsBelumSelesai,\r\n            tepatWaktuTelat,\r\n            piMasuk,\r\n            piSelesai,\r\n            listNamaBulanPi,\r\n            lisNamaBulanMs,\r\n            msMasuk,\r\n            msSelesai,\r\n            setPeriodChart2,\r\n            startMonth2,\r\n            endMonth2,\r\n            setPeriodChart3,\r\n            startMonth3,\r\n            endMonth3,\r\n            setPeriodChart4,\r\n            startMonth4,\r\n            endMonth4\r\n        } = this.state;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.container}>\r\n                    <div><h1 className=\"text-center\">Dashboard</h1></div>\r\n                    <Table>\r\n                        <tr>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Jumlah Project Installation dan Managed Services yang Belum Selesai</h1> </div>\r\n                                <Table>\r\n                                    <tr>\r\n                                        <td><h1>{this.state.piBelumSelesai}</h1></td>\r\n                                        <td><h1>{this.state.msBelumSelesai}</h1></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h3>Project Installation</h3></td>\r\n                                        <td><h3>Managed Services</h3></td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </td>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Persentase Penyelesaian Tepat Waktu</h1></div>\r\n                                <DoughnutChart data={this.state.tepatWaktuTelat}></DoughnutChart>\r\n                                <Button\r\n                                    className={classes.button2}\r\n                                    onClick={() => this.handleSetPeriodChart2()}\r\n                                >\r\n                                    Set Period\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Jumlah Project Installation yang Masuk dan Selesai</h1></div>\r\n                                <BarChart namaBulan={this.state.listNamaBulanPi} masuk={this.state.piMasuk} selesai={this.state.piSelesai}></BarChart>\r\n                                <Button\r\n                                    className={classes.button2}\r\n                                    onClick={() => this.handleSetPeriodChart3()}\r\n                                >\r\n                                    Set Period\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Jumlah Managed Services yang Masuk dan Selesai</h1></div>\r\n                                <BarChart namaBulan={this.state.listNamaBulanMs} masuk={this.state.msMasuk} selesai={this.state.msSelesai}></BarChart>\r\n                                <Button\r\n                                    className={classes.button2}\r\n                                    onClick={() => this.handleSetPeriodChart4()}\r\n                                >\r\n                                    Set Period\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    </Table>\r\n                    <Modal\r\n                        show={setPeriodChart2}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.handleCancel}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Set Period\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Table borderless responsive=\"xl\" size=\"sm\">\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>Start Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"startMonth2\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 01_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>End Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"endMonth2\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 12_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                        <td style={{color: \"red\"}}>Format: bulan_tahun</td>\r\n                                        <td className=\"d-flex justify-content-end\">\r\n                                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleAfterSetPeriod}>\r\n                                                Simpan\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        show={setPeriodChart3}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.handleCancel}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Set Period\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Table borderless responsive=\"xl\" size=\"sm\">\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>Start Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"startMonth3\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 01_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>End Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"endMonth3\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 12_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                        <td style={{color: \"red\"}}>Format: bulan_tahun</td>\r\n                                        <td className=\"d-flex justify-content-end\">\r\n                                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleAfterSetPeriod}>\r\n                                                Simpan\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        show={setPeriodChart4}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.handleCancel}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Set Period\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Table borderless responsive=\"xl\" size=\"sm\">\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>Start Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"startMonth4\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 01_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>End Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"endMonth4\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 12_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                        <td style={{color: \"red\"}}>Format: bulan_tahun</td>\r\n                                        <td className=\"d-flex justify-content-end\">\r\n                                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleAfterSetPeriod}>\r\n                                                Simpan\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\APIConfig.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\auth-header.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ReportAdmin\\index.js",["371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ReportFinance\\index.js",["407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetail.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Services\\serviceList.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js",["433","434"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ProjectInstallation = (props) => {\r\n    const { \r\n        idOrderPi,\r\n        startPI, \r\n        deadline,\r\n        percentage,\r\n        close } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`ID Project Installation: ${idOrderPi}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Tanggal Mulai Proyek: ${startPI}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Tanggal Selesai Proyek: ${deadline}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Progres Pengerjaan: ${percentage} %`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Status: ${close}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectInstallation;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\containers\\ReportHead\\index.js",["435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\ManagedService\\msDetail.js",["468","469","470"],"import React from \"react\";\r\nimport ServiceList from \"../Services/serviceList\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Order from \"../Order/orderDetail\";\r\n\r\nconst ManagedService = (props) => {\r\n    const { \r\n        idOrderMs,\r\n        actualStart,\r\n        actualEnd,\r\n        activated\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`ID Managed Service: ${idOrderMs}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Periode Mulai: ${actualStart}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Periode Selesai: ${actualEnd}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"form-group\">\r\n                        <p style={{color: \"black\"}}>{`Status: ${activated}`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagedService;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\services\\InstallationProjectService.js",["471"],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js",["472"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Laporan = (props) => {\r\n    const { \r\n        reportNum,\r\n        reportName,\r\n        noPO,\r\n        clientOrg,\r\n        statusApproval,\r\n        uploadedDate,\r\n         } = props;\r\n    return (\r\n        <div>\r\n            <p style={{color: \"black\"}}>{`Nomor Laporan: ${reportNum}`}</p>\r\n            <p style={{color: \"black\"}}>{`Nama Laporan: ${reportName}`}</p>\r\n            <p style={{color: \"black\"}}>{`Nomor PO: ${noPO}`}</p>\r\n            <p style={{color: \"black\"}}>{`Perusahaan Pelanggan: ${clientOrg}`}</p>\r\n            <p style={{color: \"black\"}}>{`Status: ${statusApproval}`}</p>\r\n            <p style={{color: \"black\"}}>{`Tanggal Dibuat: ${uploadedDate}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Laporan;","C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\DoughnutChart\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\BarChart\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Modal\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\final-docs\\propen-a01-sipel-frontend\\src\\components\\Backdrop\\index.js",[],{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","severity":1,"message":"478","line":6,"column":8,"nodeType":"479","messageId":"480","endLine":6,"endColumn":16},{"ruleId":"477","severity":1,"message":"481","line":9,"column":50,"nodeType":"479","messageId":"480","endLine":9,"endColumn":54},{"ruleId":"477","severity":1,"message":"482","line":11,"column":7,"nodeType":"479","messageId":"480","endLine":11,"endColumn":16},{"ruleId":"477","severity":1,"message":"483","line":119,"column":25,"nodeType":"479","messageId":"480","endLine":119,"endColumn":36},{"ruleId":"477","severity":1,"message":"484","line":5,"column":10,"nodeType":"479","messageId":"480","endLine":5,"endColumn":20},{"ruleId":"477","severity":1,"message":"485","line":6,"column":13,"nodeType":"479","messageId":"480","endLine":6,"endColumn":19},{"ruleId":"477","severity":1,"message":"486","line":10,"column":8,"nodeType":"479","messageId":"480","endLine":10,"endColumn":13},{"ruleId":"477","severity":1,"message":"485","line":7,"column":13,"nodeType":"479","messageId":"480","endLine":7,"endColumn":19},{"ruleId":"477","severity":1,"message":"487","line":120,"column":13,"nodeType":"479","messageId":"480","endLine":120,"endColumn":24},{"ruleId":"477","severity":1,"message":"488","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":25},{"ruleId":"477","severity":1,"message":"489","line":11,"column":8,"nodeType":"479","messageId":"480","endLine":11,"endColumn":19},{"ruleId":"477","severity":1,"message":"485","line":14,"column":13,"nodeType":"479","messageId":"480","endLine":14,"endColumn":19},{"ruleId":"477","severity":1,"message":"490","line":15,"column":10,"nodeType":"479","messageId":"480","endLine":15,"endColumn":15},{"ruleId":"477","severity":1,"message":"491","line":16,"column":8,"nodeType":"479","messageId":"480","endLine":16,"endColumn":25},{"ruleId":"477","severity":1,"message":"492","line":234,"column":13,"nodeType":"479","messageId":"480","endLine":234,"endColumn":17},{"ruleId":"477","severity":1,"message":"493","line":235,"column":13,"nodeType":"479","messageId":"480","endLine":235,"endColumn":21},{"ruleId":"477","severity":1,"message":"494","line":237,"column":13,"nodeType":"479","messageId":"480","endLine":237,"endColumn":28},{"ruleId":"477","severity":1,"message":"495","line":238,"column":13,"nodeType":"479","messageId":"480","endLine":238,"endColumn":28},{"ruleId":"477","severity":1,"message":"496","line":239,"column":13,"nodeType":"479","messageId":"480","endLine":239,"endColumn":34},{"ruleId":"477","severity":1,"message":"497","line":240,"column":13,"nodeType":"479","messageId":"480","endLine":240,"endColumn":33},{"ruleId":"477","severity":1,"message":"498","line":245,"column":15,"nodeType":"479","messageId":"480","endLine":245,"endColumn":29},{"ruleId":"477","severity":1,"message":"499","line":372,"column":43,"nodeType":"479","messageId":"480","endLine":372,"endColumn":55},{"ruleId":"477","severity":1,"message":"500","line":372,"column":69,"nodeType":"479","messageId":"480","endLine":372,"endColumn":78},{"ruleId":"477","severity":1,"message":"501","line":372,"column":80,"nodeType":"479","messageId":"480","endLine":372,"endColumn":94},{"ruleId":"477","severity":1,"message":"502","line":373,"column":13,"nodeType":"479","messageId":"480","endLine":373,"endColumn":27},{"ruleId":"477","severity":1,"message":"503","line":373,"column":29,"nodeType":"479","messageId":"480","endLine":373,"endColumn":43},{"ruleId":"477","severity":1,"message":"483","line":373,"column":45,"nodeType":"479","messageId":"480","endLine":373,"endColumn":56},{"ruleId":"477","severity":1,"message":"504","line":373,"column":81,"nodeType":"479","messageId":"480","endLine":373,"endColumn":89},{"ruleId":"477","severity":1,"message":"505","line":373,"column":91,"nodeType":"479","messageId":"480","endLine":373,"endColumn":100},{"ruleId":"477","severity":1,"message":"488","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":25},{"ruleId":"477","severity":1,"message":"488","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":25},{"ruleId":"477","severity":1,"message":"488","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":25},{"ruleId":"477","severity":1,"message":"485","line":13,"column":13,"nodeType":"479","messageId":"480","endLine":13,"endColumn":19},{"ruleId":"477","severity":1,"message":"488","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":25},{"ruleId":"477","severity":1,"message":"482","line":13,"column":7,"nodeType":"479","messageId":"480","endLine":13,"endColumn":16},{"ruleId":"477","severity":1,"message":"483","line":188,"column":25,"nodeType":"479","messageId":"480","endLine":188,"endColumn":36},{"ruleId":"477","severity":1,"message":"506","line":188,"column":49,"nodeType":"479","messageId":"480","endLine":188,"endColumn":53},{"ruleId":"477","severity":1,"message":"507","line":188,"column":55,"nodeType":"479","messageId":"480","endLine":188,"endColumn":65},{"ruleId":"477","severity":1,"message":"508","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":17},{"ruleId":"477","severity":1,"message":"509","line":56,"column":16,"nodeType":"479","messageId":"480","endLine":56,"endColumn":24},{"ruleId":"477","severity":1,"message":"488","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":25},{"ruleId":"510","severity":1,"message":"511","line":6,"column":5,"nodeType":"512","messageId":"513","endLine":8,"endColumn":6},{"ruleId":"477","severity":1,"message":"514","line":354,"column":13,"nodeType":"479","messageId":"480","endLine":354,"endColumn":25},{"ruleId":"477","severity":1,"message":"515","line":360,"column":13,"nodeType":"479","messageId":"480","endLine":360,"endColumn":22},{"ruleId":"477","severity":1,"message":"493","line":361,"column":13,"nodeType":"479","messageId":"480","endLine":361,"endColumn":21},{"ruleId":"477","severity":1,"message":"494","line":362,"column":13,"nodeType":"479","messageId":"480","endLine":362,"endColumn":28},{"ruleId":"477","severity":1,"message":"516","line":364,"column":13,"nodeType":"479","messageId":"480","endLine":364,"endColumn":20},{"ruleId":"477","severity":1,"message":"517","line":365,"column":13,"nodeType":"479","messageId":"480","endLine":365,"endColumn":28},{"ruleId":"477","severity":1,"message":"500","line":369,"column":13,"nodeType":"479","messageId":"480","endLine":369,"endColumn":22},{"ruleId":"477","severity":1,"message":"518","line":162,"column":27,"nodeType":"479","messageId":"480","endLine":162,"endColumn":33},{"ruleId":"477","severity":1,"message":"519","line":319,"column":13,"nodeType":"479","messageId":"480","endLine":319,"endColumn":28},{"ruleId":"477","severity":1,"message":"520","line":320,"column":13,"nodeType":"479","messageId":"480","endLine":320,"endColumn":28},{"ruleId":"477","severity":1,"message":"521","line":324,"column":13,"nodeType":"479","messageId":"480","endLine":324,"endColumn":21},{"ruleId":"477","severity":1,"message":"522","line":325,"column":13,"nodeType":"479","messageId":"480","endLine":325,"endColumn":21},{"ruleId":"477","severity":1,"message":"523","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":24},{"ruleId":"477","severity":1,"message":"524","line":6,"column":21,"nodeType":"479","messageId":"480","endLine":6,"endColumn":26},{"ruleId":"477","severity":1,"message":"525","line":7,"column":17,"nodeType":"479","messageId":"480","endLine":7,"endColumn":33},{"ruleId":"526","severity":1,"message":"527","line":131,"column":17,"nodeType":"479","messageId":"528","endLine":131,"endColumn":22},{"ruleId":"526","severity":1,"message":"527","line":146,"column":17,"nodeType":"479","messageId":"528","endLine":146,"endColumn":22},{"ruleId":"526","severity":1,"message":"527","line":152,"column":17,"nodeType":"479","messageId":"528","endLine":152,"endColumn":22},{"ruleId":"477","severity":1,"message":"529","line":153,"column":13,"nodeType":"479","messageId":"480","endLine":153,"endColumn":18},{"ruleId":"526","severity":1,"message":"527","line":160,"column":17,"nodeType":"479","messageId":"528","endLine":160,"endColumn":22},{"ruleId":"530","severity":1,"message":"531","line":163,"column":13,"nodeType":"532","messageId":"533","endLine":163,"endColumn":45},{"ruleId":"477","severity":1,"message":"534","line":191,"column":25,"nodeType":"479","messageId":"480","endLine":191,"endColumn":28},{"ruleId":"477","severity":1,"message":"534","line":220,"column":25,"nodeType":"479","messageId":"480","endLine":220,"endColumn":28},{"ruleId":"477","severity":1,"message":"535","line":241,"column":15,"nodeType":"479","messageId":"480","endLine":241,"endColumn":17},{"ruleId":"477","severity":1,"message":"536","line":242,"column":15,"nodeType":"479","messageId":"480","endLine":242,"endColumn":17},{"ruleId":"477","severity":1,"message":"537","line":154,"column":88,"nodeType":"479","messageId":"480","endLine":154,"endColumn":98},{"ruleId":"477","severity":1,"message":"538","line":154,"column":100,"nodeType":"479","messageId":"480","endLine":154,"endColumn":109},{"ruleId":"477","severity":1,"message":"516","line":154,"column":111,"nodeType":"479","messageId":"480","endLine":154,"endColumn":118},{"ruleId":"477","severity":1,"message":"523","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":24},{"ruleId":"477","severity":1,"message":"539","line":4,"column":24,"nodeType":"479","messageId":"480","endLine":4,"endColumn":28},{"ruleId":"477","severity":1,"message":"485","line":8,"column":8,"nodeType":"479","messageId":"480","endLine":8,"endColumn":14},{"ruleId":"477","severity":1,"message":"540","line":180,"column":13,"nodeType":"479","messageId":"480","endLine":180,"endColumn":27},{"ruleId":"477","severity":1,"message":"541","line":181,"column":13,"nodeType":"479","messageId":"480","endLine":181,"endColumn":19},{"ruleId":"477","severity":1,"message":"542","line":182,"column":13,"nodeType":"479","messageId":"480","endLine":182,"endColumn":21},{"ruleId":"477","severity":1,"message":"483","line":183,"column":13,"nodeType":"479","messageId":"480","endLine":183,"endColumn":24},{"ruleId":"477","severity":1,"message":"543","line":184,"column":13,"nodeType":"479","messageId":"480","endLine":184,"endColumn":22},{"ruleId":"477","severity":1,"message":"544","line":185,"column":13,"nodeType":"479","messageId":"480","endLine":185,"endColumn":24},{"ruleId":"477","severity":1,"message":"545","line":186,"column":13,"nodeType":"479","messageId":"480","endLine":186,"endColumn":22},{"ruleId":"477","severity":1,"message":"546","line":187,"column":13,"nodeType":"479","messageId":"480","endLine":187,"endColumn":26},{"ruleId":"477","severity":1,"message":"547","line":188,"column":13,"nodeType":"479","messageId":"480","endLine":188,"endColumn":20},{"ruleId":"477","severity":1,"message":"548","line":189,"column":13,"nodeType":"479","messageId":"480","endLine":189,"endColumn":26},{"ruleId":"477","severity":1,"message":"515","line":190,"column":13,"nodeType":"479","messageId":"480","endLine":190,"endColumn":22},{"ruleId":"477","severity":1,"message":"549","line":191,"column":13,"nodeType":"479","messageId":"480","endLine":191,"endColumn":21},{"ruleId":"477","severity":1,"message":"516","line":192,"column":13,"nodeType":"479","messageId":"480","endLine":192,"endColumn":20},{"ruleId":"477","severity":1,"message":"550","line":193,"column":13,"nodeType":"479","messageId":"480","endLine":193,"endColumn":25},{"ruleId":"477","severity":1,"message":"551","line":194,"column":13,"nodeType":"479","messageId":"480","endLine":194,"endColumn":29},{"ruleId":"477","severity":1,"message":"552","line":195,"column":13,"nodeType":"479","messageId":"480","endLine":195,"endColumn":33},{"ruleId":"477","severity":1,"message":"553","line":196,"column":13,"nodeType":"479","messageId":"480","endLine":196,"endColumn":21},{"ruleId":"477","severity":1,"message":"554","line":197,"column":13,"nodeType":"479","messageId":"480","endLine":197,"endColumn":27},{"ruleId":"477","severity":1,"message":"555","line":198,"column":13,"nodeType":"479","messageId":"480","endLine":198,"endColumn":26},{"ruleId":"477","severity":1,"message":"556","line":199,"column":13,"nodeType":"479","messageId":"480","endLine":199,"endColumn":23},{"ruleId":"477","severity":1,"message":"557","line":200,"column":13,"nodeType":"479","messageId":"480","endLine":200,"endColumn":24},{"ruleId":"477","severity":1,"message":"558","line":201,"column":13,"nodeType":"479","messageId":"480","endLine":201,"endColumn":21},{"ruleId":"477","severity":1,"message":"559","line":202,"column":13,"nodeType":"479","messageId":"480","endLine":202,"endColumn":41},{"ruleId":"477","severity":1,"message":"560","line":203,"column":13,"nodeType":"479","messageId":"480","endLine":203,"endColumn":28},{"ruleId":"477","severity":1,"message":"561","line":204,"column":13,"nodeType":"479","messageId":"480","endLine":204,"endColumn":20},{"ruleId":"477","severity":1,"message":"562","line":205,"column":13,"nodeType":"479","messageId":"480","endLine":205,"endColumn":22},{"ruleId":"477","severity":1,"message":"563","line":206,"column":13,"nodeType":"479","messageId":"480","endLine":206,"endColumn":28},{"ruleId":"477","severity":1,"message":"564","line":207,"column":13,"nodeType":"479","messageId":"480","endLine":207,"endColumn":27},{"ruleId":"477","severity":1,"message":"565","line":208,"column":13,"nodeType":"479","messageId":"480","endLine":208,"endColumn":20},{"ruleId":"477","severity":1,"message":"566","line":209,"column":13,"nodeType":"479","messageId":"480","endLine":209,"endColumn":22},{"ruleId":"477","severity":1,"message":"567","line":211,"column":13,"nodeType":"479","messageId":"480","endLine":211,"endColumn":24},{"ruleId":"477","severity":1,"message":"568","line":212,"column":13,"nodeType":"479","messageId":"480","endLine":212,"endColumn":22},{"ruleId":"477","severity":1,"message":"569","line":214,"column":13,"nodeType":"479","messageId":"480","endLine":214,"endColumn":24},{"ruleId":"477","severity":1,"message":"570","line":215,"column":13,"nodeType":"479","messageId":"480","endLine":215,"endColumn":22},{"ruleId":"477","severity":1,"message":"571","line":217,"column":13,"nodeType":"479","messageId":"480","endLine":217,"endColumn":24},{"ruleId":"477","severity":1,"message":"572","line":218,"column":13,"nodeType":"479","messageId":"480","endLine":218,"endColumn":22},{"ruleId":"477","severity":1,"message":"573","line":355,"column":15,"nodeType":"479","messageId":"480","endLine":355,"endColumn":21},{"ruleId":"526","severity":1,"message":"574","line":365,"column":21,"nodeType":"479","messageId":"528","endLine":365,"endColumn":25},{"ruleId":"477","severity":1,"message":"575","line":371,"column":13,"nodeType":"479","messageId":"480","endLine":371,"endColumn":17},{"ruleId":"477","severity":1,"message":"576","line":382,"column":15,"nodeType":"479","messageId":"480","endLine":382,"endColumn":21},{"ruleId":"526","severity":1,"message":"577","line":388,"column":25,"nodeType":"479","messageId":"528","endLine":388,"endColumn":38},{"ruleId":"526","severity":1,"message":"578","line":389,"column":25,"nodeType":"479","messageId":"528","endLine":389,"endColumn":29},{"ruleId":"526","severity":1,"message":"577","line":394,"column":25,"nodeType":"479","messageId":"528","endLine":394,"endColumn":38},{"ruleId":"526","severity":1,"message":"578","line":395,"column":25,"nodeType":"479","messageId":"528","endLine":395,"endColumn":29},{"ruleId":"526","severity":1,"message":"579","line":408,"column":17,"nodeType":"479","messageId":"528","endLine":408,"endColumn":20},{"ruleId":"526","severity":1,"message":"580","line":409,"column":17,"nodeType":"479","messageId":"528","endLine":409,"endColumn":22},{"ruleId":"477","severity":1,"message":"581","line":423,"column":13,"nodeType":"479","messageId":"480","endLine":423,"endColumn":22},{"ruleId":"477","severity":1,"message":"582","line":429,"column":13,"nodeType":"479","messageId":"480","endLine":429,"endColumn":16},{"ruleId":"526","severity":1,"message":"583","line":434,"column":13,"nodeType":"479","messageId":"528","endLine":434,"endColumn":16},{"ruleId":"477","severity":1,"message":"584","line":493,"column":9,"nodeType":"479","messageId":"480","endLine":493,"endColumn":15},{"ruleId":"477","severity":1,"message":"585","line":494,"column":9,"nodeType":"479","messageId":"480","endLine":494,"endColumn":15},{"ruleId":"477","severity":1,"message":"514","line":605,"column":43,"nodeType":"479","messageId":"480","endLine":605,"endColumn":55},{"ruleId":"477","severity":1,"message":"586","line":605,"column":57,"nodeType":"479","messageId":"480","endLine":605,"endColumn":77},{"ruleId":"477","severity":1,"message":"587","line":605,"column":79,"nodeType":"479","messageId":"480","endLine":605,"endColumn":87},{"ruleId":"477","severity":1,"message":"515","line":605,"column":89,"nodeType":"479","messageId":"480","endLine":605,"endColumn":98},{"ruleId":"477","severity":1,"message":"493","line":605,"column":100,"nodeType":"479","messageId":"480","endLine":605,"endColumn":108},{"ruleId":"477","severity":1,"message":"494","line":605,"column":110,"nodeType":"479","messageId":"480","endLine":605,"endColumn":125},{"ruleId":"477","severity":1,"message":"549","line":605,"column":127,"nodeType":"479","messageId":"480","endLine":605,"endColumn":135},{"ruleId":"477","severity":1,"message":"516","line":605,"column":137,"nodeType":"479","messageId":"480","endLine":605,"endColumn":144},{"ruleId":"477","severity":1,"message":"517","line":606,"column":13,"nodeType":"479","messageId":"480","endLine":606,"endColumn":28},{"ruleId":"477","severity":1,"message":"550","line":606,"column":44,"nodeType":"479","messageId":"480","endLine":606,"endColumn":56},{"ruleId":"477","severity":1,"message":"500","line":606,"column":70,"nodeType":"479","messageId":"480","endLine":606,"endColumn":79},{"ruleId":"477","severity":1,"message":"588","line":614,"column":13,"nodeType":"479","messageId":"480","endLine":614,"endColumn":17},{"ruleId":"477","severity":1,"message":"589","line":615,"column":13,"nodeType":"479","messageId":"480","endLine":615,"endColumn":18},{"ruleId":"477","severity":1,"message":"590","line":616,"column":13,"nodeType":"479","messageId":"480","endLine":616,"endColumn":19},{"ruleId":"477","severity":1,"message":"536","line":625,"column":17,"nodeType":"479","messageId":"480","endLine":625,"endColumn":19},{"ruleId":"477","severity":1,"message":"591","line":636,"column":21,"nodeType":"479","messageId":"480","endLine":636,"endColumn":30},{"ruleId":"477","severity":1,"message":"581","line":637,"column":21,"nodeType":"479","messageId":"480","endLine":637,"endColumn":30},{"ruleId":"477","severity":1,"message":"592","line":648,"column":21,"nodeType":"479","messageId":"480","endLine":648,"endColumn":34},{"ruleId":"477","severity":1,"message":"593","line":652,"column":21,"nodeType":"479","messageId":"480","endLine":652,"endColumn":29},{"ruleId":"477","severity":1,"message":"594","line":653,"column":21,"nodeType":"479","messageId":"480","endLine":653,"endColumn":23},{"ruleId":"477","severity":1,"message":"582","line":654,"column":21,"nodeType":"479","messageId":"480","endLine":654,"endColumn":24},{"ruleId":"477","severity":1,"message":"595","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":13},{"ruleId":"477","severity":1,"message":"573","line":349,"column":15,"nodeType":"479","messageId":"480","endLine":349,"endColumn":21},{"ruleId":"526","severity":1,"message":"574","line":356,"column":21,"nodeType":"479","messageId":"528","endLine":356,"endColumn":25},{"ruleId":"477","severity":1,"message":"575","line":362,"column":13,"nodeType":"479","messageId":"480","endLine":362,"endColumn":17},{"ruleId":"477","severity":1,"message":"576","line":373,"column":15,"nodeType":"479","messageId":"480","endLine":373,"endColumn":21},{"ruleId":"526","severity":1,"message":"577","line":379,"column":25,"nodeType":"479","messageId":"528","endLine":379,"endColumn":38},{"ruleId":"526","severity":1,"message":"578","line":380,"column":25,"nodeType":"479","messageId":"528","endLine":380,"endColumn":29},{"ruleId":"526","severity":1,"message":"577","line":385,"column":25,"nodeType":"479","messageId":"528","endLine":385,"endColumn":38},{"ruleId":"526","severity":1,"message":"578","line":386,"column":25,"nodeType":"479","messageId":"528","endLine":386,"endColumn":29},{"ruleId":"526","severity":1,"message":"579","line":399,"column":17,"nodeType":"479","messageId":"528","endLine":399,"endColumn":20},{"ruleId":"526","severity":1,"message":"580","line":400,"column":17,"nodeType":"479","messageId":"528","endLine":400,"endColumn":22},{"ruleId":"477","severity":1,"message":"581","line":415,"column":13,"nodeType":"479","messageId":"480","endLine":415,"endColumn":22},{"ruleId":"477","severity":1,"message":"582","line":421,"column":13,"nodeType":"479","messageId":"480","endLine":421,"endColumn":16},{"ruleId":"526","severity":1,"message":"583","line":426,"column":13,"nodeType":"479","messageId":"528","endLine":426,"endColumn":16},{"ruleId":"477","severity":1,"message":"584","line":485,"column":9,"nodeType":"479","messageId":"480","endLine":485,"endColumn":15},{"ruleId":"477","severity":1,"message":"585","line":486,"column":9,"nodeType":"479","messageId":"480","endLine":486,"endColumn":15},{"ruleId":"477","severity":1,"message":"588","line":604,"column":13,"nodeType":"479","messageId":"480","endLine":604,"endColumn":17},{"ruleId":"477","severity":1,"message":"589","line":605,"column":13,"nodeType":"479","messageId":"480","endLine":605,"endColumn":18},{"ruleId":"477","severity":1,"message":"590","line":606,"column":13,"nodeType":"479","messageId":"480","endLine":606,"endColumn":19},{"ruleId":"477","severity":1,"message":"536","line":615,"column":17,"nodeType":"479","messageId":"480","endLine":615,"endColumn":19},{"ruleId":"477","severity":1,"message":"591","line":626,"column":21,"nodeType":"479","messageId":"480","endLine":626,"endColumn":30},{"ruleId":"477","severity":1,"message":"581","line":627,"column":21,"nodeType":"479","messageId":"480","endLine":627,"endColumn":30},{"ruleId":"477","severity":1,"message":"592","line":638,"column":21,"nodeType":"479","messageId":"480","endLine":638,"endColumn":34},{"ruleId":"477","severity":1,"message":"593","line":642,"column":21,"nodeType":"479","messageId":"480","endLine":642,"endColumn":29},{"ruleId":"477","severity":1,"message":"594","line":643,"column":21,"nodeType":"479","messageId":"480","endLine":643,"endColumn":23},{"ruleId":"477","severity":1,"message":"582","line":644,"column":21,"nodeType":"479","messageId":"480","endLine":644,"endColumn":24},{"ruleId":"477","severity":1,"message":"596","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":15},{"ruleId":"477","severity":1,"message":"597","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":13},{"ruleId":"477","severity":1,"message":"573","line":406,"column":15,"nodeType":"479","messageId":"480","endLine":406,"endColumn":21},{"ruleId":"526","severity":1,"message":"574","line":413,"column":21,"nodeType":"479","messageId":"528","endLine":413,"endColumn":25},{"ruleId":"477","severity":1,"message":"575","line":419,"column":13,"nodeType":"479","messageId":"480","endLine":419,"endColumn":17},{"ruleId":"477","severity":1,"message":"576","line":432,"column":15,"nodeType":"479","messageId":"480","endLine":432,"endColumn":21},{"ruleId":"526","severity":1,"message":"577","line":438,"column":25,"nodeType":"479","messageId":"528","endLine":438,"endColumn":38},{"ruleId":"526","severity":1,"message":"578","line":439,"column":25,"nodeType":"479","messageId":"528","endLine":439,"endColumn":29},{"ruleId":"526","severity":1,"message":"577","line":444,"column":25,"nodeType":"479","messageId":"528","endLine":444,"endColumn":38},{"ruleId":"526","severity":1,"message":"578","line":445,"column":25,"nodeType":"479","messageId":"528","endLine":445,"endColumn":29},{"ruleId":"526","severity":1,"message":"579","line":458,"column":17,"nodeType":"479","messageId":"528","endLine":458,"endColumn":20},{"ruleId":"526","severity":1,"message":"580","line":459,"column":17,"nodeType":"479","messageId":"528","endLine":459,"endColumn":22},{"ruleId":"477","severity":1,"message":"581","line":473,"column":13,"nodeType":"479","messageId":"480","endLine":473,"endColumn":22},{"ruleId":"477","severity":1,"message":"582","line":479,"column":13,"nodeType":"479","messageId":"480","endLine":479,"endColumn":16},{"ruleId":"526","severity":1,"message":"583","line":484,"column":13,"nodeType":"479","messageId":"528","endLine":484,"endColumn":16},{"ruleId":"477","severity":1,"message":"584","line":543,"column":9,"nodeType":"479","messageId":"480","endLine":543,"endColumn":15},{"ruleId":"477","severity":1,"message":"585","line":544,"column":9,"nodeType":"479","messageId":"480","endLine":544,"endColumn":15},{"ruleId":"477","severity":1,"message":"514","line":655,"column":43,"nodeType":"479","messageId":"480","endLine":655,"endColumn":55},{"ruleId":"477","severity":1,"message":"586","line":655,"column":57,"nodeType":"479","messageId":"480","endLine":655,"endColumn":77},{"ruleId":"477","severity":1,"message":"587","line":655,"column":79,"nodeType":"479","messageId":"480","endLine":655,"endColumn":87},{"ruleId":"477","severity":1,"message":"515","line":655,"column":89,"nodeType":"479","messageId":"480","endLine":655,"endColumn":98},{"ruleId":"477","severity":1,"message":"493","line":655,"column":100,"nodeType":"479","messageId":"480","endLine":655,"endColumn":108},{"ruleId":"477","severity":1,"message":"494","line":655,"column":110,"nodeType":"479","messageId":"480","endLine":655,"endColumn":125},{"ruleId":"477","severity":1,"message":"549","line":655,"column":127,"nodeType":"479","messageId":"480","endLine":655,"endColumn":135},{"ruleId":"477","severity":1,"message":"516","line":655,"column":137,"nodeType":"479","messageId":"480","endLine":655,"endColumn":144},{"ruleId":"477","severity":1,"message":"517","line":656,"column":13,"nodeType":"479","messageId":"480","endLine":656,"endColumn":28},{"ruleId":"477","severity":1,"message":"550","line":656,"column":44,"nodeType":"479","messageId":"480","endLine":656,"endColumn":56},{"ruleId":"477","severity":1,"message":"500","line":656,"column":70,"nodeType":"479","messageId":"480","endLine":656,"endColumn":79},{"ruleId":"477","severity":1,"message":"536","line":675,"column":17,"nodeType":"479","messageId":"480","endLine":675,"endColumn":19},{"ruleId":"477","severity":1,"message":"591","line":686,"column":21,"nodeType":"479","messageId":"480","endLine":686,"endColumn":30},{"ruleId":"477","severity":1,"message":"581","line":687,"column":21,"nodeType":"479","messageId":"480","endLine":687,"endColumn":30},{"ruleId":"477","severity":1,"message":"592","line":698,"column":21,"nodeType":"479","messageId":"480","endLine":698,"endColumn":34},{"ruleId":"477","severity":1,"message":"593","line":702,"column":21,"nodeType":"479","messageId":"480","endLine":702,"endColumn":29},{"ruleId":"477","severity":1,"message":"594","line":703,"column":21,"nodeType":"479","messageId":"480","endLine":703,"endColumn":23},{"ruleId":"477","severity":1,"message":"582","line":704,"column":21,"nodeType":"479","messageId":"480","endLine":704,"endColumn":24},{"ruleId":"477","severity":1,"message":"489","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":19},{"ruleId":"477","severity":1,"message":"596","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":15},{"ruleId":"477","severity":1,"message":"597","line":4,"column":8,"nodeType":"479","messageId":"480","endLine":4,"endColumn":13},{"ruleId":"477","severity":1,"message":"598","line":12,"column":7,"nodeType":"479","messageId":"480","endLine":12,"endColumn":28},{"ruleId":"477","severity":1,"message":"596","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":15},"no-native-reassign",["599"],"no-negated-in-lhs",["600"],"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'initState' is assigned a value but never used.","'orderTarget' is assigned a value but never used.","'withRouter' is defined but never used.","'moment' is defined but never used.","'axios' is defined but never used.","'newDocument' is assigned a value but never used.","'CustomizedButtons' is defined but never used.","'ServiceList' is defined but never used.","'store' is defined but never used.","'ReactNotification' is defined but never used.","'name' is assigned a value but never used.","'isDelete' is assigned a value but never used.","'isDeleteSuccess' is assigned a value but never used.","'isDeleteService' is assigned a value but never used.","'isCancelChangeService' is assigned a value but never used.","'isCancelToAddService' is assigned a value but never used.","'listServiceNew' is assigned a value but never used.","'reportTarget' is assigned a value but never used.","'reportNum' is assigned a value but never used.","'statusApproval' is assigned a value but never used.","'reportIRtarget' is assigned a value but never used.","'reportMRtarget' is assigned a value but never used.","'isReject' is assigned a value but never used.","'isApprove' is assigned a value but never used.","'flag' is assigned a value but never used.","'isVerified' is assigned a value but never used.","'APIConfig' is defined but never used.","'piTarget' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'isMrUploaded' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'isError' is assigned a value but never used.","'listMaintenance' is assigned a value but never used.","'dataMs' is assigned a value but never used.","'isErrorMsClosed' is assigned a value but never used.","'isErrorPiClosed' is assigned a value but never used.","'statusMs' is assigned a value but never used.","'statusPi' is assigned a value but never used.","'CustomizedTables' is defined but never used.","'Table' is defined but never used.","'FormControlLabel' is defined but never used.","no-redeclare","'score' is already defined.","redeclared","'count' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'res' is assigned a value but never used.","'pi' is assigned a value but never used.","'mn' is assigned a value but never used.","'userTarget' is assigned a value but never used.","'role_name' is assigned a value but never used.","'Card' is defined but never used.","'ordersVerified' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'isExtend' is assigned a value but never used.","'engineers' is assigned a value but never used.","'actualStart' is assigned a value but never used.","'actualEnd' is assigned a value but never used.","'picEngineerMs' is assigned a value but never used.","'isAdded' is assigned a value but never used.","'timeRemaining' is assigned a value but never used.","'isFailed' is assigned a value but never used.","'messageError' is assigned a value but never used.","'servicesEngineer' is assigned a value but never used.","'servicesEngineerName' is assigned a value but never used.","'isReport' is assigned a value but never used.","'isReportExtend' is assigned a value but never used.","'orderFiltered' is assigned a value but never used.","'isFiltered' is assigned a value but never used.","'listService' is assigned a value but never used.","'services' is assigned a value but never used.","'piBelumSelesaiMsBelumSelesai' is assigned a value but never used.","'tepatWaktuTelat' is assigned a value but never used.","'piMasuk' is assigned a value but never used.","'piSelesai' is assigned a value but never used.","'listNamaBulanPi' is assigned a value but never used.","'lisNamaBulanMs' is assigned a value but never used.","'msMasuk' is assigned a value but never used.","'msSelesai' is assigned a value but never used.","'startMonth2' is assigned a value but never used.","'endMonth2' is assigned a value but never used.","'startMonth3' is assigned a value but never used.","'endMonth3' is assigned a value but never used.","'startMonth4' is assigned a value but never used.","'endMonth4' is assigned a value but never used.","'report' is assigned a value but never used.","'bast' is already defined.","'endP' is assigned a value but never used.","'mnList' is assigned a value but never used.","'selectedOrder' is already defined.","'tipe' is already defined.","'end' is already defined.","'start' is already defined.","'deskripsi' is assigned a value but never used.","'sph' is assigned a value but never used.","'doc' is already defined.","'adderX' is assigned a value but never used.","'adderY' is assigned a value but never used.","'isInstallationReport' is assigned a value but never used.","'isUpload' is assigned a value but never used.","'tipe' is assigned a value but never used.","'nomor' is assigned a value but never used.","'status' is assigned a value but never used.","'namaOrder' is assigned a value but never used.","'selectedOrder' is assigned a value but never used.","'picKedua' is assigned a value but never used.","'po' is assigned a value but never used.","'Modal' is defined but never used.","'classes' is defined but never used.","'Order' is defined but never used.","'ADD_TASK_API_BASE_URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]