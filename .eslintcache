[{"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\index.js":"1","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\serviceWorker.js":"2","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\App.js":"4","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\auth.service.js":"5","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\board-admin.component.js":"6","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Home.js":"7","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Auth\\profile.component.js":"8","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Auth\\login.component.js":"9","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Auth\\register.component.js":"10","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js":"11","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js":"12","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js":"13","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\DetailUnverifiedOrder\\DetailUnverifiedOrder.js":"14","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx":"15","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js":"16","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx":"17","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx":"18","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\UnverifiedOrders\\UnverifiedOrders.js":"19","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx":"20","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx":"21","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js":"22","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Homepage\\index.js":"23","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js":"24","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js":"25","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\UpdateSequence\\index.js":"26","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\errors\\PageNotFound\\index.js":"27","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Progress\\index.js":"28","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js":"29","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js":"30","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\user.service.js":"31","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js":"32","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\APIConfig.js":"33","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\auth-header.js":"34","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\HalamanAdmin\\index.js":"35","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeStatusOrder\\index.js":"36","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"37","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Dashboard\\index.js":"38","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Bast\\index.js":"39","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\FinalisasiLaporan\\index.js":"40","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\InstallationProjectService.js":"41","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js":"42","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js":"43","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Services\\serviceList.js":"44","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ManagedService\\msDetail.js":"45","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js":"46","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js":"47","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js":"48","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetail.js":"49","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"50","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"51","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Table\\index.js":"52","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Button\\index.js":"53","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ReportFinance\\index.js":"54","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ReportAdmin\\index.js":"55","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js":"56","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ReportHead\\index.js":"57","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Modal\\index.js":"58","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\BarChart\\index.js":"59","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\DoughnutChart\\index.js":"60","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Backdrop\\index.js":"61","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\OrderAndDoc\\OrderAndDoc.js":"62","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\OrderAndDoc\\DetailOrderAndDoc.js":"63"},{"size":642,"mtime":1628338122252,"results":"64","hashOfConfig":"65"},{"size":5480,"mtime":1628338122253,"results":"66","hashOfConfig":"65"},{"size":375,"mtime":1628338122253,"results":"67","hashOfConfig":"65"},{"size":14924,"mtime":1629104964240,"results":"68","hashOfConfig":"65"},{"size":956,"mtime":1629106814069,"results":"69","hashOfConfig":"65"},{"size":889,"mtime":1628338122221,"results":"70","hashOfConfig":"65"},{"size":1329,"mtime":1628338122209,"results":"71","hashOfConfig":"65"},{"size":1751,"mtime":1628338122204,"results":"72","hashOfConfig":"65"},{"size":3970,"mtime":1628338122204,"results":"73","hashOfConfig":"65"},{"size":7500,"mtime":1628338122205,"results":"74","hashOfConfig":"65"},{"size":7134,"mtime":1628338122238,"results":"75","hashOfConfig":"65"},{"size":7472,"mtime":1628424243826,"results":"76","hashOfConfig":"65"},{"size":13314,"mtime":1628338122227,"results":"77","hashOfConfig":"65"},{"size":15407,"mtime":1629106814380,"results":"78","hashOfConfig":"65"},{"size":2838,"mtime":1628194610798,"results":"79","hashOfConfig":"65"},{"size":10412,"mtime":1628338122248,"results":"80","hashOfConfig":"65"},{"size":4932,"mtime":1628194610752,"results":"81","hashOfConfig":"65"},{"size":5133,"mtime":1628913624778,"results":"82","hashOfConfig":"65"},{"size":14251,"mtime":1629106813988,"results":"83","hashOfConfig":"65"},{"size":4461,"mtime":1628253699566,"results":"84","hashOfConfig":"65"},{"size":4229,"mtime":1628194610752,"results":"85","hashOfConfig":"65"},{"size":19863,"mtime":1628338122237,"results":"86","hashOfConfig":"65"},{"size":834,"mtime":1628338122234,"results":"87","hashOfConfig":"65"},{"size":30833,"mtime":1629106814260,"results":"88","hashOfConfig":"65"},{"size":33608,"mtime":1628338122224,"results":"89","hashOfConfig":"65"},{"size":2911,"mtime":1628338122250,"results":"90","hashOfConfig":"65"},{"size":632,"mtime":1628338122251,"results":"91","hashOfConfig":"65"},{"size":5423,"mtime":1628338122242,"results":"92","hashOfConfig":"65"},{"size":33557,"mtime":1628338122223,"results":"93","hashOfConfig":"65"},{"size":39848,"mtime":1628338122225,"results":"94","hashOfConfig":"65"},{"size":1141,"mtime":1629106814094,"results":"95","hashOfConfig":"65"},{"size":38706,"mtime":1629267239306,"results":"96","hashOfConfig":"65"},{"size":226,"mtime":1629106814148,"results":"97","hashOfConfig":"65"},{"size":352,"mtime":1628338122255,"results":"98","hashOfConfig":"65"},{"size":13586,"mtime":1628338122233,"results":"99","hashOfConfig":"65"},{"size":23732,"mtime":1629208645731,"results":"100","hashOfConfig":"65"},{"size":32948,"mtime":1629307158717,"results":"101","hashOfConfig":"65"},{"size":17975,"mtime":1628338122229,"results":"102","hashOfConfig":"65"},{"size":16409,"mtime":1628338122222,"results":"103","hashOfConfig":"65"},{"size":80394,"mtime":1629307447360,"results":"104","hashOfConfig":"65"},{"size":2354,"mtime":1629135413283,"results":"105","hashOfConfig":"65"},{"size":956,"mtime":1628338122214,"results":"106","hashOfConfig":"65"},{"size":2530,"mtime":1628338122216,"results":"107","hashOfConfig":"65"},{"size":936,"mtime":1628338122219,"results":"108","hashOfConfig":"65"},{"size":1579,"mtime":1629260707209,"results":"109","hashOfConfig":"65"},{"size":1719,"mtime":1628338122218,"results":"110","hashOfConfig":"65"},{"size":1861,"mtime":1629260727956,"results":"111","hashOfConfig":"65"},{"size":60245,"mtime":1629255967049,"results":"112","hashOfConfig":"65"},{"size":4173,"mtime":1628338122217,"results":"113","hashOfConfig":"65"},{"size":26012,"mtime":1629205876536,"results":"114","hashOfConfig":"65"},{"size":33154,"mtime":1628338122240,"results":"115","hashOfConfig":"65"},{"size":1828,"mtime":1628338122220,"results":"116","hashOfConfig":"65"},{"size":802,"mtime":1628338122206,"results":"117","hashOfConfig":"65"},{"size":74042,"mtime":1629297415171,"results":"118","hashOfConfig":"65"},{"size":74705,"mtime":1629297415210,"results":"119","hashOfConfig":"65"},{"size":823,"mtime":1628338122209,"results":"120","hashOfConfig":"65"},{"size":78659,"mtime":1629297415196,"results":"121","hashOfConfig":"65"},{"size":478,"mtime":1628338122217,"results":"122","hashOfConfig":"65"},{"size":1387,"mtime":1628338122206,"results":"123","hashOfConfig":"65"},{"size":920,"mtime":1628338122208,"results":"124","hashOfConfig":"65"},{"size":257,"mtime":1628338122205,"results":"125","hashOfConfig":"65"},{"size":8863,"mtime":1629296743030,"results":"126","hashOfConfig":"65"},{"size":15056,"mtime":1629209056000,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"bfuu9y",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"130"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\index.js",[],["274","275"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\serviceWorker.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\App.js",["276","277"],"import React, { Component } from \"react\";\r\nimport './App.css';\r\nimport InputDataOrder from \"./containers/InputDataOrder/InputDataOrder\";\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Homepage from \"./containers/Homepage\";\r\nimport PenjadwalanMaintenance from \"./containers/PenjadwalanMaintenance/PenjadwalanMaintenance\";\r\nimport CreateMaintenance from \"./containers/CreateMaintenance/CreateMaintenance\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport LookUpdateMaintenance from \"./containers/LookUpdateMaintenance/LookUpdateMaintenance\";\r\nimport CreateOrder from \"./containers/CreateOrder/CreateOrder\";\r\nimport DetailOrder from \"./containers/DetailOrder/DetailOrder\";\r\nimport ChangeOrderPI from \"./containers/ChangeOrderPI/ChangeOrderPI\";\r\nimport ChangeOrderMS from \"./containers/ChangeOrderMS/ChangeOrderMS\";\r\nimport ChangeOrderPIMS from \"./containers/ChangeOrderPIMS/ChangeOrderPIMS\";\r\nimport LaporanInstalasiMaintenance from \"./containers/LaporanInstalasiMaintenance\"\r\nimport StatusPersetujuanLaporan from \"./containers/StatusPersetujuanLaporan/StatusPersetujuanLaporan\";\r\nimport UnggahDokumenOrder from \"./containers/UnggahDokumenOrder/UnggahDokumenOrder\";\r\nimport Progress from \"./containers/Progress\";\r\nimport ReportAdmin from \"./containers/ReportAdmin\";\r\nimport ReportFinance from \"./containers/ReportFinance\";\r\nimport ReportHead from \"./containers/ReportHead\";\r\nimport PenugasanEngineer from \"./containers/PenugasanEngineer\";\r\nimport PeriodeKontrak from \"./containers/PeriodeKontrak\";\r\nimport Bast from \"./containers/Bast\";\r\nimport PageNotFound from \"./errors/PageNotFound\"\r\nimport HalamanAdmin from \"./containers/HalamanAdmin\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport Login from \"./components/Auth/login.component\";\r\nimport Register from \"./components/Auth/register.component\";\r\nimport Profile from \"./components/Auth/profile.component\";\r\nimport Home from \"./components/Home\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport ListVerifiedPiOrder from \"./components/VerifiedPiOrder/ListVerifiedPiOrder\";\r\nimport ListTaskComponent from './components/ListTask/ListTaskComponent';\r\nimport CreateTaskComponent from './components/ListTask/CreateTaskComponent';\r\nimport UpdateTaskComponent from './components/ListTask/UpdateTaskComponent';\r\nimport UpdateTaskProgressComponent from './components/ListTask/UpdateTaskProgressComponent';\r\nimport Dashboard from \"./containers/Dashboard\";\r\nimport ChangeStatusOrder from \"./containers/ChangeStatusOrder\";\r\nimport FinalisasiLaporan from \"./containers/FinalisasiLaporan\";\r\nimport UnverifiedOrders from \"./containers/UnverifiedOrders/UnverifiedOrders\";\r\nimport DetailUnverifiedOrder from \"./containers/DetailUnverifiedOrder/DetailUnverifiedOrder\";\r\nimport UpdateSequence from \"./containers/UpdateSequence\"\r\nimport OrderAndDoc from \"./containers/OrderAndDoc/OrderAndDoc\";\r\nimport DetailOrderAndDoc from \"./containers/OrderAndDoc/DetailOrderAndDoc\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showPeriodeKontrak: false,\r\n      showPenugasanEngineer: false,\r\n      showMengelolaLaporan: false,\r\n\t    showBoardAdmin: false,\r\n      showUpdateSequence: false,\r\n      showHalamanAdmin: false,\r\n      showDeliveryProgress: false,\r\n      showBast: false,\r\n      showProgressOrder: false,\r\n      currentUser: undefined,\r\n      showInputDataOrder: false,\r\n      showPenjadwalanMaintenance: false,\r\n      showStatusPersetujuanLaporan: false,\r\n      showDashboard: false,\r\n      showChangeStatusOrder: false,\r\n      showFinalisasiLaporan:false,\r\n      showOrderStatusVerification: false,\r\n      showOrderDocFinance: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser(); \r\n  \r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showPeriodeKontrak: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showPenugasanEngineer: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showMengelolaLaporan: user.roles.includes(\"ROLE_ENGINEER\"),\r\n\t\t    showBoardAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showHalamanAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showDeliveryProgress: user.roles.includes(\"ROLE_ENGINEER\"),\r\n        showOrderVerification: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showLaporanAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showLaporanFinance: user.roles.includes(\"ROLE_FINANCE\"),\r\n        showLaporanHead: user.roles.includes(\"ROLE_MANAGER\"),\r\n        showInputDataOrderAdmin: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showInputDataOrderDataEntry: user.roles.includes(\"ROLE_DATA_ENTRY\"),\r\n        showPenjadwalanMaintenance: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showProgressOrder: user.roles.includes(\"ROLE_MANAGER\"),\r\n        showBast: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\"),\r\n        showStatusPersetujuanLaporan: user.roles.includes(\"ROLE_MANAGER\"),\r\n        // showDashboard: user.roles.includes(\"ROLE_ADMIN\", \"ROLE_MANAGER\"),\r\n        showChangeStatusOrder: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showOrderStatusVerification: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showFinalisasiLaporan: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showUpdateSequence: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showOrderDocFinance: user.roles.includes(\"ROLE_FINANCE\")\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showPenjadwalanMaintenance, showPeriodeKontrak, showOrderVerification, showPenugasanEngineer, showMengelolaLaporan, showHalamanAdmin, showDeliveryProgress, \r\n    showLaporanAdmin, showOrderStatusVerification, showLaporanFinance, showLaporanHead, showBast, showProgressOrder, showStatusPersetujuanLaporan, showInputDataOrderAdmin, showInputDataOrderDataEntry, showFinalisasiLaporan,  showChangeStatusOrder, showUpdateSequence, showOrderDocFinance} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" id=\"navbar\" variant=\"dark\" style={{ backgroundColor: '#2F3F58' }} sticky=\"top\">\r\n          <Navbar.Brand href=\"/\" style={{ textDecoration: 'none', color: '#F7873F' }}>SIPEL</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                {currentUser ?\r\n                <Nav.Link href=\"/dashboard\" variant=\"dark\" >Dashboard</Nav.Link>: <></>}\r\n                {currentUser && (showInputDataOrderAdmin || showInputDataOrderDataEntry || showOrderVerification || showProgressOrder || showChangeStatusOrder)?\r\n              <NavDropdown title=\"Order\" id=\"collasible-nav-dropdown\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                  {(showInputDataOrderAdmin || showInputDataOrderDataEntry) && (<Nav.Link href=\"/order/order\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Input Data Order</Nav.Link>)}\r\n                  {showOrderStatusVerification && (<Nav.Link href=\"/order/status/verification\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Verifikasi Order</Nav.Link>)}\r\n                  {showProgressOrder && (<Nav.Link href=\"/order/progress\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Progress Delivery</Nav.Link>)}\r\n                  {showChangeStatusOrder && (<Nav.Link href=\"/order/ubahStatus\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Ubah Status</Nav.Link>)}\r\n                  </div>\r\n              </NavDropdown> : <></>}\r\n              {currentUser && (showPenugasanEngineer || showDeliveryProgress || showPeriodeKontrak || showPenjadwalanMaintenance) ?\r\n              <NavDropdown title=\"Produksi\" id=\"collasible-nav-dropdown\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                  {showPenugasanEngineer && (<Nav.Link href=\"/produksi/penugasan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Penugasan</Nav.Link>)}\r\n                  {showDeliveryProgress && (<Nav.Link href=\"/delivery-progress\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Progress Delivery</Nav.Link>)}\r\n                  {showPeriodeKontrak && (<Nav.Link href=\"/produksi/periode-kontrak\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Periode Kontrak</Nav.Link>)}\r\n                  {showPenjadwalanMaintenance && (<Nav.Link href=\"/produksi/maintenance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Penjadwalan Maintenance</Nav.Link>)}\r\n                  \r\n              </div>\r\n              \r\n              </NavDropdown> : <></>}\r\n              {currentUser && (showMengelolaLaporan || showLaporanAdmin || showLaporanFinance || showLaporanHead || showBast || showStatusPersetujuanLaporan || showFinalisasiLaporan)? \r\n              <NavDropdown title=\"Laporan\"  id=\"collasible-nav-dropdown\">\r\n              <div className=\"d-flex justify-content-between\">\r\n              {showMengelolaLaporan && (<Nav.Link href=\"/laporan/daftarLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>)}\r\n              {showLaporanAdmin &&  (<Nav.Link href=\"/laporan/admin\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>)}\r\n              {showLaporanFinance && (<Nav.Link href=\"/laporan/finance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Laporan</Nav.Link>)}\r\n                {showOrderDocFinance && (<Nav.Link href=\"/dokumen/order/finance\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar Order dan Dokumen</Nav.Link>)}\r\n              {showLaporanHead && (<Nav.Link href=\"/laporan/head\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Daftar BAST</Nav.Link>)}\r\n              {showBast && (<Nav.Link href=\"/laporan/create-bast\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Generate BAST</Nav.Link>)}\r\n              {showStatusPersetujuanLaporan && (<Nav.Link href=\"/laporan/verifikasiLaporan\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Verifikasi Laporan</Nav.Link>)}\r\n              {showFinalisasiLaporan && (<Nav.Link href=\"/laporan/finalisasi\" style={{color: \"black\"}} className=\"pl-5 pr-5\">Finalisasi Laporan</Nav.Link>)}\r\n\r\n              </div>\r\n              </NavDropdown> : <></>}\r\n              {showHalamanAdmin && (<Nav.Link href=\"/halaman/admin\">Halaman Admin</Nav.Link>)}\r\n                {showUpdateSequence && (<Nav.Link href=\"/order/changesequence\">Ubah Sequence Order</Nav.Link>)}\r\n              </Nav>\r\n\r\n              {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Nav.Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Nav.Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Nav.Link href={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Nav.Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n\r\n\r\n</Navbar.Collapse>\r\n</Navbar>\r\n\r\n        <div className=\"mt-3\" style={{margin: 90}}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path={[\"/\"]} component={Home} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route path=\"/produksi/penugasan\" component={PenugasanEngineer} />\r\n              <Route path=\"/produksi/periode-kontrak\" component={PeriodeKontrak} />\r\n              <Route path=\"/laporan/daftarLaporan\" component={LaporanInstalasiMaintenance} />\r\n              <Route path=\"/api/test/admin\" component={BoardAdmin} />\r\n              <Route path=\"/halaman/admin\" component={HalamanAdmin} />\r\n              <Route path = \"/delivery-progress\" component = {ListVerifiedPiOrder}></Route>\r\n              <Route path = \"/list-task/:id\" component = {ListTaskComponent}></Route>\r\n              <Route path = \"/add-task/:id\" component = {CreateTaskComponent}></Route>\r\n              <Route path = \"/update-task/:idPi/:idTask\" component = {UpdateTaskComponent}></Route>\r\n              <Route path = \"/add-progress/:idPi/:idTask\" component = {UpdateTaskProgressComponent}></Route>\r\n              <Route path=\"/order/status/verification\" component={UnverifiedOrders} />\r\n              <Route path=\"/order/verification/detail/:id\" component={DetailUnverifiedOrder} />\r\n              <Route path=\"/dokumen/order/finance/:id\" component={DetailOrderAndDoc} />\r\n              <Route path = \"/order/progress\" component = {Progress}></Route>\r\n              <Route path = \"/laporan/finance\" component = {ReportFinance}></Route>\r\n              <Route path=\"/dokumen/order/finance\" component={OrderAndDoc}/>\r\n              <Route path = \"/laporan/head\" component = {ReportHead}></Route>\r\n              <Route path = \"/laporan/admin\" component = {ReportAdmin}></Route>\r\n              <Route path = \"/laporan/create-bast\" component = {Bast}></Route>\r\n              <Route path=\"/order/order\" component={InputDataOrder} />\r\n              <Route exact path=\"/produksi/maintenance\" component={PenjadwalanMaintenance} />\r\n              <Route path=\"/produksi/maintenance/create/:id\" component={CreateMaintenance} />\r\n              <Route path=\"/produksi/maintenance/look-update/:id\" component={LookUpdateMaintenance} />\r\n              <Route path=\"/order/create\" component={CreateOrder} />\r\n              <Route path=\"/order/detail/:id\" component={DetailOrder} />\r\n              <Route path=\"/orderPI/change/:id/:idPi\" component={ChangeOrderPI} />\r\n              <Route path=\"/orderMS/change/:id/:idMs\" component={ChangeOrderMS} />\r\n              <Route path=\"/orderPIMS/change/:id/:idPi/:idMs\" component={ChangeOrderPIMS} />\r\n              <Route path=\"/laporan/verifikasiLaporan\" component={StatusPersetujuanLaporan} />\r\n              <Route path=\"/order/unggah/:id\" component={UnggahDokumenOrder} />\r\n              <Route path=\"/dashboard\" component={Dashboard} />\r\n              <Route path=\"/laporan/finalisasi\" component={FinalisasiLaporan} />\r\n              <Route path=\"/order/ubahStatus\" component={ChangeStatusOrder} />\r\n              <Route path=\"/order/changesequence\" component={UpdateSequence} />\r\n              <Route component={PageNotFound}/>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n          }\r\n        }\r\n  \r\n\r\nexport default App;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\board-admin.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Home.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Auth\\profile.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Auth\\login.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Auth\\register.component.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\PenjadwalanMaintenance\\PenjadwalanMaintenance.js",["278","279","280"],"import React from \"react\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport authHeader from '../../services/auth-header';\r\nimport axios from 'axios';\r\n\r\nclass PenjadwalanMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: \"\",\r\n            orderFiltered: [],\r\n            ordersTerassign: [],\r\n            isFiltered: false,\r\n            isAssigned: false,\r\n            ordersTerassignFiltered: [],\r\n            isError: false,\r\n        };\r\n        this.handleCreateSchedule = this.handleCreateSchedule.bind(this);\r\n        this.handleLookSchedule = this.handleLookSchedule.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrderTerassigned = await APIConfig.get(\"/orderMSassigned\", { headers: authHeader() });\r\n            this.setState({ ordersTerassign: listOrderTerassigned.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleCreateSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/create/${idOrderMs}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleLookSchedule = (idOrderMs) => {\r\n        this.props.history.push(`/produksi/maintenance/look-update/${idOrderMs}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrdersAssigned = this.state.ordersTerassign;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrdersAssigned = this.state.ordersTerassign.filter(order => {\r\n                return (order.idOrder.noPO.toLowerCase().includes(value.toLowerCase()) || \r\n                order.idOrder.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.idOrder.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.actualStart).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.actualEnd).toLowerCase().includes(value.toLowerCase()) ||\r\n                order.idUserPic.fullname.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersTerassignFiltered : newOrdersAssigned });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordersTerassign,\r\n            isFiltered,\r\n            ordersTerassignFiltered,\r\n            isError\r\n        } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No','Nomor PO','Nama Pelanggan','Perusahaan Pelanggan', 'Jenis Order', \r\n            'Periode Mulai', 'Periode Selesai', 'PIC Engineer','Aksi'\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersTerassignFiltered.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</Button>\r\n                        </div>])\r\n                        : ordersTerassign.map((order) =>\r\n                        [order.idOrder.noPO, order.idOrder.clientName, order.idOrder.clientOrg, \r\n                        this.checkTypeOrder(order.idOrder.projectInstallation, order.idOrder.managedService), \r\n                        this.getDate(order.actualStart), this.getDate(order.actualEnd), order.idUserPic.fullname,\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCreateSchedule(order.idOrderMs)}>Buat Jadwal&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleLookSchedule(order.idOrderMs)}>Lihat Jadwal</Button>\r\n                        </div>\r\n                        ]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <div className=\"d-flex justify-content-end\" style={{padding: 5}}>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PenjadwalanMaintenance;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\InputDataOrder\\InputDataOrder.js",["281","282"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport authHeader from '../../services/auth-header';\r\n\r\nconst initState = {\r\n    orderTarget: null,\r\n    file: null,\r\n}\r\n\r\nclass InputDataOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            orderTarget: null,\r\n            isUnggah: false,\r\n            file: null,\r\n            isError: false,\r\n            isFinishedUpload: false,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            isFiltered: false,\r\n            ordersFiltered: [],\r\n        };\r\n        this.handleTambahOrder = this.handleTambahOrder.bind(this);\r\n        this.handleLookUpDetail = this.handleLookUpDetail.bind(this);\r\n        this.handleClickUnggah = this.handleClickUnggah.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/orderList\", { headers: authHeader() });\r\n            this.setState({ orders: listOrder.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return <div>Project Installation<br></br>Managed Service</div>;\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif){\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleTambahOrder = () => {\r\n        this.props.history.push(`/order/create`);\r\n    }\r\n\r\n    handleLookUpDetail = (order) => {\r\n        this.props.history.push(`/order/detail/${order.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleClickUnggah = (order) => {\r\n        this.props.history.push(`/order/unggah/${order.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrders = this.state.orders;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrders = this.state.orders.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) || \r\n                order.noPO.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.dateOrder).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.checkStatusOrder(order.verified).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersFiltered : newOrders });\r\n    }\r\n\r\n    render() {\r\n        const { orders, orderTarget, isError, isFiltered, ordersFiltered } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No', \r\n            'Nomor PO', \r\n            'Nama Order', \r\n            'Nama Pelanggan', \r\n            'Perusahaan Pelanggan',\r\n            'Tanggal Masuk',\r\n            'Jenis', \r\n            'Status', \r\n            'Aksi',\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersFiltered.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>])\r\n                        : orders.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>&nbsp;&nbsp;Lihat&nbsp;&nbsp;&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={() => this.handleClickUnggah(order)}>Unggah</Button>\r\n                        </div>]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Daftar Order</h1>\r\n            <br></br>\r\n            <div className=\"d-flex justify-content-between\" style={{padding: 5}}>\r\n                <Button className={classes.button2} onClick={() => this.handleTambahOrder()}>+ Tambah Order</Button>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(InputDataOrder);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\CreateMaintenance\\CreateMaintenance.js",["283"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport TableMaintenanceDetail from \"../../components/Maintenance/mnTableDetail\";\r\nimport MaintenanceList from \"../../components/Maintenance/maintenanceList\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as moment from \"moment\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport { store } from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass CreateMaintenance extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrderMs: this.props.match.params.id,\r\n            listMaintenance: [{ index: Math.random(), dateMn: \"\"}],\r\n            orderMSTarget: null,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            noPO: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            fullname: \"\",\r\n            maintained: false,\r\n            finishedSubmitSchedule: false,\r\n            isError: false,\r\n            isCancelToMake: false\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewRow = this.addNewRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n        this.clickOnDelete = this.clickOnDelete.bind(this);\r\n        this.handleSubmitCreateMaintenance = this.handleSubmitCreateMaintenance.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.cancelToMake = this.cancelToMake.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderMSItem = await APIConfig.get(`/order/detail/MS/${this.state.idOrderMs}`, { headers: authHeader() });\r\n            this.setState({ orderMSTarget: orderMSItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    } \r\n\r\n    handleLookDetail() {\r\n        let orderMS = this.state.orderMSTarget;\r\n        this.setState({ \r\n            actualStart: orderMS.actualStart,\r\n            actualEnd: orderMS.actualEnd,\r\n            noPO: orderMS.idOrder.noPO,\r\n            clientName: orderMS.idOrder.clientName,\r\n            clientOrg: orderMS.idOrder.clientOrg,\r\n            fullname: orderMS.idUserPic.fullname,\r\n        })\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if ([\"dateMn\"].includes(e.target.name)) {\r\n            let listMaintenance = [...this.state.listMaintenance]\r\n            listMaintenance[e.target.dataset.id][e.target.name] = e.target.value;\r\n        }\r\n    }\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            listMaintenance: [...prevState.listMaintenance, { index: Math.random(), dateMn: \"\" }],\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            listMaintenance: this.state.listMaintenance.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            listMaintenance: this.state.listMaintenance.filter(r => r !== record)\r\n        });\r\n    }\r\n\r\n    async handleSubmitCreateMaintenance(event) {\r\n        event.preventDefault();\r\n        try {\r\n            for (let i=0; i<this.state.listMaintenance.length;i++) {\r\n                if(new Date(this.state.listMaintenance[i].dateMn) < new Date(this.state.actualStart)) {\r\n                    let date = this.getDate(this.state.listMaintenance[i].dateMn);\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Tanggal Maintenance  ${date} tidak boleh dilakukan sebelum periode mulai`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n                if(new Date(this.state.listMaintenance[i].dateMn) > new Date(this.state.actualEnd)) {\r\n                    let date = this.getDate(this.state.listMaintenance[i].dateMn);\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Tanggal Maintenance  ${date} tidak boleh dilakukan setelah periode selesai`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n                if(this.state.listMaintenance[i].dateMn.length === 0) {\r\n                    store.addNotification({\r\n                        title: \"Peringatan!\",\r\n                        message: `Anda wajib mengisi field Tanggal Maintenance`,\r\n                        type: \"warning\",\r\n                        container: \"top-left\",\r\n                        insert: \"top\",\r\n                        animationIn: [\"animated\", \"fadeIn\"],\r\n                        animationOut: [\"animated\", \"fadeout\"],\r\n                        dismiss: {\r\n                            duration: 7000,\r\n                            showIcon: true,\r\n                        },\r\n                        width: 500\r\n                    });\r\n                    return false;\r\n                }\r\n            }\r\n            for (let i=0; i<this.state.listMaintenance.length;i++) {\r\n                console.log(this.state.listMaintenance[i].dateMn);\r\n                const data = {\r\n                    dateMn: this.state.listMaintenance[i].dateMn,\r\n                    maintained: this.state.maintained,\r\n                };\r\n                await APIConfig.post(`/produksi/maintenance/tambah/${this.state.orderMSTarget.idOrderMs}`, data, { headers: authHeader() });\r\n                this.loadData();\r\n                this.setState({ finishedSubmitSchedule: true });\r\n            }\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/produksi/maintenance`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleConfirmCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToMake: true });\r\n    }\r\n\r\n    cancelToMake(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToMake: false });\r\n    }\r\n\r\n    render() {\r\n        let{ listMaintenance } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Buat Penjadwalan Maintenance</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                <ReactNotification />\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <TableMaintenanceDetail \r\n                                key={this.state.idOrder}\r\n                                idOrderMs={this.state.idOrderMs}\r\n                                noPO={this.state.noPO}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                fullname={this.state.fullname}\r\n                                periodeMulai={this.getDate(this.state.actualStart)}\r\n                                periodeSelesai={this.getDate(this.state.actualEnd)}\r\n                            />\r\n                            <br></br>\r\n                        </div>\r\n                        <form onChange={this.handleChange} >\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col-sm-6\">\r\n                            <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"required\" style={{color: \"black\"}}>Tanggal Maintenance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <MaintenanceList add={this.addNewRow} delete={this.clickOnDelete} listMaintenance={listMaintenance} />\r\n                            </tbody>\r\n                            </table>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer text-right\">\r\n                            <Button className={classes.button1} onClick={this.handleSubmitCreateMaintenance}>Simpan</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={this.handleConfirmCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={this.state.isCancelToMake} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal membuat jadwal ?</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                        <Button className={classes.button2} onClick={this.cancelToMake}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={this.state.finishedSubmitSchedule} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Jadwal Maintenance Berhasil Dibuat</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <div className=\"text-center\">\r\n                                <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                            </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            <Modal show={this.state.isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CreateMaintenance);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\DetailUnverifiedOrder\\DetailUnverifiedOrder.js",["284","285","286","287","288","289","290","291","292","293","294","295"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport Order from \"../../components/Order/orderDetail\";\r\nimport ProjectInstallation from \"../../components/ProjectInstallation/piDetail\";\r\nimport ManagedService from \"../../components/ManagedService/msDetail\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CustomizedTables from \"../../components/Table\";\r\n//import Modal from \"../../components/Modal\";\r\nimport ServiceList from \"../../components/Services/serviceList\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport * as moment from \"moment\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nconst initState = {\r\n    name: \"\",\r\n}\r\n\r\nclass DetailUnverifiedOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idOrderPi: \"\",\r\n            idOrderMs: \"\",\r\n            ordersPI: [],\r\n            ordersMS: [],\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            listService: [],\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            verified: false,\r\n            idService: \"\",\r\n            name: \"\",\r\n            serviceTarget: null,\r\n            listServiceNew: [{ index: Math.random(), name: \"\"}],\r\n            documents: [],\r\n            documentTarget: null,\r\n            isError: false,\r\n        }\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.handleLookService = this.handleLookService.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrderPI  = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listOrderMS  = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const docList = await APIConfig.get(`/order/${this.state.idOrder}/documents`, { headers: authHeader() }); //doc order\r\n            this.setState({ ordersPI: listOrderPI.data });\r\n            this.setState({ ordersMS: listOrderMS.data });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ documents: docList.data }); //doc order\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    getPIorder(idOrder) {\r\n        let pi = this.state.ordersPI.filter(pi => pi.idOrder.idOrder === idOrder);\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMSorder(idOrder) {\r\n        let ms = this.state.ordersMS.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        if (ms.length !== 0) {\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    checkActivatedMS(active) {\r\n        if(active === true){\r\n            return \"Activated\";\r\n        } else {\r\n            return \"Not Activated\";\r\n        }\r\n    }\r\n\r\n    checkClosedPI(close) {\r\n        if(close === true){\r\n            return \"Closed\";\r\n        } else {\r\n            return \"Not Closed\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.props.history.push(`/order/status/verification`);\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            noSPH: order.noSPH,\r\n            orderName: order.orderName,\r\n            description: order.description,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            clientName: order.clientName,\r\n            clientDiv: order.clientDiv,\r\n            clientPIC: order.clientPIC,\r\n            clientOrg: order.clientOrg,\r\n            clientPhone: order.clientPhone,\r\n            clientEmail: order.clientEmail,\r\n            dateOrder: order.dateOrder,\r\n            verified: order.verified,\r\n        })\r\n        let isPI = order.projectInstallation;\r\n        let isMS = order.managedService;\r\n        if (isPI === true) {\r\n            const ordPI = this.getPIorder(order.idOrder);\r\n            this.setState({\r\n                idOrderPi: ordPI.idOrderPi,\r\n                startPI: ordPI.startPI,\r\n                deadline: ordPI.deadline,\r\n                close: ordPI.close,\r\n                percentage: ordPI.percentage,\r\n            });\r\n        }\r\n        if (isMS === true) {\r\n            const ordMS = this.getMSorder(order.idOrder);\r\n            this.setState({\r\n                idOrderMs: ordMS.idOrderMs,\r\n                actualStart: ordMS.actualStart,\r\n                actualEnd: ordMS.actualEnd,\r\n                activated: ordMS.activated,\r\n            });\r\n            this.handleLookService();\r\n        }\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/verification`);\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleLookService() {\r\n        try {\r\n            const services = await APIConfig.get(`/order/MS/${this.state.idOrderMs}/listService`,{ headers: authHeader() });\r\n            this.setState({ listService: services.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeService: false, isAddService: false, isDelete: false, isDeleteService: false, ...initState });\r\n    }\r\n\r\n    noCancelChange(event){\r\n        event.preventDefault()\r\n        this.setState({ isCancelChangeService: false });\r\n    }\r\n\r\n    getUrl(document){\r\n\r\n        // const BASE_URL = \"https://propen-a01-sipel.herokuapp.com/order/document/\";\r\n\t\tconst BASE_URL = \"https://propen-a01-sipel.herokuapp.com/order/document/\";\r\n        if(document.fileType === \"application/pdf\"){\r\n            return BASE_URL+document.docName+\"/preview\";\r\n        }else{\r\n            return BASE_URL+document.docName;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            name,\r\n            isDelete,\r\n            isError,\r\n            isDeleteSuccess,\r\n            isDeleteService,\r\n            isCancelChangeService,\r\n            isCancelToAddService,\r\n        } = this.state;\r\n\r\n        let { listService } = this.state;\r\n\r\n        let { listServiceNew } = this.state;\r\n\r\n        let { documents } = this.state; //doc order\r\n\r\n        const tableHeaders = [\r\n            'No', 'Nama Service'\r\n        ];\r\n\r\n        const tableRows = listService.map((service) => [<div className=\"d-flex justify-content-center align-items-center\">{service.name}</div>\r\n        ]);\r\n\r\n        const tableHeadersDoc = ['No', 'Nama Dokumen', 'Tanggal Upload', 'Aksi'];\r\n\r\n        const tableRowsDoc = documents.map((document) => [\r\n            <div className=\"d-flex justify-content-center align-items-center\">{document.docName}</div>,\r\n            <div className=\"d-flex justify-content-center align-items-center\">{this.getDate(document.uploadedDate)}</div>,\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n            <Button className={classes.button1} href={this.getUrl(document)} target = \"_blank\">Preview</Button>\r\n            </div>]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className={classes.title}>Detail Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <Order \r\n                                key={this.state.idOrder}\r\n                                idOrder={this.state.idOrder}\r\n                                noPO={this.state.noPO}\r\n                                noSPH={this.state.noSPH}\r\n                                orderName={this.state.orderName}\r\n                                description={this.state.description}\r\n                                clientName={this.state.clientName}\r\n                                clientDiv={this.state.clientDiv}\r\n                                clientPIC={this.state.clientPIC}\r\n                                clientOrg={this.state.clientOrg}\r\n                                clientPhone={this.state.clientPhone}\r\n                                clientEmail={this.state.clientEmail}\r\n                                dateOrder={this.getDate(this.state.dateOrder)}\r\n                                verified={this.checkStatusOrder(this.state.verified)}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {this.state.projectInstallation \r\n                            ? \r\n                            <>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Detail Data Project Installation</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <ProjectInstallation \r\n                                key={this.state.idOrderPi}\r\n                                idOrderPi={this.state.idOrderPi}\r\n                                startPI={this.getDate(this.state.startPI)}\r\n                                deadline={this.getDate(this.state.deadline)}\r\n                                percentage={this.state.percentage}\r\n                                close={this.checkClosedPI(this.state.close)} /><br></br>\r\n                            </>\r\n                            : \r\n                                <></>\r\n                            }\r\n                            {this.state.managedService\r\n                            ? \r\n                            <>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Detail Data Managed Service</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <ManagedService \r\n                                key={this.state.idOrderMs}\r\n                                idOrderMs={this.state.idOrderMs}\r\n                                actualStart={this.getDate(this.state.actualStart)}\r\n                                actualEnd={this.getDate(this.state.actualEnd)}\r\n                                activated={this.checkActivatedMS(this.state.activated)}/>\r\n                            <br></br>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Daftar Services</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <br></br>\r\n                            <CustomizedTables headers={tableHeaders} rows={tableRows} /><br></br>\r\n                            </>\r\n                            : <></> }\r\n                            {/* doc order */}\r\n                            <br></br>\r\n                            <div className=\"row\">\r\n                            <div className=\"col-sm-6\">\r\n                                <div className=\"form-group\">\r\n                                    <h3 className={classes.subtitle}>Daftar Dokumen Order</h3>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <CustomizedTables headers={tableHeadersDoc} rows={tableRowsDoc} /><br></br>\r\n                        </div>\r\n                        <div className=\"card-footer text-right\">\r\n                            <Button className={classes.button1} onClick={() => this.handleBack()}>&nbsp;Kembali&nbsp;</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DetailUnverifiedOrder);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\VerifiedPiOrder\\ListVerifiedPiOrder.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\UnggahDokumenOrder\\UnggahDokumenOrder.js",["296"],"import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport OrderDetailForUnggah from \"../../components/Order/orderDetailForUnggah\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass UnggahDokumenOrder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            orderTarget: null,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            file: null,\r\n            verified: false,\r\n            isFinishedUpload: false,\r\n            isError: false,\r\n            isCancel: false,\r\n        };\r\n        this.handleLookDetail = this.handleLookDetail.bind(this);\r\n        this.checkTypeOrder = this.checkTypeOrder.bind(this);\r\n        this.handleChangeFile = this.handleChangeFile.bind(this);\r\n        this.checkStatusOrder = this.checkStatusOrder.bind(this);\r\n        this.handleSubmitDocument = this.handleSubmitDocument.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterUnggahDokumen = this.handleAfterUnggahDokumen.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.handleLookDetail();\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleLookDetail() {\r\n        let order = this.state.orderTarget;\r\n        this.setState({\r\n            noPO: order.noPO,\r\n            orderName: order.orderName,\r\n            clientName: order.clientName,\r\n            clientOrg: order.clientOrg,\r\n            projectInstallation: order.projectInstallation,\r\n            managedService: order.managedService,\r\n            verified: order.verified,\r\n        });\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatusOrder(verif) {\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Not Verified\";\r\n        }\r\n    }\r\n\r\n    handleChangeFile(event){\r\n        event.preventDefault();\r\n        this.setState({[event.target.name]: event.target.files[0]});\r\n    }\r\n\r\n    async handleSubmitDocument(event) {\r\n        event.preventDefault();\r\n        if(this.state.file === null || this.state.file === \"\"){\r\n            store.addNotification({\r\n                title: \"Peringatan!\",\r\n                message: \"Anda wajib memasukkan file yang akan diunggah\",\r\n                type: \"warning\",\r\n                container: \"top-left\",\r\n                insert: \"top\",\r\n                animationIn: [\"animated\", \"fadeIn\"],\r\n                animationOut: [\"animated\", \"fadeout\"],\r\n                dismiss: {\r\n                    duration: 7000,\r\n                    showIcon: true,\r\n                },\r\n                width: 500\r\n            });\r\n            return false;\r\n        }\r\n        try {\r\n            let response;\r\n            let newDocument;\r\n\r\n            const dataDocument = new FormData();\r\n            dataDocument.append(\"file\", this.state.file);\r\n            console.log(dataDocument);\r\n            response = await APIConfig.post(`/order/${this.state.orderTarget.idOrder}/document/upload`, dataDocument, { headers: authHeader() });\r\n            newDocument = response.data.result;\r\n            this.loadData();\r\n            this.setState({ isFinishedUpload: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/order`);\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterUnggahDokumen = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            isFinishedUpload,\r\n            isError,\r\n            isCancel\r\n        } = this.state;\r\n        \r\n        return(\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Unggah Dokumen Order</h1>\r\n            <br></br>\r\n            <div className=\"row\" style={{ marginTop: 10 }}>\r\n                <div className=\"col-sm-1\"></div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <OrderDetailForUnggah \r\n                                noPO={this.state.noPO}\r\n                                orderName={this.state.orderName}\r\n                                jenis={this.checkTypeOrder(this.state.projectInstallation, this.state.managedService)}\r\n                                clientName={this.state.clientName}\r\n                                clientOrg={this.state.clientOrg}\r\n                                status={this.checkStatusOrder(this.state.verified)}\r\n                            />\r\n                            <br></br>\r\n                            <Form>\r\n                            <Table borderless responsive=\"xl\" size=\"md\">\r\n                                <ReactNotification />\r\n                                <tr>\r\n                                    <td><h5 className=\"d-flex justify-content-center\" style={{color: \"black\"}}>Dokumen Order <p style={{color: \"red\"}}>&nbsp;&nbsp;*</p></h5></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                        <Form.File name=\"file\" onChange={this.handleChangeFile}/>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"d-flex justify-content-center\">\r\n                                    <Button className={classes.button2} onClick={this.handleSubmitDocument}>Simpan</Button>\r\n                                        <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button3} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </Table>\r\n                        </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal show={isFinishedUpload} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dokumen Order Berhasil Diunggah</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterUnggahDokumen()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal mengunggah dokumen ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button3} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UnggahDokumenOrder);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\ListTaskComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\UnverifiedOrders\\UnverifiedOrders.js",["297","298","299","300"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Form, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport authHeader from '../../services/auth-header';\r\n\r\n\r\nconst initState = {\r\n    orderTarget: null,\r\n    file: null,\r\n}\r\n\r\nclass UnverifiedOrders extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            orders: [],\r\n            orderTarget: null,\r\n            file: null,\r\n            isError: false,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            isFiltered: false,\r\n            isEditStatus: false,\r\n            isFailed: false,\r\n            isVerified: false,\r\n            flag: \"\",\r\n            isSuccess: false,\r\n            messageError: null,\r\n            ordersFiltered: []\r\n        };\r\n        this.handleLookUpDetail = this.handleLookUpDetail.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.handleVerification = this.handleVerification.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const listOrder  = await APIConfig.get(\"/unverifiedOrders\", { headers: authHeader() });\r\n            this.setState({ orders: listOrder.data });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isError: false,\r\n            noPO: \"\",\r\n            orderName: \"\",\r\n            clientName: \"\",\r\n            clientOrg: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            isFiltered: false,\r\n            isVerified: false,\r\n            isFailed: false,\r\n            messageError: null,\r\n            flag: \"\",\r\n            isSuccess: false,\r\n            orderTarget: null,\r\n            isEditStatus: false\r\n            \r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    checkTypeOrder(pi, ms) {\r\n        if(pi === true && ms === true){\r\n            return <div>Project Installation<br></br>Managed Service</div>;\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    handleVerification(order) {\r\n        this.setState({ isEditStatus: true, orderTarget: order });\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false, messageError: null });\r\n    }\r\n\r\n    handleChangeField= (event) => {\r\n        this.setState({flag: event.target.value});\r\n    }\r\n\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n        console.log('flag ' + JSON.stringify(this.state.flag));\r\n        if(this.state.flag === \"\"){\r\n            return this.setState({isFailed: true, messageError: \"Status Verifikasi wajib dipilih\"});\r\n        }\r\n        this.handleSave(event);\r\n    }\r\n\r\n    handleSave = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.flag === \"Pending\"){\r\n            let order = {idOrder: this.state.orderTarget.idOrder, isVerified: false};\r\n            console.log('order => ' + JSON.stringify(order));\r\n            // const URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/status/verification\";\r\n            const URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/status/verification\";\r\n            axios.put(URL, order, { headers: authHeader() });\r\n            this.setState({\r\n            isSuccess: true});\r\n        }\r\n\r\n        if (this.state.flag === \"Verified\"){\r\n            let order = {idOrder: this.state.orderTarget.idOrder, isVerified: true};\r\n            console.log('order => ' + JSON.stringify(order));\r\n\r\n            // const URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/status/verification\";\r\n            const URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/status/verification\";\r\n            axios.put(URL, order, { headers: authHeader() });\r\n            this.setState({\r\n            isSuccess: true});\r\n        }\r\n        \r\n    }\r\n\r\n    checkStatusOrder(verif){\r\n        if(verif === true){\r\n            return \"Verified\";\r\n        }else {\r\n            return \"Pending\";\r\n        }\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                        \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n    handleLookUpDetail = (order) => {\r\n        this.props.history.push(`/order/verification/detail/${order.idOrder}`);\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newOrders = this.state.orders;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrders = this.state.orders.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) || \r\n                order.noPO.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.clientOrg.toLowerCase().includes(value.toLowerCase()) ||\r\n                this.getDate(order.dateOrder).toLowerCase().includes(value.toLowerCase()) ||\r\n                this.checkStatusOrder(order.verified).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ ordersFiltered : newOrders });\r\n    }\r\n\r\n    render() {\r\n        const { orders, orderTarget, isSuccess, flag, isVerified, isError, isFiltered, ordersFiltered, isEditStatus, isFailed, messageError } = this.state;\r\n\r\n        const tableHeaders = [\r\n            'No', \r\n            'Nomor PO', \r\n            'Nama Order', \r\n            'Nama Pelanggan', \r\n            'Perusahaan Pelanggan',\r\n            'Tanggal Masuk',\r\n            'Jenis', \r\n            'Status', \r\n            'Aksi',\r\n        ];\r\n\r\n        const tableRows = isFiltered ? ordersFiltered.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>Detail</Button>\r\n                        <Button className={classes.button5} onClick={() => this.handleVerification(order)} style={{marginLeft: \"5px\"}}>Verifikasi</Button>\r\n                        </div>])\r\n                        : orders.map((order) => [order.noPO, order.orderName, order.clientName, order.clientOrg,\r\n                        this.getDate(order.dateOrder), this.checkTypeOrder(order.projectInstallation, order.managedService), \r\n                        this.checkStatusOrder(order.verified),\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} onClick={() => this.handleLookUpDetail(order)}>Detail</Button>\r\n                        <Button className={classes.button5} onClick={() => this.handleVerification(order)} style={{marginLeft: \"5px\"}}>Verifikasi</Button>\r\n                        </div>]);\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <div className=\"content\">\r\n            <br></br>\r\n            <h1 className=\"text-center\">Daftar Order Belum Terverifikasi</h1>\r\n            <br></br>\r\n            <div className=\"d-flex justify-content-between\" style={{padding: 5}}>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n            </div>\r\n            <br></br>\r\n            <CustomizedTables headers={tableHeaders} rows={tableRows} />\r\n\r\n            <Modal\r\n                    show={isEditStatus}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        \r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Ubah Status Verifikasi\r\n                    </Modal.Title>\r\n                        \r\n                    </Modal.Header>\r\n                        <Modal.Body>\r\n                               { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        <div>{messageError}</div>\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                               : <></> }\r\n                            <p>\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        <tr>\r\n                                            <td><p className=\"d-flex\">Pilih Status<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td>\r\n                                                <Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"flag\"\r\n                                                value={ this.state.value }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"\">Belum Pilih</option>\r\n                                                <option value=\"Verified\">Verified</option>\r\n                                                <option value=\"Pending\">Pending</option>\r\n                                                </Form.Control>   \r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib dipilih</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                    <Button variant=\"primary\" className={classes.button1} onClick={this.handleValidation}>\r\n                                                        Simpan\r\n                                                    </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </Table>\r\n                                </Form>\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={isSuccess}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                                <br></br>\r\n                                <div className=\"d-flex justify-content-center\"><strong>{\"Status verifikasi order berhasil diubah menjadi \" + this.state.flag} </strong></div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                </div> \r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button className=\"btn btn-success\" onClick={this.handleCancel}>Kembali</Button>\r\n                                </div>\r\n                                <br></br>\r\n                                                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n\r\n            <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(UnverifiedOrders);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\CreateTaskComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ListTask\\UpdateTaskProgressComponent.jsx",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\LookUpdateMaintenance\\LookUpdateMaintenance.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Homepage\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\StatusPersetujuanLaporan\\StatusPersetujuanLaporan.js",["301","302"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport LaporanDetail from \"../../components/Laporan/laporanUbahStatusForm\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nconst initState = {\r\n    statusApproval: \"\",\r\n    isReject: false,\r\n    notes: \"\",\r\n}\r\n\r\nclass StatusPersetujuanLaporan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            reports: [],\r\n            listIr: [],\r\n            listMr: [],\r\n            listPi: [],\r\n            listMs: [],\r\n            listMaintenance: [],\r\n            reportsFiltered: [],\r\n            isInstallationReport: false,\r\n            isMrUploaded: false,\r\n            reportTarget: null,\r\n            orderTarget: null,\r\n            maintenanceTarget: null,\r\n            orderByPO: null,\r\n            file: null,\r\n            notes: \"\",\r\n            reportNum: null,\r\n            statusApproval: \"\",\r\n            reportIRtarget: null,\r\n            reportMRtarget: null,\r\n            isChangeStatus: false,\r\n            isReject: false,\r\n            isApprove: false,\r\n            finishedSubmitChangeStatus: false,\r\n            isError: false,\r\n            isCancelToVerif: false,\r\n            isNotes: false,\r\n            role: null,\r\n            notesPreview: null\r\n        };\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleSubmitChangeStatusIR = this.handleSubmitChangeStatusIR.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterChangeStatus = this.handleAfterChangeStatus.bind(this);\r\n        this.onValueChangeApprove = this.onValueChangeApprove.bind(this);\r\n        this.onValueChangeReject = this.onValueChangeReject.bind(this);\r\n        this.handleSubmitChangeStatusMR = this.handleSubmitChangeStatusMR.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n        this.cancelChange = this.cancelChange.bind(this);\r\n        this.handleConfirmToCancel = this.handleConfirmToCancel.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerifiedReport\", { headers: authHeader() });\r\n            const reports = await APIConfig.get(\"/reportsIrMr\", { headers: authHeader() });\r\n            const listIr = await APIConfig.get(\"/reports/ir\", { headers: authHeader() });\r\n            const listMr = await APIConfig.get(\"/reports/mr\", { headers: authHeader() });\r\n            const listPi = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listMs = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            this.setState({ ordersVerified: orders.data, reports: reports.data, listIr: listIr.data, \r\n                            listMr: listMr.data, listPi: listPi.data, listMs: listMs.data});\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    getOrder(report){\r\n        if(report.reportType === \"installation\"){\r\n            const ir = this.getIr(report.idReport);\r\n            if(ir !== null){\r\n                const pi = ir.idOrderPi;\r\n                return pi.idOrder;\r\n            }\r\n        }else{\r\n            const mr = this.getMr(report.idReport);\r\n            if(mr !== null){\r\n                const maintenanceTarget = mr.idMaintenance;\r\n                for(let i=0; i<this.state.listMs.length; i++){\r\n                    if(this.state.listMs[i].listMaintenance !== null){\r\n                        const listMaintenance = this.state.listMs[i].listMaintenance.filter(maintenance => \r\n                                                maintenance.idMaintenance === maintenanceTarget.idMaintenance);\r\n                        if(listMaintenance.length !== 0){\r\n                            const ms = this.state.listMs[i];\r\n                            return ms.idOrder;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getListOrderFilter(){\r\n        if(this.state.isInstallationReport){\r\n            return this.state.ordersVerified.filter(order => order.projectInstallation === true);\r\n        }else{\r\n            return this.state.ordersVerified.filter(order => order.managedService === true);\r\n        }\r\n    }\r\n\r\n    getPi(idOrder){\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n        console.log(ms);\r\n        if (ms.length !== 0) {\r\n            console.log(ms[0]);\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getIr(idReport){\r\n        let ir = this.state.listIr.filter(ir => ir.idReport.idReport === idReport);\r\n        if (ir.length !== 0) {\r\n            return ir[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getMr(idReport){\r\n        let mr = this.state.listMr.filter(mr => mr.idReport.idReport === idReport);\r\n        if (mr.length !== 0) {\r\n            return mr[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getReportNum(report){\r\n        if(report.reportType === \"installation\"){\r\n            if(this.getIr(report.idReport) !== null){\r\n                return this.getIr(report.idReport).irNum;\r\n            }\r\n        }else{\r\n            if(this.getMr(report.idReport) !== null){\r\n                return this.getMr(report.idReport).mrNum;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getDate(value){\r\n        let date = new Date(value);\r\n        const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n\r\n        return date.getDate()+\" \"+monthNames[date.getMonth()]+\" \"+date.getFullYear();\r\n    }\r\n\r\n    getUrl(report){\r\n        // const BASE_URL = \"https://propen-a01-sipel.herokuapp.com/report/\";\r\n\t\tconst BASE_URL = \"https://propen-a01-sipel.herokuapp.com/report/\";\r\n        if(report.fileType === \"application/pdf\"){\r\n            return BASE_URL+report.reportName+\"/preview\";\r\n        }else{\r\n            return BASE_URL+report.reportName;\r\n        }\r\n    }\r\n\r\n    // Mengambil catatan untuk report\r\n    getNotes(report){\r\n        let notes=\"\";\r\n        if(report.reportType === \"installation\"){\r\n            const ir = this.getIr(report.idReport);\r\n            if(ir !== null){\r\n                if(ir.notes !== null){\r\n                    let splitNotes=ir.notes.split(' ');\r\n                    if(splitNotes.length > 7){\r\n                        for(let i=0; i<7; i++){\r\n                            notes = notes + splitNotes[i] + \" \";\r\n                        }\r\n                        return <div>{notes}... <a style={{color: \"red\"}} onClick={() => this.handleOpenNotes(ir.notes)}>more</a></div>;\r\n                    }\r\n\r\n                    return <div>{ir.notes}</div>;\r\n                }\r\n            }\r\n        }else{\r\n            const mr = this.getMr(report.idReport);\r\n            if(mr !== null){\r\n                if(mr.notes !== null){\r\n                    let splitNotes=mr.notes.split(' ');\r\n                    if(splitNotes.length > 7){\r\n                        for(let i=0; i<7; i++){\r\n                            notes = notes + splitNotes[i] + \" \";\r\n                        }\r\n                        return <div>{notes}... <a style={{color: \"red\"}} onClick={() => this.handleOpenNotes(mr.notes)}>more</a></div>;\r\n                    }\r\n\r\n                    return <div>{mr.notes}</div>;\r\n                }\r\n            }\r\n        }\r\n\r\n        return <div>-</div>;\r\n    }\r\n\r\n    // Memunculkan modal notes\r\n    handleOpenNotes(notes){\r\n        let splitNotes=notes.split(':');\r\n        this.setState({ isNotes: true, role: splitNotes[0], notesPreview: splitNotes[1] });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isNotes: false,\r\n            role: null,\r\n            notesPreview: null\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    getReportType(report){\r\n        if(report.reportType === \"installation\"){\r\n            return \"Laporan Instalasi\";\r\n        }else{\r\n            return \"Laporan Maintenance\";\r\n        }\r\n    }\r\n\r\n    getStatus(report){\r\n        if(report.statusApproval === \"pending\"){\r\n            return \"Pending\";\r\n        }\r\n        if(report.statusApproval === \"Setujui\"){\r\n            return \"Disetujui\";\r\n        }\r\n        if(report.statusApproval === \"Tolak\"){\r\n            return \"Ditolak\";\r\n        }\r\n    }\r\n\r\n    handleFilter(event){\r\n        let newReportList = this.state.reports;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newReportList = this.state.reports.filter(report => {\r\n                return (report.reportName.toLowerCase().includes(value.toLowerCase()) || \r\n                this.getReportNum(report).toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ reportsFiltered : newReportList });\r\n    }\r\n\r\n    handleChangeStatus(report) {\r\n        this.setState({ isChangeStatus: true });\r\n        this.setState({\r\n            reportIRtarget: this.getIr(report.idReport),\r\n            reportMRtarget: this.getMr(report.idReport),\r\n            orderTarget: this.getOrder(report),\r\n            reportTarget: report,\r\n        });\r\n    }\r\n\r\n    async handleSubmitChangeStatusIR(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if ((this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === \"\")\r\n            || (this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === null)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: \"Anda wajib mengisi field Catatan\",\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            const dataReport = {\r\n                statusApproval: this.state.statusApproval,\r\n            }\r\n            const dataIr = {\r\n                notes: \"Manager : \" + this.state.notes,\r\n            }\r\n            await APIConfig.put(`/report/update/${this.state.reportTarget.idReport}`, dataReport, { headers: authHeader() });\r\n            await APIConfig.put(`/update/notes/${this.state.reportIRtarget.idInstallationReport}`, dataIr, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishedSubmitChangeStatus: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n        this.setState({ isChangeStatus: false });\r\n    }\r\n\r\n    async handleSubmitChangeStatusMR(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if ((this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === \"\")\r\n            || (this.state.isReject && this.state.statusApproval === \"Tolak\" && this.state.notes === null)){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: \"Anda wajib mengisi field Catatan\",\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 380\r\n                });\r\n                return false;\r\n            }\r\n            const dataReport = {\r\n                statusApproval: this.state.statusApproval,\r\n            }\r\n            const dataMr = {\r\n                notes: \"Manager : \" + this.state.notes,\r\n            }\r\n            await APIConfig.put(`/report/update/${this.state.reportTarget.idReport}`, dataReport, { headers: authHeader() });\r\n            await APIConfig.put(`/update/mr/notes/${this.state.reportMRtarget.idMaintenanceReport}`, dataMr, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishedSubmitChangeStatus: true });\r\n        } catch(error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n        this.setState({ isChangeStatus: false });\r\n    }\r\n\r\n    handleAfterChangeStatus = () => {\r\n        this.setState({ finishedSubmitChangeStatus: false, ...initState });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.setState({ isError: false, ...initState });\r\n    }\r\n\r\n    handleCancelSubmit(event) {\r\n        event.preventDefault();\r\n        this.setState({ isChangeStatus: false, isCancelToVerif: false, ...initState });\r\n    }\r\n\r\n    onValueChangeApprove(event) {\r\n        this.setState({\r\n            statusApproval: event.target.value,\r\n            isReject: false,\r\n        });\r\n    }\r\n\r\n    onValueChangeReject(event) {\r\n        this.setState({\r\n            statusApproval: event.target.value,\r\n            isReject: true,\r\n        });\r\n    }\r\n\r\n    cancelChange(event) {\r\n        event.preventDefault();\r\n        this.setState({ isCancelToVerif: false });\r\n    }\r\n\r\n    handleConfirmToCancel(event) {\r\n        event.preventDefault()\r\n        this.setState({ isCancelToVerif: true });\r\n    }\r\n\r\n    render() {\r\n        const { reports, reportsFiltered, isFiltered,  isChangeStatus, notes, finishedSubmitChangeStatus,\r\n             isError, isCancelToVerif, isNotes, role, notesPreview} = this.state;\r\n\r\n        const tableHeaders = ['No', 'Nomor Laporan', 'Nama Laporan', 'Nomor PO', 'Perusahaan Pelanggan', 'Status', 'Tanggal Dibuat', 'Catatan', 'Aksi'];\r\n                  \r\n        let tableRows = [];\r\n\r\n        if(reports.length !== 0){\r\n            tableRows = isFiltered ? reportsFiltered.map((report) =>\r\n                        [ this.getReportNum(report), report.reportName, this.getOrder(report).noPO, this.getOrder(report).clientOrg, \r\n                        this.getStatus(report), this.getDate(report.uploadedDate), this.getNotes(report), \r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button className={classes.button1} href={this.getUrl(report)} target = \"_blank\">&nbsp;Preview&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        {this.getStatus(report) === \"Pending\" || this.getStatus(report) === \"Ditolak\" ? \r\n                        <>\r\n                        <Button className={classes.button2} onClick={() => this.handleChangeStatus(report)}>Verifikasi</Button>\r\n                        </> : <></> }</div>])\r\n                        : reports.map((report) =>\r\n                        [ this.getReportNum(report), report.reportName, this.getOrder(report).noPO, this.getOrder(report).clientOrg, \r\n                        this.getStatus(report), this.getDate(report.uploadedDate), this.getNotes(report), \r\n                        <div className=\"d-flex justify-content-left align-items-center\">\r\n                        <Button className={classes.button1} href={this.getUrl(report)} target = \"_blank\">&nbsp;Preview&nbsp;</Button>\r\n                        <span>&nbsp;&nbsp;</span>\r\n                        {this.getStatus(report) === \"Pending\" || this.getStatus(report) === \"Ditolak\" ? \r\n                        <>\r\n                        <Button className={classes.button2} onClick={() => this.handleChangeStatus(report)}>Verifikasi</Button>\r\n                        </> : <></> } </div>]);\r\n        }\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <div><h1 className={classes.title}>Verifikasi Laporan</h1></div>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}>\r\n                    <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n                </div>\r\n                <br></br>\r\n                <div>{ reports.length !== 0 ? <CustomizedTables headers={tableHeaders} rows={tableRows}/> : <p className=\"text-center\" style={{color: \"red\"}}>Belum terdapat laporan </p>}</div>\r\n\r\n                <Modal show={isChangeStatus} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ubah Status Laporan</h3>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    {this.state.reportIRtarget !== null ? \r\n                                    <>\r\n                                    <ReactNotification />\r\n                                    <LaporanDetail \r\n                                        reportNum={this.getReportNum(this.state.reportTarget)}\r\n                                        reportName={this.state.reportTarget.reportName}\r\n                                        noPO={this.state.orderTarget.noPO}\r\n                                        clientOrg={this.state.orderTarget.clientOrg}\r\n                                        statusApproval={this.state.reportTarget.statusApproval}\r\n                                        uploadedDate={this.getDate(this.state.reportTarget.uploadedDate)}\r\n                                    />\r\n                                    <br></br>\r\n                                    <form >\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\" style={{color: \"black\"}}>\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Setujui\"\r\n                                                checked={this.state.statusApproval === \"Setujui\"}\r\n                                                onChange={this.onValueChangeApprove}\r\n                                            />&nbsp;&nbsp;&nbsp;Setujui</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\" style={{color: \"black\"}}>\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Tolak\"\r\n                                                checked={this.state.statusApproval === \"Tolak\"}\r\n                                                onChange={this.onValueChangeReject}\r\n                                            />&nbsp;&nbsp;&nbsp;Tolak</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                        {this.state.isReject ? \r\n                                        <>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Catatan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"notes\" \r\n                                                    id=\"notes\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Catatan\" \r\n                                                    value={notes} \r\n                                                    onChange={this.handleChange} />\r\n                                        </div>\r\n                                        </> : <></>}\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                        <div className=\"card-footer text-center\">\r\n                                            <Button className={classes.button2} onClick={this.handleSubmitChangeStatusIR}>Simpan</Button>\r\n                                            <span>&nbsp;&nbsp;</span>\r\n                                            <Button className={classes.button3} onClick={this.handleConfirmToCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                        </div>\r\n                                        </form>\r\n                                    </> : \r\n                                    <>{this.state.reportMRtarget !== null ? \r\n                                    <>\r\n                                    <ReactNotification />\r\n                                    <LaporanDetail \r\n                                        reportNum={this.getReportNum(this.state.reportTarget)}\r\n                                        reportName={this.state.reportTarget.reportName}\r\n                                        noPO={this.state.orderTarget.noPO}\r\n                                        clientOrg={this.state.orderTarget.clientOrg}\r\n                                        statusApproval={this.state.reportTarget.statusApproval}\r\n                                        uploadedDate={this.getDate(this.state.reportTarget.uploadedDate)}\r\n                                    />\r\n                                    <br></br>\r\n                                    <form >\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\" style={{color: \"black\"}}>\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Setujui\"\r\n                                                checked={this.state.statusApproval === \"Setujui\"}\r\n                                                onChange={this.onValueChangeApprove}\r\n                                            />&nbsp;&nbsp;&nbsp;Setujui</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                                        <div className=\"form-check\"> \r\n                                            <div className=\"radio\">\r\n                                            <label className=\"form-check-label\" style={{color: \"black\"}}>\r\n                                            <input \r\n                                                type=\"radio\"\r\n                                                value=\"Tolak\"\r\n                                                checked={this.state.statusApproval === \"Tolak\"}\r\n                                                onChange={this.onValueChangeReject}\r\n                                            />&nbsp;&nbsp;&nbsp;Tolak</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        </div>\r\n                                        {this.state.isReject ? \r\n                                        <>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Catatan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"notes\" \r\n                                                    id=\"notes\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Catatan\" \r\n                                                    value={notes} \r\n                                                    onChange={this.handleChange} />\r\n                                        </div>\r\n                                        </> : <></>}\r\n                                        <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                        <div className=\"card-footer text-center\">\r\n                                            <Button className={classes.button2} onClick={this.handleSubmitChangeStatusMR}>Simpan</Button>\r\n                                            <span>&nbsp;&nbsp;</span>\r\n                                        <Button className={classes.button3} onClick={this.handleConfirmToCancel}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                    </div>\r\n                                        </form>\r\n                                    </> : <></> }</>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancelToVerif} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal melakukan verifikasi laporan ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={this.handleCancelSubmit}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                                <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button3} onClick={this.cancelChange}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={finishedSubmitChangeStatus} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Status Laporan Berhasil Diubah</h3>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            <div className=\"text-center\">\r\n                                <Button className={classes.button2} onClick={() => this.handleAfterChangeStatus()}>Kembali</Button>\r\n                            </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                     <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                            <br></br>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* Menampilkan modal berisi catatan report */}\r\n                <Modal\r\n                    show={isNotes}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Catatan\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div>{role}:</div>\r\n                        <div>{notesPreview}</div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusPersetujuanLaporan;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPI\\ChangeOrderPI.js",["303"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass ChangeOrderPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPI = this.handleSubmitChangeOrderPI.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            startPI: moment(new Date(ordPI.startPI)).format(\"YYYY-MM-DD\"),\r\n            deadline: moment(new Date(ordPI.deadline)).format(\"YYYY-MM-DD\"),\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPI(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPI}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPI);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\UpdateSequence\\index.js",["304","305","306","307","308","309","310","311","312"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport {Form, Card, Table, Button} from \"react-bootstrap\";\r\nimport { Input, FormControlLabel } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\nimport classes from \"./styles.module.css\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\n\r\nclass UpdateSequence extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sequence: \"\",\r\n            isFilled: false,\r\n        };\r\n        this.handleFilled = this.handleFilled.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const seq = await APIConfig.get(\"/order/resetSeq\", { headers: authHeader() });\r\n            this.state = {\r\n                sequence: seq.data,\r\n            };\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleFilled(event){\r\n        const { value } = event.target;\r\n        const { value2 } = this.state.sequence;\r\n\r\n        if(value === \"\"){\r\n            this.setState({\r\n                isFilled : false,\r\n                sequence:\"\" });\r\n        }else{\r\n            const tempSeq = {\r\n                sequenceNum: value,\r\n            };\r\n            this.setState({\r\n                isFilled : true,\r\n                sequence : tempSeq\r\n            });\r\n        }\r\n    }\r\n    handleSubmit(event){\r\n        //event.preventDefault();\r\n        let test = this.state.isFilled;\r\n        let val = this.state.sequence;\r\n\r\n        if(test === true){\r\n            try{\r\n                APIConfig.put(`/order/resetSeq/1`, val, { headers: authHeader() });\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"Masukkan angka pada kolom yang tersedia!\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let {isFilled, sequence} = this.state;\r\n\r\n        return(\r\n            <div id=\"content\">\r\n            <div class=\"test\">\r\n                <div>\r\n                    <h1 class=\"text-center\">Reset Urutan Nomor Order</h1>\r\n                    <Card>\r\n                            <Form.Control type=\"number\" className=\"sequence\" size=\"sm\" placeholder=\"Ubah nilai...\" onChange={this.handleFilled}/>\r\n                            <Button className={classes.button4} onClick={() => this.handleSubmit()}>Update</Button>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateSequence;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\errors\\PageNotFound\\index.js",["313"],"import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\n\r\nclass PageNotFound extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div id=\"wrapper\" className={classes.container}>\r\n                <div id=\"info\" class=\"text-center\">\r\n                    <h3 class={classes.title}>Halaman tidak ditemukan</h3>\r\n                    <div><a href=\"/\">Kembali ke Halaman Utama</a></div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PageNotFound;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Progress\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderMS\\ChangeOrderMS.js",["314"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\n//import Modal from \"../../components/Modal\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass ChangeOrderMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderMS = this.handleSubmitChangeOrderMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            actualStart: moment(new Date(ordMS.actualStart)).format(\"YYYY-MM-DD\"),\r\n            actualEnd: moment(new Date(ordMS.actualEnd)).format(\"YYYY-MM-DD\"),\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderMS);\r\n","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeOrderPIMS\\ChangeOrderPIMS.js",["315"],"import React from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport classes from \"./styles.module.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { store } from \"react-notifications-component\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport moment from \"moment\";\r\nimport authHeader from '../../services/auth-header';\r\n\r\nclass ChangeOrderPIMS extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idOrder: this.props.match.params.id,\r\n            idPi: this.props.match.params.idPi,\r\n            idMs: this.props.match.params.idMs,\r\n            noPO: \"\",\r\n            noSPH: \"\",\r\n            orderName: \"\",\r\n            description: \"\",\r\n            projectInstallation: false,\r\n            managedService: false,\r\n            clientName: \"\",\r\n            clientDiv: \"\",\r\n            clientPIC: \"\",\r\n            clientOrg: \"\",\r\n            clientPhone: \"\",\r\n            clientEmail: \"\",\r\n            dateOrder: \"\",\r\n            startPI: \"\",\r\n            deadline:\"\",\r\n            close: false,\r\n            percentage: 0.0,\r\n            actualStart: \"\",\r\n            actualEnd: \"\",\r\n            activated: false,\r\n            orderTarget: null,\r\n            orderPITarget: null,\r\n            orderMSTarget: null,\r\n            finishSubmitOrder: false,\r\n            isCancel: false,\r\n            isError: false,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmitChangeOrderPIMS = this.handleSubmitChangeOrderPIMS.bind(this);\r\n        this.handleCancelSubmit = this.handleCancelSubmit.bind(this);\r\n        this.handleAfterSubmit = this.handleAfterSubmit.bind(this);\r\n        this.handleChangeOrder = this.handleChangeOrder.bind(this);\r\n        this.handleConfirmCancel = this.handleConfirmCancel.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n        this.handleAfterError = this.handleAfterError.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orderItem  = await APIConfig.get(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n            const orderPIitem = await APIConfig.get(`/order/detail/PI/${this.state.idPi}`, { headers: authHeader() });\r\n            const orderMSitem = await APIConfig.get(`/order/detail/MS/${this.state.idMs}`, { headers: authHeader() });\r\n            this.setState({ orderTarget: orderItem.data });\r\n            this.setState({ orderPITarget: orderPIitem.data });\r\n            this.setState({ orderMSTarget: orderMSitem.data });\r\n            console.log(this.state.orderTarget);\r\n            console.log(this.state.orderPITarget);\r\n            console.log(this.state.orderMSTarget);\r\n            this.handleChangeOrder();\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChangeOrder() {\r\n        let ord = this.state.orderTarget;\r\n        let ordPI = this.state.orderPITarget;\r\n        let ordMS = this.state.orderMSTarget;\r\n        this.setState({\r\n            noPO: ord.noPO,\r\n            noSPH: ord.noSPH,\r\n            orderName: ord.orderName,\r\n            description: ord.description,\r\n            projectInstallation: ord.projectInstallation,\r\n            managedService: ord.managedService,\r\n            clientName: ord.clientName,\r\n            clientDiv: ord.clientDiv,\r\n            clientPIC: ord.clientPIC,\r\n            clientOrg: ord.clientOrg,\r\n            clientPhone: ord.clientPhone,\r\n            clientEmail: ord.clientEmail,\r\n            dateOrder: moment(new Date(ord.dateOrder)).format(\"YYYY-MM-DD\"),\r\n            startPI: moment(new Date(ordPI.startPI)).format(\"YYYY-MM-DD\"),\r\n            deadline: moment(new Date(ordPI.deadline)).format(\"YYYY-MM-DD\"),\r\n            close: ordPI.close,\r\n            percentage: ordPI.percentage,\r\n            actualStart: moment(new Date(ordMS.actualStart)).format(\"YYYY-MM-DD\"),\r\n            actualEnd: moment(new Date(ordMS.actualEnd)).format(\"YYYY-MM-DD\"),\r\n            activated: ordMS.activated,\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleConfirmCancel(){\r\n        this.setState({ isCancel: true });\r\n    }\r\n\r\n    handleCancelSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleBack() {\r\n        this.setState({ isCancel: false });\r\n    }\r\n\r\n    handleAfterSubmit = () => {\r\n        this.props.history.push(`/order/detail/${this.state.idOrder}`, { headers: authHeader() });\r\n    }\r\n\r\n    handleAfterError = () => {\r\n        this.props.history.push(`/order/order`, { headers: authHeader() });\r\n        this.setState({ isError: false });\r\n    }\r\n\r\n    async handleSubmitChangeOrderPIMS(event) {\r\n        event.preventDefault();\r\n        try {\r\n            let dateOrd = moment(new Date(this.state.dateOrder)).format(\"YYYY-MM-DD\");\r\n            let start = moment(new Date(this.state.startPI)).format(\"YYYY-MM-DD\");\r\n            let end = moment(new Date(this.state.deadline)).format(\"YYYY-MM-DD\");\r\n            let startDate = moment(new Date(this.state.actualStart)).format(\"YYYY-MM-DD\");\r\n            let endDate = moment(new Date(this.state.actualEnd)).format(\"YYYY-MM-DD\");\r\n            if (this.state.clientName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.orderName === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Nama Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientPIC === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field PIC Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.description === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Deskripsi Order`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientOrg === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Perusahaan Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.clientEmail === \"\"){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Email Pelanggan`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.dateOrder.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start > end){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Selesai Project tidak boleh lebih awal dari Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.startPI.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Mulai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (start < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Tanggal Mulai Project tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.deadline.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Tanggal Selesai Project`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate > endDate){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Selesai Managed tidak boleh lebih awal dari Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualStart.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Mulai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (startDate < dateOrd){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Periode Mulai Managed tidak boleh lebih awal dari Tanggal Order Masuk`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            if (this.state.actualEnd.length === 0){\r\n                store.addNotification({\r\n                    title: \"Peringatan!\",\r\n                    message: `Anda wajib mengisi field Periode Selesai Managed`,\r\n                    type: \"warning\",\r\n                    container: \"top-left\",\r\n                    insert: \"top\",\r\n                    animationIn: [\"animated\", \"fadeIn\"],\r\n                    animationOut: [\"animated\", \"fadeout\"],\r\n                    dismiss: {\r\n                        duration: 7000,\r\n                        showIcon: true,\r\n                    },\r\n                    width: 500\r\n                });\r\n                return false;\r\n            }\r\n            const data = {\r\n                noPO: this.state.noPO,\r\n                noSPH: this.state.noSPH,\r\n                orderName: this.state.orderName,\r\n                description: this.state.description,\r\n                projectInstallation: this.state.projectInstallation,\r\n                managedService: this.state.managedService,\r\n                clientName: this.state.clientName,\r\n                clientDiv: this.state.clientDiv,\r\n                clientPIC: this.state.clientPIC,\r\n                clientOrg: this.state.clientOrg,\r\n                clientPhone: this.state.clientPhone,\r\n                clientEmail: this.state.clientEmail,\r\n                dateOrder: this.state.dateOrder,\r\n                verified: this.state.verified\r\n            }\r\n            const dataPI = {\r\n                startPI: this.state.startPI,\r\n                deadline: this.state.deadline,\r\n                percentage: this.state.percentage,\r\n                close: this.state.close,\r\n            }\r\n            const dataMS = {\r\n                actualStart: this.state.actualStart,\r\n                actualEnd: this.state.actualEnd,\r\n                activated: this.state.activated,\r\n            }\r\n            await APIConfig.put(`/order/ubah/${this.state.idOrder}`, data, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/PI/${this.state.idPi}`, dataPI, { headers: authHeader() });\r\n            await APIConfig.put(`/order/ubah/MS/${this.state.idMs}`, dataMS, { headers: authHeader() });\r\n            this.loadData();\r\n            this.setState({ finishSubmitOrder: true });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            //alert(\"Order Gagal Disimpan. Coba Kembali!\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            noPO,\r\n            noSPH,\r\n            orderName,\r\n            description,\r\n            projectInstallation,\r\n            managedService,\r\n            clientName,\r\n            clientDiv,\r\n            clientPIC,\r\n            clientOrg,\r\n            clientPhone,\r\n            clientEmail,\r\n            dateOrder,\r\n            startPI,\r\n            deadline,\r\n            actualStart,\r\n            actualEnd,\r\n            isCancel,\r\n            isError\r\n        } = this.state;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n            <br></br>\r\n            <h1 className={classes.title}>Ubah Order</h1>\r\n            <br></br>\r\n                <form>\r\n                    <div className=\"row\" style={{ marginTop: 10 }}>\r\n                        <div className=\"col-sm-1\"></div>\r\n                        <div className=\"col-sm-10\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <ReactNotification />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor PO</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"noPO\" \r\n                                                    id=\"noPO\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor PO\" \r\n                                                    value={noPO} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientName\" \r\n                                                    id=\"clientName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Pelanggan\" \r\n                                                    value={clientName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor SPH</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"noSPH\" \r\n                                                    id=\"noSPH\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor SPH\" \r\n                                                    value={noSPH} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Divisi Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientDiv\" \r\n                                                    id=\"clientDiv\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Divisi Pelanggan\" \r\n                                                    value={clientDiv} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Nama Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"orderName\" \r\n                                                    id=\"orderName\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nama Order\" \r\n                                                    value={orderName} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>PIC Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPIC\" \r\n                                                    id=\"clientPIC\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan PIC Pelanggan\" \r\n                                                    value={clientPIC} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Deskripsi Order</label>\r\n                                                <input \r\n                                                    type=\"text\"  \r\n                                                    name=\"description\" \r\n                                                    id=\"description\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Deskripsi Order\" \r\n                                                    value={description} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Perusahaan Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientOrg\" \r\n                                                    id=\"clientOrg\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Perusahaan Pelanggan\" \r\n                                                    value={clientOrg} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <label className=\"required\" style={{color: \"black\"}}>Jenis Order</label>\r\n                                            <div className=\"form-check\"> \r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"projectInstallation\" \r\n                                                    id=\"projectInstallation\" \r\n                                                    className=\"form-check-input\" \r\n                                                    value={projectInstallation}\r\n                                                    checked={projectInstallation} \r\n                                                    onChange={(e) => this.setState(prevState => ({\r\n                                                        projectInstallation: !prevState.projectInstallation\r\n                                                    }))} /> \r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Project Installation</label>\r\n                                            </div>\r\n                                            <div className=\"form-check\">\r\n                                                <input disabled\r\n                                                    type=\"checkbox\" \r\n                                                    name=\"managedService\" \r\n                                                    id=\"managedService\" \r\n                                                    className=\"form-check-input\"\r\n                                                    value={managedService}  \r\n                                                    checked={managedService} \r\n                                                    onChange={(e) => this.setState(prev => ({\r\n                                                        managedService: !prev.managedService\r\n                                                    }))} />\r\n                                                <label className=\"form-check-label\" style={{color: \"black\"}}>Managed Services</label>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group \">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Email Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientEmail\" \r\n                                                    id=\"clientEmail\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Email Pelanggan\" \r\n                                                    value={clientEmail} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Masuk Order</label>\r\n                                                <input disabled\r\n                                                    type=\"date\" \r\n                                                    name=\"dateOrder\" \r\n                                                    id=\"dateOrder\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Masuk Order\" \r\n                                                    value={dateOrder} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label style={{color: \"black\"}}>Nomor Telepon Pelanggan</label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    name=\"clientPhone\" \r\n                                                    id=\"clientPhone\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Nomor Telepon Pelanggan\" \r\n                                                    value={clientPhone} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Mulai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"startPI\" \r\n                                                    id=\"startPI\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Mulai\" \r\n                                                    value={startPI} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Tanggal Selesai Project</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"deadline\" \r\n                                                    id=\"deadline\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Tanggal Selesai\" \r\n                                                    value={deadline} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Mulai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualStart\" \r\n                                                    id=\"actualStart\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Mulai\" \r\n                                                    value={actualStart} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"required\" style={{color: \"black\"}}>Periode Selesai Managed</label>\r\n                                                <input \r\n                                                    type=\"date\" \r\n                                                    name=\"actualEnd\" \r\n                                                    id=\"actualEnd\" \r\n                                                    className=\"form-control\" \r\n                                                    placeholder=\"Masukkan Periode Selesai\" \r\n                                                    value={actualEnd} \r\n                                                    onChange={this.handleChange} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.requiredFill} style={{color: \"red\"}}>* Wajib diisi</div>\r\n                                </div>\r\n                                <div className=\"card-footer text-right\">\r\n                                    <Button className={classes.button1} onClick={this.handleSubmitChangeOrderPIMS}>Simpan</Button>\r\n                                    <span>&nbsp;&nbsp;</span>\r\n                                    <Button className={classes.button2} onClick={() => this.handleConfirmCancel()}>&nbsp;&nbsp;Batal&nbsp;&nbsp;</Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <Modal show={this.state.finishSubmitOrder} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                Order Berhasil Diubah</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleAfterSubmit()}>Kembali</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isCancel} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                    <Modal.Header>\r\n                        <div className=\"text-center\">\r\n                            <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Anda yakin batal menyimpan order ?</h4>\r\n                        </div>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"text-center\">\r\n                            <Button className={classes.button1} onClick={() => this.handleCancelSubmit()}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ya&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Button>\r\n                            <span>&nbsp;&nbsp;</span>\r\n                            <Button className={classes.button2} onClick={() => this.handleBack()}>&nbsp;&nbsp;Tidak&nbsp;&nbsp;</Button>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={isError} dialogClassName=\"modal-90w\" aria-labelledby=\"contained-modal-title-vcenter\">\r\n                <Modal.Header>\r\n                    <div className=\"text-center\">\r\n                        <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oops terjadi masalah pada server!\r\n                        <br></br>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Harap coba beberapa saat lagi</h4>\r\n                    </div>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"text-center\">\r\n                        <Button className={classes.button2} onClick={() => this.handleAfterError()}>Kembali</Button>\r\n                    </div>\r\n                </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ChangeOrderPIMS);","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\DetailOrder\\DetailOrder.js",["316","317"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\APIConfig.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\auth-header.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\HalamanAdmin\\index.js",["318","319","320"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport authHeader from '../../services/auth-header';\r\nimport axios from 'axios';\r\n\r\nclass HalamanAdmin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEdit: false,\r\n            userTarget: null,\r\n            usersFiltered: [],\r\n            users: [],\r\n            userFiltered: [],\r\n            isFiltered: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            isFailed: false,\r\n            usernameTarget: \"\",\r\n            role_name: \"\",\r\n            messageError: null,\r\n            isDelete: false,\r\n            isConfirmDelete: false\r\n            \r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n        this.handleConfirmDelete = this.handleConfirmDelete.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n        \r\n    }\r\n    \r\n    async loadData() {\r\n        try {\r\n            const users = await APIConfig.get(\"/all/users\", { headers: authHeader() });\r\n            console.log(users.data);\r\n            this.setState({ users: users.data });\r\n            \r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleEdit(user) {\r\n        this.setState({\r\n            isEdit: true,\r\n            userTarget: user\r\n        });\r\n        \r\n    }\r\n\r\n    handleFilter(event){\r\n        let newUserList = this.state.users;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newUserList = this.state.users.filter(user => {\r\n                return (user.username.toLowerCase().includes(value.toLowerCase()) ||\r\n                user.role_name.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ usersFiltered : newUserList });\r\n    }\r\n\r\n\r\n    handleConfirmDelete(user) {\r\n        this.setState({\r\n            isConfirmDelete: true,\r\n            userTarget: user\r\n        });\r\n    }\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isError: false, \r\n            isSuccess: false,\r\n            isFailed: false,\r\n            isConfirmDelete: false,\r\n            isDelete: false,\r\n            messageError: null,\r\n            usernameTarget: \"\",\r\n            role_name: \"\"\r\n            \r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false, messageError: null });\r\n    }\r\n\r\n    handleChangeField= (event) => {\r\n        this.setState({role_name: event.target.value});\r\n    }\r\n\r\n    handleSave = (e) => {\r\n        e.preventDefault();\r\n        let user = {username: this.state.userTarget.username, role_name: this.state.role_name};\r\n        console.log('user => ' + JSON.stringify(user));\r\n        const URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/user/updateRole\";\r\n        axios.put(URL, user, { headers: authHeader() });\r\n        this.setState({\r\n            isSuccess: true,\r\n            usernameTarget: \"\",\r\n            role_name: \"\"});\r\n    }\r\n\r\n    handleDelete() {\r\n        \r\n        let user = {username: this.state.userTarget.username};\r\n        console.log('user => ' + JSON.stringify(user));\r\n        const URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/delete-user/\";\r\n        const usr = this.state.userTarget.username;\r\n        axios.delete(URL+usr, { headers: authHeader() });\r\n        \r\n        this.setState({\r\n            isDelete: true,\r\n            usernameTarget: \"\",\r\n            role_name: \"\"\r\n        });\r\n        \r\n    }\r\n\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n        if(this.state.role_name === \"\"){\r\n            return this.setState({isFailed: true, messageError: \"Role wajib dipilih\"});\r\n        }\r\n\r\n        this.handleSave(event);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isEdit, users, usersFiltered, isConfirmDelete, isFailed, messageError, userTarget, role_name, isError, isSuccess, isDelete, isFiltered } = this.state;\r\n        const tableHeaders = ['Nomor', 'Username', 'Role', 'Fullname', 'Email', 'Aksi'];                  \r\n        const tableRows = isFiltered ? usersFiltered.map((user) =>\r\n                        [  <div className=\"d-flex justify-content-center\">{user.username}</div>,\r\n                            <div className=\"d-flex justify-content-center\">{user.role_name}</div>,\r\n                            <div className=\"d-flex justify-content-center\">{user.fullname}</div>,\r\n                            <div className=\"d-flex justify-content-center\">{user.email}</div>,\r\n                            <div className=\"d-flex justify-content-center\">\r\n                            <Button className={classes.button4} onClick={() => this.handleEdit(user)}>Ubah Role</Button>\r\n                            <Button className=\"btn btn-danger\" onClick={() => this.handleConfirmDelete(user)} style={{marginLeft: \"5px\"}}>Hapus Role</Button></div>])\r\n                        : users.map((user) =>\r\n                        [ <div className=\"d-flex justify-content-center\">{user.username}</div>,\r\n                        <div className=\"d-flex justify-content-center\">{user.role_name}</div>,\r\n                        <div className=\"d-flex justify-content-center\">{user.fullname}</div>,\r\n                        <div className=\"d-flex justify-content-center\">{user.email}</div>,\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button className={classes.button4} onClick={() => this.handleEdit(user)}>Ubah Role</Button>\r\n                            <Button className=\"btn btn-danger\" onClick={() => this.handleConfirmDelete(user)} style={{marginLeft: \"5px\"}}>Hapus Role</Button>\r\n                        </div>])\r\n\r\n        return (\r\n            \r\n            <div className={classes.container}>\r\n                <div><h1 className=\"text-center\">Daftar Pengguna Sistem</h1></div>\r\n                <br></br>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className={classes.search}/></div>\r\n                <br></br>\r\n                <div>{ users.length !== 0 ? <CustomizedTables headers={tableHeaders} rows={tableRows}/> : <p className=\"text-center\" style={{color: \"red\"}}>Belum terdapat Pengguna</p>}</div>\r\n                <Modal\r\n                    show={isEdit}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        \r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Ubah Role Pengguna\r\n                    </Modal.Title>\r\n                        \r\n                    </Modal.Header>\r\n                        <Modal.Body>\r\n                               { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        <div>{messageError}</div>\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                               : <></> }\r\n                            <p>\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        <tr>\r\n                                            <td><p className=\"d-flex\">Pilih Role<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td>\r\n                                                <Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"role_name\"\r\n                                                value={ this.state.value }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"None\">None</option>\r\n                                                <option value=\"Admin\">Admin</option>\r\n                                                <option value=\"Manager\">Manager</option>\r\n                                                <option value=\"Engineer\">Engineer</option>\r\n                                                <option value=\"Data Entry\">Data Entry</option>\r\n                                                <option value=\"Finance\">Finance</option>\r\n                                                </Form.Control>   \r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib dipilih</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                    <Button variant=\"primary\" className={classes.button1} onClick={this.handleValidation}>\r\n                                                        Simpan\r\n                                                    </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </Table>\r\n                                </Form>\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n                \r\n                <Modal\r\n                    show={isSuccess || isDelete}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                                <br></br>\r\n                                <div className=\"d-flex justify-content-center\"><strong>{isSuccess ? \"Role pada pengguna berhasil disimpan\" : \"Pengguna berhasil dihapus\"} </strong></div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                </div> \r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button className=\"btn btn-success\" onClick={this.handleCancel}>Kembali</Button>\r\n                                </div>\r\n                                <br></br>\r\n                                                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    show={isConfirmDelete}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Konfirmasi Penghapusan Role\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                                <br></br>\r\n                                <div className=\"d-flex justify-content-center\"><strong>Apakah Anda yakin untuk menghapus pengguna?</strong></div><br></br>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                </div> \r\n                                <div className=\"d-flex justify-content-center\">\r\n                                <Button className={classes.button3} onClick={this.handleCancel}>\r\n                                    Batal\r\n                                </Button>\r\n                                <Button className={classes.button1} style={{marginLeft: \"7px\"}} onClick={this.handleDelete}>\r\n                                    Hapus\r\n                                </Button>\r\n                                </div>\r\n                                <br></br>\r\n                                \r\n                                \r\n\r\n                                                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default HalamanAdmin;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ChangeStatusOrder\\index.js",["321","322","323","324","325","326","327","328","329","330","331"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { Form, Button, Card, Table  } from \"react-bootstrap\";\r\nimport classes from \"../LaporanInstalasiMaintenance/styles.module.css\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass ChangeStatusOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            listPi: [],\r\n            listMs: [],\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isSubmitted: false,\r\n            isErrorMsClosed: false,\r\n            isErrorPiClosed: false,\r\n            orderTarget: null,\r\n            statusMaintenances: [],\r\n            statusMs: \"\",\r\n            statusPi: \"\"\r\n\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleErrorMsClosed = this.handleErrorMsClosed.bind(this);\r\n        this.handleErrorPiClosed = this.handleErrorPiClosed.bind(this);\r\n        this.handleSubmitted = this.handleSubmitted.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified\", { headers: authHeader() } );\r\n            const listPi = await APIConfig.get(\"/orders/pi\", { headers: authHeader() });\r\n            const listMs = await APIConfig.get(\"/orders/ms\", { headers: authHeader() });\r\n            // const services = await APIConfig.get(\"/services\");\r\n            this.setState({ ordersVerified: orders.data, listPi: listPi.data, listMs: listMs.data});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        // console.log(this.state.orderTarget);\r\n        try {\r\n            if(this.state.orderTarget.projectInstallation === true){\r\n                // console.log(this.state.orderTarget.idOrderPi);\r\n                const pi = this.getPi(this.state.orderTarget.idOrder);\r\n                if (this.state.statusPi === \"Closed\"){\r\n                    if (pi.percentage === 100){\r\n                        const dataPi = {\r\n                            idOrderPi: pi.idOrderPi,\r\n                            idUserEng: pi.picEngineerPi,\r\n                            percentage: pi.percentage,\r\n                            startPI: pi.startPI,\r\n                            deadline: pi.deadline,\r\n                            dateClosedPI: pi.dateClosedPI,\r\n                            status: this.state.statusPi\r\n                        }\r\n                        // console.log(dataPi);\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/pi/${pi.idOrderPi}/updateStatus`, dataPi, { headers: authHeader() });\r\n                        this.handleSubmitted(event, this.state.orderTarget)\r\n                        this.setState({isEdit: false});\r\n                    } else {\r\n                        this.handleErrorPiClosed(event);\r\n                    }\r\n                } else {\r\n                    const dataPi = {\r\n                        idOrderPi: pi.idOrderPi,\r\n                        idUserEng: pi.picEngineerPi,\r\n                        percentage: pi.percentage,\r\n                        startPI: pi.startPI,\r\n                        deadline: pi.deadline,\r\n                        dateClosedPI: pi.dateClosedPI,\r\n                        status: this.state.statusPi\r\n                    }\r\n                    // console.log(dataPi);\r\n                    await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/pi/${pi.idOrderPi}/updateStatus`, dataPi, { headers: authHeader() });\r\n                    this.handleSubmitted(event, this.state.orderTarget)\r\n                    this.setState({isEdit: false});\r\n                }\r\n            }\r\n            if(this.state.orderTarget.managedService === true){\r\n                const ms = this.getMs(this.state.orderTarget.idOrder);\r\n                if (this.state.statusMs === \"Closed\"){\r\n                    let listMaintenance = ms.listMaintenance;\r\n                    for(let i=0; i<listMaintenance.length; i++){\r\n                        let maintenance = listMaintenance[i];\r\n                        let booleanStatus = false;\r\n                        if (this.state.statusMaintenances[i] === \"Maintained\"){\r\n                            booleanStatus = true;\r\n                        }\r\n                        const dataMaintenance = {\r\n                            idMaintenance: maintenance.idMaintenance,\r\n                            dateMn: maintenance.dateMn,\r\n                            maintained: booleanStatus\r\n                        }\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/maintenance/${maintenance.idMaintenance}/updateStatus`, dataMaintenance, { headers: authHeader() });\r\n                    }\r\n                    // console.log(ms.listMaintenance);\r\n                    const msUpdated = await APIConfig.get(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}`, { headers: authHeader() });\r\n                    // console.log(msUpdated.data.listMaintenance);\r\n                    let statusAllMaintenance = true;\r\n                    let listMaintenanceChecked = msUpdated.data.listMaintenance;\r\n                    for(let i=0; i<listMaintenanceChecked.length; i++){\r\n                        let maintenanceCheck = listMaintenanceChecked[i];\r\n                        if (maintenanceCheck.maintained === false){\r\n                            statusAllMaintenance = false;\r\n                        }\r\n                    }\r\n                    if (statusAllMaintenance === true) {\r\n\r\n\r\n                        const dataMs = {\r\n                            idOrderMs: ms.idOrderMs,\r\n                            idUserPic: ms.picEngineerMs,\r\n                            actualStart: ms.actualStart,\r\n                            actualEnd: ms.actualEnd,\r\n                            activated: ms.activated,\r\n                            timeRemaining: ms.timeRemaining,\r\n                            dateClosedMS: ms.dateClosedMS,\r\n                            status: this.state.statusMs\r\n                        }\r\n                        // console.log(dataMs);\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/updateStatus`, dataMs, { headers: authHeader() });\r\n                        this.handleSubmitted(event, this.state.orderTarget)\r\n                        this.setState({isEdit: false});\r\n                    } else {\r\n                        this.handleErrorMsClosed(event);\r\n                    }\r\n                } else {\r\n                    let listMaintenance = ms.listMaintenance;\r\n                    for(let i=0; i<listMaintenance.length; i++){\r\n                        let maintenance = listMaintenance[i];\r\n                        let booleanStatus = false;\r\n                        if (this.state.statusMaintenances[i] === \"Maintained\"){\r\n                            booleanStatus = true;\r\n                        }\r\n                        const dataMaintenance = {\r\n                            idMaintenance: maintenance.idMaintenance,\r\n                            dateMn: maintenance.dateMn,\r\n                            maintained: booleanStatus\r\n                        }\r\n                        await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/maintenance/${maintenance.idMaintenance}/updateStatus`, dataMaintenance, { headers: authHeader() } );\r\n                    }\r\n\r\n                    const dataMs = {\r\n                        idOrderMs: ms.idOrderMs,\r\n                        idUserPic: ms.picEngineerMs,\r\n                        actualStart: ms.actualStart,\r\n                        actualEnd: ms.actualEnd,\r\n                        activated: ms.activated,\r\n                        timeRemaining: ms.timeRemaining,\r\n                        dateClosedMS: ms.dateClosedMS,\r\n                        status: this.state.statusMs\r\n                    }\r\n                    // console.log(dataMs);\r\n                    await APIConfig.put(`/order/${this.state.orderTarget.idOrder}/ms/${ms.idOrderMs}/updateStatus`, dataMs,{ headers: authHeader() });\r\n                    this.handleSubmitted(event, this.state.orderTarget)\r\n                    this.setState({isEdit: false});\r\n                }\r\n\r\n            }\r\n            await this.loadData()\r\n\r\n\r\n        } catch (error) {\r\n            alert(\"Perubahan status order gagal disimpan\");\r\n            // this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleErrorMsClosed(event) {\r\n        event.preventDefault();\r\n        this.setState({isErrorMsClosed: true});\r\n    }\r\n\r\n    handleErrorPiClosed(event) {\r\n        event.preventDefault();\r\n        this.setState({isErrorPiClosed: true});\r\n    }\r\n\r\n    handleSubmitted(event, order) {\r\n        event.preventDefault();\r\n        this.setState({isSubmitted: true, orderTarget: order});\r\n    }\r\n\r\n    // Mengambil order jenis project installation yang dipilih\r\n    getPi(idOrder){\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n\r\n        if (pi.length !== 0) {\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Mengambil order jenis managed services yang dipilih\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n\r\n        if (ms.length !== 0) {\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkTypeOrder(pi, ms){\r\n        if(pi === true && ms === true){\r\n            return \"Project Installation, Managed Service\";\r\n        }else if(pi === true){\r\n            return \"Project Installation\";\r\n        }else if(ms === true){\r\n            return \"Managed Service\";\r\n        }\r\n    }\r\n\r\n    checkStatus(order){\r\n        if (order.projectInstallation === true){\r\n            let pi = this.getPi(order.idOrder)\r\n            // console.log(order)\r\n            // console.log(pi)\r\n            if (pi.status === null){\r\n                return \"Inactive\";\r\n            } else { return pi.status;}\r\n\r\n        }\r\n        else if (order.managedService === true){\r\n            let ms = this.getMs(order.idOrder)\r\n            if (ms.status === null){\r\n                return \"Inactive\";\r\n            } else { return ms.status;}\r\n        }\r\n    }\r\n\r\n    checkClosedForRender(order, listMaintenance){\r\n        if (order.projectInstallation === true && order.managedService === true){\r\n            let pi = this.getPi(order.idOrder)\r\n            let ms = this.getMs(order.idOrder)\r\n            if (pi.status == \"Closed\" && ms.status == \"Closed\"){\r\n                return \"Order is Closed\"\r\n            } else {\r\n                return(\r\n                    <Button\r\n                        className={classes.button1}\r\n                        onClick={() => this.handleEdit(order, listMaintenance)}>\r\n                        Ubah\r\n                    </Button>\r\n                );\r\n            }\r\n        } else if (order.projectInstallation === true) {\r\n            let pi = this.getPi(order.idOrder)\r\n            if (pi.status == \"Closed\") {\r\n                return \"Order is Closed\"\r\n            } else {\r\n                return(\r\n                    <Button\r\n                        className={classes.button1}\r\n                        onClick={() => this.handleEdit(order, listMaintenance)}>\r\n                        Ubah\r\n                    </Button>\r\n                );\r\n            }\r\n        } else if (order.managedService === true) {\r\n            let ms = this.getMs(order.idOrder)\r\n            if (ms.status == \"Closed\") {\r\n                return \"Order is Closed\"\r\n            } else {\r\n                return(\r\n                    <Button\r\n                        className={classes.button1}\r\n                        onClick={() => this.handleEdit(order, listMaintenance)}>\r\n                        Ubah\r\n                    </Button>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    handleEdit(order, listMaintenance) {\r\n        this.setState({isEdit: true, orderTarget: order, listMaintenance: listMaintenance});\r\n        const statusMaintenancesUpdated = this.state.statusMaintenances;\r\n        if (order.projectInstallation === true){\r\n            this.setState({statusPi: this.checkStatus(order)});\r\n        }\r\n        else if (order.managedService === true){\r\n            this.setState({statusMs: this.checkStatus(order)});\r\n            let ms = this.getMs(order.idOrder);\r\n            listMaintenance = ms.listMaintenance;\r\n            for(let i=0; i<listMaintenance.length; i++){\r\n\r\n                let maintenance = listMaintenance[i];\r\n                if (maintenance.maintained === true){\r\n                    statusMaintenancesUpdated[i] = \"Maintained\";\r\n                } else {\r\n                    statusMaintenancesUpdated[i] = \"Not Maintained\";\r\n                }\r\n            }\r\n            // console.log(statusMaintenancesUpdated);\r\n            this.setState({statusMaintenances: statusMaintenancesUpdated})\r\n        }\r\n    }\r\n\r\n    // Menyaring list order sesuai dengan data yang dimasukkan pada form search\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n        if( value !== \"\" ){\r\n            newOrderList = this.state.ordersVerified.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n                    order.noPO.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    getDate(date) {\r\n        let oldDate = new Date(date);\r\n        const month = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n        return oldDate.getDate() + \" \" + month[oldDate.getMonth()] + \" \" + oldDate.getFullYear();\r\n\r\n    }\r\n\r\n\r\n\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n        this.setState({\r\n            isEdit: false,\r\n            isErrorMsClosed: false,\r\n            isErrorPiClosed: false,\r\n            isSubmitted: false\r\n        });\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name)\r\n        console.log(value)\r\n        const statusMaintenancesUpdated = this.state.statusMaintenances;\r\n        if( name.substring(0,17) === \"statusMaintenance\"){\r\n            let index = Number(name.substring(17));\r\n            statusMaintenancesUpdated[index] = value;\r\n            this.setState({ statusMaintenances: statusMaintenancesUpdated});\r\n        }else{\r\n            this.setState({ [name]: value});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordersVerified,\r\n            isEdit,\r\n            isErrorMsClosed,\r\n            isErrorPiClosed,\r\n            isSubmitted,\r\n            orderTarget,\r\n            statusMaintenances,\r\n            statusMs,\r\n            statusPi,\r\n        } = this.state;\r\n        let listMaintenance;\r\n        const tableHeaders = ['No.', 'Id Order', 'Nomor PO', 'Perusahaan', 'Tipe', 'Status','Aksi'];\r\n        const tableRows = ordersVerified.map((order) => [\r\n            order.idOrder,\r\n            order.noPO,\r\n            order.clientName,\r\n            this.checkTypeOrder(order.projectInstallation, order.managedService),\r\n            this.checkStatus(order),\r\n            this.checkClosedForRender(order, listMaintenance)\r\n        ]);\r\n        const tableMaintenanceHeaders = ['No.', 'Tanggal Maintenance', 'Status'];\r\n        let tableMaintenanceRows;\r\n\r\n\r\n        if(orderTarget !== null){\r\n            if(orderTarget.projectInstallation === true){}\r\n            if(orderTarget.managedService === true){\r\n                let ms = this.getMs(orderTarget.idOrder);\r\n                tableMaintenanceRows = ms.listMaintenance.map((maintenance, index) => [\r\n                    this.getDate(maintenance.dateMn),\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        size=\"lg\"\r\n                        key={index}\r\n                        name={\"statusMaintenance\" + index}\r\n                        value={ statusMaintenances[index] }\r\n                        onChange={this.handleChangeField}>\r\n                        <option value=\"Not Maintained\">Not Maintained</option>\r\n                        <option value=\"Maintained\">Maintained</option>\r\n                    </Form.Control>\r\n                ]);\r\n                listMaintenance = ms.listMaintenance.map((maintenance) => maintenance.idMaintenance);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Daftar Order</h1>\r\n                <div className={classes.search}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter}/></div>\r\n                <CustomizedTables headers={tableHeaders} rows={tableRows}/>\r\n                <Modal show={isEdit} handleCloseModal={this.handleCancel}>\r\n                    <div><h3 id='titleform' >Form Ubah Status Order</h3></div>\r\n                    {orderTarget !== null ?\r\n                        <><Form>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>Id Order</td>\r\n                                    <td>: {orderTarget.idOrder}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Nomor PO</td>\r\n                                    <td>: {orderTarget.noPO}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Perusahaan</td>\r\n                                    <td>: {orderTarget.clientOrg}</td>\r\n                                </tr>\r\n                                { orderTarget.projectInstallation && this.checkStatus(orderTarget) !== \"Closed\"?\r\n                                    <><tr>\r\n                                        <td style={{fontWeight: 'bold'}}>Project Installation</td>\r\n                                    </tr>\r\n                                        <tr>\r\n                                            <td>Status</td>\r\n                                            <td><Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"statusPi\"\r\n                                                value={ this.state.statusPi }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"Inactive\">Inactive</option>\r\n                                                <option value=\"In Progress\">In Progress</option>\r\n                                                <option value=\"On Hold\">On Hold</option>\r\n                                                <option value=\"Closed\">Closed</option>\r\n                                            </Form.Control></td>\r\n                                        </tr>\r\n                                        { this.state.isErrorPiClosed ?\r\n                                            <><tr>\r\n                                                <td style={{fontWeight: 'bold', color: \"#fd693e\"}}>Progress order belum 100%</td>\r\n                                            </tr></> : <></>}\r\n                                    </> : <></>}\r\n                                { orderTarget.managedService && this.checkStatus(orderTarget) !== \"Closed\"?\r\n                                    <><tr>\r\n                                        <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                    </tr>\r\n                                        <tr>\r\n                                            <td>Maintenances</td>\r\n                                            <td>\r\n                                                <><CustomizedTables\r\n                                                    headers={tableMaintenanceHeaders}\r\n                                                    rows={tableMaintenanceRows}>\r\n                                                </CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Status</td>\r\n                                            <td><Form.Control\r\n                                                as=\"select\"\r\n                                                size=\"lg\"\r\n                                                name=\"statusMs\"\r\n                                                value={ this.state.statusMs }\r\n                                                onChange={this.handleChangeField}>\r\n                                                <option value=\"Inactive\">Inactive</option>\r\n                                                <option value=\"Active\">Active</option>\r\n                                                <option value=\"Closed\">Closed</option>\r\n                                            </Form.Control></td>\r\n                                        </tr>\r\n                                        { this.state.isErrorMsClosed ?\r\n                                            <><tr>\r\n                                                <td style={{fontWeight: 'bold', color: \"#FD693E\"}}>Masih ada maintenance yang belum di-maintain</td>\r\n                                            </tr></> : <></>}\r\n                                    </>: <></>}\r\n                            </table>\r\n                            <div style={{alignItems:'right'}}>\r\n                                <Button className={classes.button1} onClick={this.handleSubmit}>\r\n                                    Simpan\r\n                                </Button>\r\n                            </div>\r\n                        </Form></>\r\n                        : <></> }\r\n                </Modal>\r\n                <Modal show={isSubmitted} handleCloseModal={this.handleCancel}>\r\n                    {orderTarget !== null ? <>\r\n                        <div>\r\n                            <h3 id='titleform' >\r\n                                Status Order dengan nomor {orderTarget.noPO} berhasil diubah menjadi\r\n                                {orderTarget.projectInstallation ? \" \" + this.state.statusPi : <></>}\r\n                                {orderTarget.managedService ? \" \" + this.state.statusMs : <></>}\r\n                            </h3>\r\n                        </div></> : <></>}\r\n                    <div style={{alignItems:'right'}}>\r\n                        <Button className={classes.button1} onClick={this.handleCancel}>\r\n                            Ok\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ChangeStatusOrder;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",["332","333"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Dashboard\\index.js",["334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport moment from \"moment\";\r\nimport BarChart from \"../../components/BarChart\";\r\nimport DoughnutChart from \"../../components/DoughnutChart\";\r\nimport authHeader from \"../../services/auth-header\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            engineers: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            services: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isFailed: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            listPi: [],\r\n            listMs: [],\r\n            messageError: null,\r\n            listNamaBulanPi: [],\r\n            listNamaBulanMs: [],\r\n            piBelumSelesai: 0,\r\n            MsBelumSelesai: 0,\r\n            tepatWaktuTelat: [],\r\n            piMasuk: [],\r\n            piSelesai: [],\r\n            msMasuk: [],\r\n            msSelesai: [],\r\n            setPeriodChart2: false,\r\n            startMonth2: \"01_2021\",\r\n            endMonth2: \"12_2021\",\r\n            setPeriodChart3: false,\r\n            startMonth3: \"01_2021\",\r\n            endMonth3: \"12_2021\",\r\n            setPeriodChart4: false,\r\n            startMonth4: \"01_2021\",\r\n            endMonth4: \"12_2021\",\r\n        };\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n\r\n        this.handleAfterSetPeriod = this.handleAfterSetPeriod.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    // Mengambil dan mengupdate data yang masuk\r\n    async loadData() {\r\n        try {\r\n            console.log(\"kok kesini\")\r\n            const piBelumSelesai = await APIConfig.get(\"orders/pi/belumSelesai\", { headers: authHeader() });\r\n            const msBelumSelesai = await APIConfig.get(\"orders/ms/belumSelesai\", { headers: authHeader() });\r\n            const tepatWaktuTelat = await APIConfig.get(`orders/pi/tepatWaktuTelat/${this.state.startMonth2}/${this.state.endMonth2}`, { headers: authHeader() });\r\n            const listNamaBulanPi = await APIConfig.get(`/orders/pi/namaBulan/${this.state.startMonth3}/${this.state.endMonth3}`, { headers: authHeader() });\r\n            const piMasuk = await APIConfig.get(`/orders/pi/masuk/${this.state.startMonth3}/${this.state.endMonth3}`, { headers: authHeader() });\r\n            const piSelesai = await APIConfig.get(`/orders/pi/selesai/${this.state.startMonth3}/${this.state.endMonth3}`, { headers: authHeader() });\r\n            const listNamaBulanMs = await APIConfig.get(`/orders/ms/namaBulan/${this.state.startMonth4}/${this.state.endMonth4}`, { headers: authHeader() });\r\n            const msMasuk = await APIConfig.get(`/orders/ms/masuk/${this.state.startMonth4}/${this.state.endMonth4}`, { headers: authHeader() });\r\n            const msSelesai = await APIConfig.get(`/orders/ms/selesai/${this.state.startMonth4}/${this.state.endMonth4}`, { headers: authHeader() });\r\n            console.log(this.state.startMonth4);\r\n            // console.log(listPi);\r\n            this.setState({\r\n                piBelumSelesai: piBelumSelesai.data, msBelumSelesai: msBelumSelesai.data,\r\n                tepatWaktuTelat: tepatWaktuTelat.data,\r\n                listNamaBulanPi: listNamaBulanPi.data, piMasuk: piMasuk.data, piSelesai: piSelesai.data,\r\n                listNamaBulanMs: listNamaBulanMs.data, msMasuk: msMasuk.data, msSelesai: msSelesai.data,\r\n            });\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Mengubah data yang ditargetkan sesuai dengan isi form\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({ [name]: value });\r\n        console.log(this.state.startMonth4);\r\n    }\r\n\r\n\r\n    // Memunculkan modal Set Period untuk Chart 2\r\n    handleSetPeriodChart2(event){\r\n        this.setState({setPeriodChart2: true})\r\n    }\r\n\r\n    // Memunculkan modal Set Period untuk Chart 3\r\n    handleSetPeriodChart3(event){\r\n        this.setState({setPeriodChart3: true})\r\n    }\r\n\r\n    // Memunculkan modal Set Period untuk Chart 4\r\n    handleSetPeriodChart4(event){\r\n        this.setState({setPeriodChart4: true})\r\n    }\r\n\r\n    handleAfterSetPeriod(event){\r\n        console.log(\"masuk ke sini\");\r\n        console.log(this.state.startMonth4);\r\n        this.setState({\r\n            setPeriodChart2: false,\r\n            setPeriodChart3: false,\r\n            setPeriodChart4: false\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    // Menutup semua modal\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            isEdit: false,\r\n            isReport: false,\r\n            isExtend: false,\r\n            isReportExtend: false,\r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            services: [],\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            picEngineerMs: null,\r\n            newNoPO: null,\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            isFailed: false,\r\n            isSuccess: false,\r\n            isError: false,\r\n            messageError: null,\r\n            setPeriodChart2: false,\r\n            startMonth2: null,\r\n            endMonth2: null,\r\n            setPeriodChart3: false,\r\n            startMonth3: null,\r\n            endMonth3: null,\r\n            setPeriodChart4: false,\r\n            startMonth4: null,\r\n            endMonth4: null,\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            ordersVerified,\r\n            isEdit,\r\n            isExtend,\r\n            orderTarget,\r\n            engineers,\r\n            actualStart,\r\n            actualEnd,\r\n            picEngineerMs,\r\n            isAdded,\r\n            timeRemaining,\r\n            isSuccess,\r\n            isFailed,\r\n            isError,\r\n            messageError,\r\n            servicesEngineer,\r\n            servicesEngineerName,\r\n            isReport,\r\n            isReportExtend,\r\n            orderFiltered,\r\n            isFiltered,\r\n            listService,\r\n            services,\r\n            piBelumSelesaiMsBelumSelesai,\r\n            tepatWaktuTelat,\r\n            piMasuk,\r\n            piSelesai,\r\n            listNamaBulanPi,\r\n            lisNamaBulanMs,\r\n            msMasuk,\r\n            msSelesai,\r\n            setPeriodChart2,\r\n            startMonth2,\r\n            endMonth2,\r\n            setPeriodChart3,\r\n            startMonth3,\r\n            endMonth3,\r\n            setPeriodChart4,\r\n            startMonth4,\r\n            endMonth4\r\n        } = this.state;\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.container}>\r\n                    <div><h1 className=\"text-center\">Dashboard</h1></div>\r\n                    <Table>\r\n                        <tr>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Jumlah Project Installation dan Managed Services yang Belum Selesai</h1> </div>\r\n                                <Table>\r\n                                    <tr>\r\n                                        <td><h1>{this.state.piBelumSelesai}</h1></td>\r\n                                        <td><h1>{this.state.msBelumSelesai}</h1></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h3>Project Installation</h3></td>\r\n                                        <td><h3>Managed Services</h3></td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </td>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Persentase Penyelesaian Tepat Waktu</h1></div>\r\n                                <DoughnutChart data={this.state.tepatWaktuTelat}></DoughnutChart>\r\n                                <Button\r\n                                    className={classes.button2}\r\n                                    onClick={() => this.handleSetPeriodChart2()}\r\n                                >\r\n                                    Set Period\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Jumlah Project Installation yang Masuk dan Selesai</h1></div>\r\n                                <BarChart namaBulan={this.state.listNamaBulanPi} masuk={this.state.piMasuk} selesai={this.state.piSelesai}></BarChart>\r\n                                <Button\r\n                                    className={classes.button2}\r\n                                    onClick={() => this.handleSetPeriodChart3()}\r\n                                >\r\n                                    Set Period\r\n                                </Button>\r\n                            </td>\r\n                            <td>\r\n                                <div><h1 className=\"text-center\">Jumlah Managed Services yang Masuk dan Selesai</h1></div>\r\n                                <BarChart namaBulan={this.state.listNamaBulanMs} masuk={this.state.msMasuk} selesai={this.state.msSelesai}></BarChart>\r\n                                <Button\r\n                                    className={classes.button2}\r\n                                    onClick={() => this.handleSetPeriodChart4()}\r\n                                >\r\n                                    Set Period\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    </Table>\r\n                    <Modal\r\n                        show={setPeriodChart2}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.handleCancel}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Set Period\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Table borderless responsive=\"xl\" size=\"sm\">\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>Start Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"startMonth2\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 01_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>End Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"endMonth2\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 12_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                        <td style={{color: \"red\"}}>Format: bulan_tahun</td>\r\n                                        <td className=\"d-flex justify-content-end\">\r\n                                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleAfterSetPeriod}>\r\n                                                Simpan\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        show={setPeriodChart3}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.handleCancel}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Set Period\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Table borderless responsive=\"xl\" size=\"sm\">\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>Start Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"startMonth3\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 01_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>End Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"endMonth3\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 12_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                        <td style={{color: \"red\"}}>Format: bulan_tahun</td>\r\n                                        <td className=\"d-flex justify-content-end\">\r\n                                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleAfterSetPeriod}>\r\n                                                Simpan\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                    <Modal\r\n                        show={setPeriodChart4}\r\n                        dialogClassName=\"modal-90w\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    >\r\n                        <Modal.Header closeButton onClick={this.handleCancel}>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Set Period\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                                <Table borderless responsive=\"xl\" size=\"sm\">\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>Start Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"startMonth4\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 01_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <p>End Month<p style={{color: \"red\"}}>*</p></p>\r\n                                        </td>\r\n                                        <td><Form.Control type=\"text\" size=\"sm\" name=\"endMonth4\" className={classes.notes} onChange={this.handleChangeField} placeholder=\"e.g.: 12_2021\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                        <td style={{color: \"red\"}}>Format: bulan_tahun</td>\r\n                                        <td className=\"d-flex justify-content-end\">\r\n                                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleAfterSetPeriod}>\r\n                                                Simpan\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Table>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n                </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\Bast\\index.js",["373","374","375","376","377","378","379","380","381","382","383","384","385"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport CustomizedButtons from \"../../components/Button\";\r\nimport Modal from \"../../components/Modal\";\r\nimport {Form, Card, Table} from \"react-bootstrap\";\r\nimport { Input, FormControlLabel } from \"@material-ui/core\";\r\nimport './style.css';\r\nimport authHeader from '../../services/auth-header';\r\n\r\n\r\nclass Bast extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bast: {\r\n                //\"bast\":{\"idBast\":1,\"bastNum\":\"001/LMD-BAST/020/04/2021\",\"dateHandover\":\"2021-04-21T17:00:00.000+00:00\",\"startPeriod\":null,\"endPeriod\":null},\r\n                //\"order\":{\"idOrder\":1,\"orderName\":\"Proyek Installasi - proyek Ebesha Pacil\",\"clientName\":\"Kamila Kaffah\",\"clientOrg\":\"PT. Pacil\",\"clientDiv\":\"HRGA\",\"clientPIC\":\"PIC\",\"clientEmail\":\"kamila@pacil.id\",\"clientPhone\":\"0888303031\",\"dateOrder\":\"2021-04-01T16:13:09.000+00:00\",\"noPO\":\"PO/2021/04/0001\",\"noSPH\":null,\"description\":\"Order Proyek Instalasi eBesha\",\"hibernateLazyInitializer\":{},\"managedService\":false,\"verified\":false,\"projectInstallation\":true},\r\n                //\"engineer\":{\"id\":\"2\",\"username\":\"hannaj\",\"password\":\"$2a$10$s095279is4QwurSScfHPFOnRLHSzvcibI5bZtbA25s3cmIu5/EvfS\",\"nip\":\"1906020002\",\"fullname\":\"Hanna Jannatunnaiim\",\"surname\":\"Hanna\",\"email\":\"hanna@lmd.co.id\"}\r\n                },\r\n            report: {},\r\n            pi:{},\r\n            mn:{},\r\n            laporanList:[],\r\n            orderList:[],\r\n            bastList:[],\r\n            piList:[],\r\n            mnList:[],\r\n            dateHandover: null,\r\n            isOption: true,\r\n            isToCreate: false,\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isMn: null,\r\n            idPi: null,\r\n            idMn: null,\r\n            endPeriod: null,\r\n            startPeriod: null,\r\n            isPopup: false,\r\n            isError:true,\r\n            errorMsg: \"Seluruh field pada form ini harus terisi sebelum disubmit. Mohon melengkapi data sebelum membuat preview BAST.\",\r\n        };\r\n\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    async loadData() {\r\n        try {\r\n            const laporan = await APIConfig.get(\"/laporan\", { headers: authHeader() });\r\n            const order = await APIConfig.get(\"/laporan/order\", { headers: authHeader() });\r\n            const bast = await APIConfig.get(\"/laporan/bast\", { headers: authHeader() });\r\n            const pi = await APIConfig.get(\"/laporan/pi\", { headers: authHeader() });\r\n            const mn = await APIConfig.get(\"/laporan/mn\", { headers: authHeader() });\r\n            this.setState({ laporanList: laporan.data,\r\n                orderList: order.data,\r\n                bastList: bast.data,\r\n                piList: pi.data,\r\n                mnList: mn.data});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleCreatePi(){\r\n        try {\r\n            const Pi = (await APIConfig.get(\"/laporan/bast/create/pi\", { headers: authHeader() })).data;\r\n            const list = APIConfig.get(\"/laporan/pi\", { headers: authHeader() }).data;\r\n            this.loadData()\r\n            //console.log(Pi);\r\n            this.setState({\r\n                listPi: list,\r\n                report: Pi.report,\r\n                bast: Pi.bastPi,\r\n                isOption: false,\r\n                isToCreate: true,\r\n                isMaintenance: false});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async handleCreateMn(){\r\n        try {\r\n            const Mn = (await APIConfig.get(\"/laporan/bast/create/mn\", { headers: authHeader() })).data;\r\n            this.loadData();\r\n            //console.log(Mn.maintenanceList);\r\n            this.setState({\r\n                listMn: Mn.maintenanceList,\r\n                report: Mn.report,\r\n                bast: Mn.bastMn,\r\n                isOption: false,\r\n                isToCreate: true,\r\n                isMaintenance: true});\r\n\r\n        } catch (error) {\r\n            alert(\"Oops terjadi masalah pada server\");\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleEdit(laporan){\r\n        this.setState({\r\n            isEdit: true,\r\n            laporanTarget:laporan});\r\n    }\r\n\r\n    handleCancel(event){\r\n        event.preventDefault();\r\n        this.setState({isEdit: false, isPopup:false});\r\n    }\r\n\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        console.log(name, value);\r\n        var score;\r\n        var count = 0\r\n\r\n        if(name === \"idMaintenance\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.endPeriod===null\r\n            count++;\r\n            this.setState({mn: value})\r\n            this.setState({isError:score})\r\n        }\r\n        if(name === \"idOrderPi\" && value !== ''){\r\n            this.setState({pi: value})\r\n            this.setState({isError:false})\r\n        }\r\n        if(name === \"dateHandover\" && value !== ''){\r\n            this.setState({dateHandover: value})\r\n            count++;\r\n            //console.log(this.state.dateHandover);\r\n        }\r\n        if(name === \"startPeriod\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.idMaintenance === null ||this.state.endPeriod===null\r\n            count++;\r\n            this.setState({startPeriod: value})\r\n            this.setState({isError:score})\r\n        }\r\n        if(name === \"endPeriod\" && value !== ''){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.idMaintenance===null\r\n            count++;\r\n            this.setState({endPeriod: value})\r\n            this.setState({isError:score})\r\n        }\r\n\r\n\r\n        if(this.state.mn !== null){\r\n            var score = this.state.dateHandover === null || this.state.startPeriod === null ||this.state.endPeriod===null\r\n            if(score === false){this.setState({isError:false})}\r\n        } else{\r\n            {this.setState({isError:false})}\r\n        }\r\n        console.log(this.state.isError)\r\n\r\n    }\r\n\r\n    handleSubmit(event){\r\n        let test = this.state.endPeriod;\r\n        if(test === null){\r\n            try{\r\n                let bastPi = {\r\n                    idReport: null,\r\n                    idBast: this.state.bast.idBast,\r\n                    bastNum: this.state.bast.bastNum,\r\n                    dateHandover: this.state.dateHandover,\r\n                    idMaintenance: null,\r\n                    idOrderPi: this.state.pi,\r\n                    startPeriod: null,\r\n                    endPeriod: null,\r\n                };\r\n                this.setState({isPopup: true,\r\n                    isToCreate: false,\r\n                })\r\n                if(this.state.isError === true){\r\n                    alert(this.state.errorMsg);\r\n                    this.setState({isOption:true, isToCreate:false, isPopup: false\r\n                    })\r\n                } if(this.state.isError === false){\r\n                    let res = APIConfig.post(`/laporan/create-bast/pi`, bastPi, { headers: authHeader() })\r\n                    this.setState({isPopup: true,\r\n                    })\r\n                    this.loadData();\r\n                }\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n        else{\r\n            try{\r\n                const dataMn = {\r\n                    idReport: null,\r\n                    idBast: this.state.bast.idBast,\r\n                    bastNum: this.state.bast.bastNum,\r\n                    dateHandover: this.state.dateHandover,\r\n                    idMaintenance: this.state.mn,\r\n                    idOrderPi: null,\r\n                    startPeriod: this.state.startPeriod,\r\n                    endPeriod: this.state.endPeriod,\r\n                };\r\n                if(this.state.isError === true){\r\n                    alert(this.state.errorMsg);\r\n                    this.setState({isOption:true, isToCreate:false, isPopup: false\r\n                    })\r\n                }\r\n                if(this.state.isError === false){\r\n                    let res = APIConfig.post(`/laporan/create-bast/mn`, dataMn, { headers: authHeader() });\r\n                    this.setState({isPopup: true,\r\n                    })\r\n                    this.loadData();\r\n                    console.log(this.state.bast.idOrderPi);\r\n                }\r\n\r\n            }catch (error) {\r\n                alert(\"Oops terjadi masalah pada server\");\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let {isOption, isToCreate, isMaintenance, isPopup} = this.state;\r\n\r\n        let piList = this.state.piList;\r\n        let mnList = this.state.mnList;\r\n\r\n        const pi = this.state.pi;\r\n        const mn = this.state.mn;\r\n\r\n        return(\r\n            <div>\r\n                {isOption === true && isToCreate === false && isPopup === false?\r\n                <div id=\"buttonoption\">\r\n                    <Card id=\"option\">\r\n                        <h3 id=\"titleGenerate\" >Generate BAST</h3>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleCreatePi()}>Proyek Installasi</CustomizedButtons>\r\n                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleCreateMn()}>Maintenance</CustomizedButtons>\r\n                    </Card>\r\n\r\n                </div>\r\n                : <div></div>\r\n            }\r\n            {isToCreate === true && isOption === false && isMaintenance === true ?\r\n                <div>\r\n                    <Card >\r\n                        <Form>\r\n                            <table id=\"card-table\">\r\n                                <tr>\r\n                                    <td colSpan={2}><h4 id=\"titleGenerate\" >Create BAST Maintenance</h4></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Maintenance :</h5></td>\r\n                                    <td><Form.Control as=\"select\"  name=\"idMaintenance\"\r\n                                                      onChange={this.handleChangeField} placeholder=\"Maintenance\" title=\"Maintenance\">\r\n                                        <option value=''>-Pilih Maintenance-</option>\r\n                                        {mnList.map((mn, index) => <option key={index} value={mn.idMaintenance}> Maintenance of {mn.dateMn.toString().substr(0,10)} (ID:{mn.idMaintenance}) </option>)}\r\n                                    </Form.Control>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Tanggal Penyerahan:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"dateHandover\" onChange={this.handleChangeField}></Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Periode Awal Maintenance:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"startPeriod\" onChange={this.handleChangeField}> </Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><h5>Periode Akhir Maintenance:</h5></td>\r\n                                    <td><Input type=\"date\" name=\"endPeriod\" onChange={this.handleChangeField}></Input></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><br></br></td>\r\n                                    <td><br></br></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td colSpan={2}>\r\n                                        <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleSubmit()}>Create Preview BAST</CustomizedButtons>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </Form>\r\n                    </Card>\r\n\r\n                </div>\r\n                :\r\n                <div></div>\r\n            }\r\n                {isToCreate === true && isOption === false && isMaintenance === false && isPopup === false?\r\n                    <div>\r\n                        <Card id=\"option2\">\r\n                            <Form>\r\n                                <table id=\"card-table2\">\r\n                                    <tr>\r\n                                        <td colSpan={2}><h4 id=\"titleGenerate\" >Create BAST Project Installation</h4></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h5>Proyek Installasi:</h5></td>\r\n                                        <td>\r\n\r\n                                            <Form.Control as=\"select\" size=\"lg\" name=\"idOrderPi\"\r\n                                                          onChange={this.handleChangeField}>\r\n                                                <option value=''>-Pilih Proyek Installasi-</option>\r\n                                                {piList.map((pi, index) => <option key={index} value={pi.idOrderPi}>Proyek Installasi - {pi.idOrderPi}</option>)}\r\n                                            </Form.Control>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><br></br></td>\r\n                                        <td><br></br></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><h5>Tanggal Penyerahan:</h5></td>\r\n                                        <td><Input type=\"date\" name=\"dateHandover\" onChange={this.handleChangeField}></Input></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colSpan={2}>\r\n                                            <CustomizedButtons variant=\"contained\" size=\"small\" color=\"#FD693E\" onClick={() => this.handleSubmit()}>Create Preview BAST</CustomizedButtons>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n\r\n                            </Form>\r\n                        </Card>\r\n\r\n                    </div>\r\n                    :\r\n                    <div> </div>\r\n                }\r\n                {isPopup === true?\r\n                    <div id=\"preview\">\r\n                        <Modal show={isPopup} handleCloseModal={this.handleCancel}>\r\n                            <h2 style={{ marginTop: 0, marginBottom: 0}}><b>Preview BAST untuk order telah berhasil dibuat.</b></h2>\r\n                            <a onClick={(event)=>this.handleClose(event)} href={\"/laporan/admin\"}><h6 id=\"highlighted3\"> &#8810; Kembali ke Daftar Laporan</h6></a>\r\n                        </Modal>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Bast;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\FinalisasiLaporan\\index.js",["386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\services\\InstallationProjectService.js",["406"],"import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\n// const DELIVERY_PROGRESS_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/delivery-progress\";\r\n// const LIST_TASK_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/list-task\";\r\n// const ADD_TASK_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/addTask\";\r\n// const GET_TASK_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/retrieve-task\";\r\n// const GET_PI_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/detail/PI/\";\r\n// const GET_PI_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/name/PI/\";\r\n\r\nconst DELIVERY_PROGRESS_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/delivery-progress\";\r\nconst LIST_TASK_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/list-task\";\r\nconst ADD_TASK_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/addTask\";\r\nconst GET_TASK_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/retrieve-task\";\r\nconst GET_PI_API_BASE_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/detail/PI/\";\r\nconst GET_ORDER_NAME_PI_URL = \"https://propen-a01-sipel.herokuapp.com/api/v1/order/name/PI/\";\r\n\r\nclass InstallationProjectService {\r\n\r\n    getVerifiedOrderPi(){\r\n        return axios.get(DELIVERY_PROGRESS_API_BASE_URL, { headers: authHeader() });\r\n    }\r\n\r\n    getListTaskByIdPi(idOrderPi){\r\n       return axios.get(LIST_TASK_API_BASE_URL + '/' + idOrderPi, { headers: authHeader() });\r\n    }\r\n\r\n    createTask(task, idOrderPi){\r\n        return axios.post(LIST_TASK_API_BASE_URL + '/' + idOrderPi, task, { headers: authHeader() });\r\n    }\r\n\r\n    getTaskByIdTask(idTask){\r\n        return axios.get(GET_TASK_API_BASE_URL+'/'+idTask, { headers: authHeader() });\r\n    }\r\n\r\n    updateTaskModel(task, idTask){\r\n        return axios.put(LIST_TASK_API_BASE_URL+'/'+idTask, task, { headers: authHeader() });\r\n    }\r\n\r\n    getPiByIdPi(idPi){\r\n        return axios.get(GET_PI_API_BASE_URL+idPi, { headers: authHeader() });\r\n    }\r\n\r\n    getPiNameByIdPi(idPi){\r\n        return axios.get(GET_ORDER_NAME_PI_URL+idPi, { headers: authHeader() });\r\n    }\r\n\r\n    deleteTask(idTask){\r\n        return axios.delete(LIST_TASK_API_BASE_URL+'/'+idTask, { headers: authHeader() });\r\n    }\r\n\r\n}\r\n\r\nexport default new InstallationProjectService();","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\maintenanceList.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Maintenance\\mnTableDetail.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Services\\serviceList.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ManagedService\\msDetail.js",["407","408","409"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetailForUnggah.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\ProjectInstallation\\piDetail.js",["410","411"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\CreateOrder\\CreateOrder.js",["412"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Order\\orderDetail.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ReportFinance\\index.js",["413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ReportAdmin\\index.js",["439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Laporan\\laporanUbahStatusForm.js",["464"],"import React from \"react\";\r\nimport classes from \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Laporan = (props) => {\r\n    const { \r\n        reportNum,\r\n        reportName,\r\n        noPO,\r\n        clientOrg,\r\n        statusApproval,\r\n        uploadedDate,\r\n         } = props;\r\n    return (\r\n        <div>\r\n            <p style={{color: \"black\"}}>{`Nomor Laporan: ${reportNum}`}</p>\r\n            <p style={{color: \"black\"}}>{`Nama Laporan: ${reportName}`}</p>\r\n            <p style={{color: \"black\"}}>{`Nomor PO: ${noPO}`}</p>\r\n            <p style={{color: \"black\"}}>{`Perusahaan Pelanggan: ${clientOrg}`}</p>\r\n            <p style={{color: \"black\"}}>{`Status: ${statusApproval}`}</p>\r\n            <p style={{color: \"black\"}}>{`Tanggal Dibuat: ${uploadedDate}`}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Laporan;","C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\ReportHead\\index.js",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Modal\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\BarChart\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\DoughnutChart\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\components\\Backdrop\\index.js",[],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\OrderAndDoc\\OrderAndDoc.js",["499","500","501"],"C:\\Users\\ME\\Documents\\impl-propen\\post-sem\\propen-a01-sipel-frontend\\src\\containers\\OrderAndDoc\\DetailOrderAndDoc.js",["502","503","504","505","506","507","508","509","510","511","512","513"],{"ruleId":"514","replacedBy":"515"},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"519","line":6,"column":8,"nodeType":"520","messageId":"521","endLine":6,"endColumn":16},{"ruleId":"518","severity":1,"message":"522","line":9,"column":50,"nodeType":"520","messageId":"521","endLine":9,"endColumn":54},{"ruleId":"518","severity":1,"message":"523","line":5,"column":10,"nodeType":"520","messageId":"521","endLine":5,"endColumn":20},{"ruleId":"518","severity":1,"message":"524","line":6,"column":13,"nodeType":"520","messageId":"521","endLine":6,"endColumn":19},{"ruleId":"518","severity":1,"message":"525","line":10,"column":8,"nodeType":"520","messageId":"521","endLine":10,"endColumn":13},{"ruleId":"518","severity":1,"message":"526","line":11,"column":7,"nodeType":"520","messageId":"521","endLine":11,"endColumn":16},{"ruleId":"518","severity":1,"message":"527","line":119,"column":25,"nodeType":"520","messageId":"521","endLine":119,"endColumn":36},{"ruleId":"518","severity":1,"message":"524","line":7,"column":13,"nodeType":"520","messageId":"521","endLine":7,"endColumn":19},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"529","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"524","line":14,"column":13,"nodeType":"520","messageId":"521","endLine":14,"endColumn":19},{"ruleId":"518","severity":1,"message":"530","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":16,"column":8,"nodeType":"520","messageId":"521","endLine":16,"endColumn":25},{"ruleId":"518","severity":1,"message":"532","line":235,"column":13,"nodeType":"520","messageId":"521","endLine":235,"endColumn":17},{"ruleId":"518","severity":1,"message":"533","line":236,"column":13,"nodeType":"520","messageId":"521","endLine":236,"endColumn":21},{"ruleId":"518","severity":1,"message":"534","line":238,"column":13,"nodeType":"520","messageId":"521","endLine":238,"endColumn":28},{"ruleId":"518","severity":1,"message":"535","line":239,"column":13,"nodeType":"520","messageId":"521","endLine":239,"endColumn":28},{"ruleId":"518","severity":1,"message":"536","line":240,"column":13,"nodeType":"520","messageId":"521","endLine":240,"endColumn":34},{"ruleId":"518","severity":1,"message":"537","line":241,"column":13,"nodeType":"520","messageId":"521","endLine":241,"endColumn":33},{"ruleId":"518","severity":1,"message":"538","line":246,"column":15,"nodeType":"520","messageId":"521","endLine":246,"endColumn":29},{"ruleId":"518","severity":1,"message":"539","line":120,"column":13,"nodeType":"520","messageId":"521","endLine":120,"endColumn":24},{"ruleId":"518","severity":1,"message":"526","line":13,"column":7,"nodeType":"520","messageId":"521","endLine":13,"endColumn":16},{"ruleId":"518","severity":1,"message":"527","line":191,"column":25,"nodeType":"520","messageId":"521","endLine":191,"endColumn":36},{"ruleId":"518","severity":1,"message":"540","line":191,"column":49,"nodeType":"520","messageId":"521","endLine":191,"endColumn":53},{"ruleId":"518","severity":1,"message":"541","line":191,"column":55,"nodeType":"520","messageId":"521","endLine":191,"endColumn":65},{"ruleId":"542","severity":1,"message":"543","line":210,"column":48,"nodeType":"544","endLine":210,"endColumn":121},{"ruleId":"542","severity":1,"message":"543","line":225,"column":48,"nodeType":"544","endLine":225,"endColumn":121},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"545","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":24},{"ruleId":"518","severity":1,"message":"528","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":25},{"ruleId":"518","severity":1,"message":"546","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":13},{"ruleId":"518","severity":1,"message":"547","line":6,"column":21,"nodeType":"520","messageId":"521","endLine":6,"endColumn":26},{"ruleId":"518","severity":1,"message":"548","line":7,"column":10,"nodeType":"520","messageId":"521","endLine":7,"endColumn":15},{"ruleId":"518","severity":1,"message":"549","line":7,"column":17,"nodeType":"520","messageId":"521","endLine":7,"endColumn":33},{"ruleId":"518","severity":1,"message":"550","line":43,"column":17,"nodeType":"520","messageId":"521","endLine":43,"endColumn":23},{"ruleId":"518","severity":1,"message":"551","line":82,"column":14,"nodeType":"520","messageId":"521","endLine":82,"endColumn":22},{"ruleId":"518","severity":1,"message":"552","line":82,"column":24,"nodeType":"520","messageId":"521","endLine":82,"endColumn":32},{"ruleId":"553","severity":1,"message":"554","line":6,"column":5,"nodeType":"555","messageId":"556","endLine":8,"endColumn":6},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"524","line":13,"column":13,"nodeType":"520","messageId":"521","endLine":13,"endColumn":19},{"ruleId":"518","severity":1,"message":"557","line":154,"column":88,"nodeType":"520","messageId":"521","endLine":154,"endColumn":98},{"ruleId":"518","severity":1,"message":"558","line":154,"column":100,"nodeType":"520","messageId":"521","endLine":154,"endColumn":109},{"ruleId":"518","severity":1,"message":"559","line":154,"column":111,"nodeType":"520","messageId":"521","endLine":154,"endColumn":118},{"ruleId":"518","severity":1,"message":"528","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":25},{"ruleId":"518","severity":1,"message":"560","line":6,"column":24,"nodeType":"520","messageId":"521","endLine":6,"endColumn":28},{"ruleId":"518","severity":1,"message":"547","line":6,"column":30,"nodeType":"520","messageId":"521","endLine":6,"endColumn":35},{"ruleId":"561","severity":1,"message":"562","line":256,"column":27,"nodeType":"563","messageId":"564","endLine":256,"endColumn":29},{"ruleId":"561","severity":1,"message":"562","line":256,"column":52,"nodeType":"563","messageId":"564","endLine":256,"endColumn":54},{"ruleId":"561","severity":1,"message":"562","line":269,"column":27,"nodeType":"563","messageId":"564","endLine":269,"endColumn":29},{"ruleId":"561","severity":1,"message":"562","line":282,"column":27,"nodeType":"563","messageId":"564","endLine":282,"endColumn":29},{"ruleId":"518","severity":1,"message":"565","line":378,"column":13,"nodeType":"520","messageId":"521","endLine":378,"endColumn":28},{"ruleId":"518","severity":1,"message":"566","line":379,"column":13,"nodeType":"520","messageId":"521","endLine":379,"endColumn":28},{"ruleId":"518","severity":1,"message":"567","line":383,"column":13,"nodeType":"520","messageId":"521","endLine":383,"endColumn":21},{"ruleId":"518","severity":1,"message":"568","line":384,"column":13,"nodeType":"520","messageId":"521","endLine":384,"endColumn":21},{"ruleId":"542","severity":1,"message":"543","line":426,"column":48,"nodeType":"544","endLine":426,"endColumn":121},{"ruleId":"542","severity":1,"message":"543","line":441,"column":48,"nodeType":"544","endLine":441,"endColumn":121},{"ruleId":"518","severity":1,"message":"545","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":24},{"ruleId":"518","severity":1,"message":"560","line":4,"column":24,"nodeType":"520","messageId":"521","endLine":4,"endColumn":28},{"ruleId":"518","severity":1,"message":"524","line":8,"column":8,"nodeType":"520","messageId":"521","endLine":8,"endColumn":14},{"ruleId":"518","severity":1,"message":"569","line":180,"column":13,"nodeType":"520","messageId":"521","endLine":180,"endColumn":27},{"ruleId":"518","severity":1,"message":"570","line":181,"column":13,"nodeType":"520","messageId":"521","endLine":181,"endColumn":19},{"ruleId":"518","severity":1,"message":"571","line":182,"column":13,"nodeType":"520","messageId":"521","endLine":182,"endColumn":21},{"ruleId":"518","severity":1,"message":"527","line":183,"column":13,"nodeType":"520","messageId":"521","endLine":183,"endColumn":24},{"ruleId":"518","severity":1,"message":"572","line":184,"column":13,"nodeType":"520","messageId":"521","endLine":184,"endColumn":22},{"ruleId":"518","severity":1,"message":"573","line":185,"column":13,"nodeType":"520","messageId":"521","endLine":185,"endColumn":24},{"ruleId":"518","severity":1,"message":"574","line":186,"column":13,"nodeType":"520","messageId":"521","endLine":186,"endColumn":22},{"ruleId":"518","severity":1,"message":"575","line":187,"column":13,"nodeType":"520","messageId":"521","endLine":187,"endColumn":26},{"ruleId":"518","severity":1,"message":"576","line":188,"column":13,"nodeType":"520","messageId":"521","endLine":188,"endColumn":20},{"ruleId":"518","severity":1,"message":"577","line":189,"column":13,"nodeType":"520","messageId":"521","endLine":189,"endColumn":26},{"ruleId":"518","severity":1,"message":"578","line":190,"column":13,"nodeType":"520","messageId":"521","endLine":190,"endColumn":22},{"ruleId":"518","severity":1,"message":"579","line":191,"column":13,"nodeType":"520","messageId":"521","endLine":191,"endColumn":21},{"ruleId":"518","severity":1,"message":"559","line":192,"column":13,"nodeType":"520","messageId":"521","endLine":192,"endColumn":20},{"ruleId":"518","severity":1,"message":"580","line":193,"column":13,"nodeType":"520","messageId":"521","endLine":193,"endColumn":25},{"ruleId":"518","severity":1,"message":"581","line":194,"column":13,"nodeType":"520","messageId":"521","endLine":194,"endColumn":29},{"ruleId":"518","severity":1,"message":"582","line":195,"column":13,"nodeType":"520","messageId":"521","endLine":195,"endColumn":33},{"ruleId":"518","severity":1,"message":"583","line":196,"column":13,"nodeType":"520","messageId":"521","endLine":196,"endColumn":21},{"ruleId":"518","severity":1,"message":"584","line":197,"column":13,"nodeType":"520","messageId":"521","endLine":197,"endColumn":27},{"ruleId":"518","severity":1,"message":"585","line":198,"column":13,"nodeType":"520","messageId":"521","endLine":198,"endColumn":26},{"ruleId":"518","severity":1,"message":"586","line":199,"column":13,"nodeType":"520","messageId":"521","endLine":199,"endColumn":23},{"ruleId":"518","severity":1,"message":"587","line":200,"column":13,"nodeType":"520","messageId":"521","endLine":200,"endColumn":24},{"ruleId":"518","severity":1,"message":"588","line":201,"column":13,"nodeType":"520","messageId":"521","endLine":201,"endColumn":21},{"ruleId":"518","severity":1,"message":"589","line":202,"column":13,"nodeType":"520","messageId":"521","endLine":202,"endColumn":41},{"ruleId":"518","severity":1,"message":"590","line":203,"column":13,"nodeType":"520","messageId":"521","endLine":203,"endColumn":28},{"ruleId":"518","severity":1,"message":"591","line":204,"column":13,"nodeType":"520","messageId":"521","endLine":204,"endColumn":20},{"ruleId":"518","severity":1,"message":"592","line":205,"column":13,"nodeType":"520","messageId":"521","endLine":205,"endColumn":22},{"ruleId":"518","severity":1,"message":"593","line":206,"column":13,"nodeType":"520","messageId":"521","endLine":206,"endColumn":28},{"ruleId":"518","severity":1,"message":"594","line":207,"column":13,"nodeType":"520","messageId":"521","endLine":207,"endColumn":27},{"ruleId":"518","severity":1,"message":"595","line":208,"column":13,"nodeType":"520","messageId":"521","endLine":208,"endColumn":20},{"ruleId":"518","severity":1,"message":"596","line":209,"column":13,"nodeType":"520","messageId":"521","endLine":209,"endColumn":22},{"ruleId":"518","severity":1,"message":"597","line":211,"column":13,"nodeType":"520","messageId":"521","endLine":211,"endColumn":24},{"ruleId":"518","severity":1,"message":"598","line":212,"column":13,"nodeType":"520","messageId":"521","endLine":212,"endColumn":22},{"ruleId":"518","severity":1,"message":"599","line":214,"column":13,"nodeType":"520","messageId":"521","endLine":214,"endColumn":24},{"ruleId":"518","severity":1,"message":"600","line":215,"column":13,"nodeType":"520","messageId":"521","endLine":215,"endColumn":22},{"ruleId":"518","severity":1,"message":"601","line":217,"column":13,"nodeType":"520","messageId":"521","endLine":217,"endColumn":24},{"ruleId":"518","severity":1,"message":"602","line":218,"column":13,"nodeType":"520","messageId":"521","endLine":218,"endColumn":22},{"ruleId":"518","severity":1,"message":"545","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":24},{"ruleId":"518","severity":1,"message":"547","line":6,"column":21,"nodeType":"520","messageId":"521","endLine":6,"endColumn":26},{"ruleId":"518","severity":1,"message":"549","line":7,"column":17,"nodeType":"520","messageId":"521","endLine":7,"endColumn":33},{"ruleId":"603","severity":1,"message":"604","line":131,"column":17,"nodeType":"520","messageId":"605","endLine":131,"endColumn":22},{"ruleId":"603","severity":1,"message":"604","line":146,"column":17,"nodeType":"520","messageId":"605","endLine":146,"endColumn":22},{"ruleId":"603","severity":1,"message":"604","line":152,"column":17,"nodeType":"520","messageId":"605","endLine":152,"endColumn":22},{"ruleId":"518","severity":1,"message":"606","line":153,"column":13,"nodeType":"520","messageId":"521","endLine":153,"endColumn":18},{"ruleId":"603","severity":1,"message":"604","line":160,"column":17,"nodeType":"520","messageId":"605","endLine":160,"endColumn":22},{"ruleId":"607","severity":1,"message":"608","line":163,"column":13,"nodeType":"609","messageId":"610","endLine":163,"endColumn":45},{"ruleId":"518","severity":1,"message":"611","line":191,"column":25,"nodeType":"520","messageId":"521","endLine":191,"endColumn":28},{"ruleId":"518","severity":1,"message":"611","line":220,"column":25,"nodeType":"520","messageId":"521","endLine":220,"endColumn":28},{"ruleId":"518","severity":1,"message":"612","line":241,"column":15,"nodeType":"520","messageId":"521","endLine":241,"endColumn":17},{"ruleId":"518","severity":1,"message":"613","line":242,"column":15,"nodeType":"520","messageId":"521","endLine":242,"endColumn":17},{"ruleId":"603","severity":1,"message":"614","line":448,"column":21,"nodeType":"520","messageId":"605","endLine":448,"endColumn":25},{"ruleId":"518","severity":1,"message":"615","line":454,"column":13,"nodeType":"520","messageId":"521","endLine":454,"endColumn":17},{"ruleId":"603","severity":1,"message":"616","line":470,"column":25,"nodeType":"520","messageId":"605","endLine":470,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":471,"column":25,"nodeType":"520","messageId":"605","endLine":471,"endColumn":29},{"ruleId":"603","severity":1,"message":"616","line":476,"column":25,"nodeType":"520","messageId":"605","endLine":476,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":477,"column":25,"nodeType":"520","messageId":"605","endLine":477,"endColumn":29},{"ruleId":"603","severity":1,"message":"618","line":490,"column":17,"nodeType":"520","messageId":"605","endLine":490,"endColumn":20},{"ruleId":"603","severity":1,"message":"619","line":491,"column":17,"nodeType":"520","messageId":"605","endLine":491,"endColumn":22},{"ruleId":"518","severity":1,"message":"620","line":505,"column":13,"nodeType":"520","messageId":"521","endLine":505,"endColumn":22},{"ruleId":"518","severity":1,"message":"621","line":511,"column":13,"nodeType":"520","messageId":"521","endLine":511,"endColumn":16},{"ruleId":"603","severity":1,"message":"622","line":516,"column":13,"nodeType":"520","messageId":"605","endLine":516,"endColumn":16},{"ruleId":"518","severity":1,"message":"623","line":575,"column":9,"nodeType":"520","messageId":"521","endLine":575,"endColumn":15},{"ruleId":"518","severity":1,"message":"624","line":576,"column":9,"nodeType":"520","messageId":"521","endLine":576,"endColumn":15},{"ruleId":"518","severity":1,"message":"625","line":734,"column":13,"nodeType":"520","messageId":"521","endLine":734,"endColumn":25},{"ruleId":"518","severity":1,"message":"578","line":740,"column":13,"nodeType":"520","messageId":"521","endLine":740,"endColumn":22},{"ruleId":"518","severity":1,"message":"533","line":741,"column":13,"nodeType":"520","messageId":"521","endLine":741,"endColumn":21},{"ruleId":"518","severity":1,"message":"534","line":742,"column":13,"nodeType":"520","messageId":"521","endLine":742,"endColumn":28},{"ruleId":"518","severity":1,"message":"559","line":744,"column":13,"nodeType":"520","messageId":"521","endLine":744,"endColumn":20},{"ruleId":"518","severity":1,"message":"626","line":745,"column":13,"nodeType":"520","messageId":"521","endLine":745,"endColumn":28},{"ruleId":"518","severity":1,"message":"627","line":749,"column":13,"nodeType":"520","messageId":"521","endLine":749,"endColumn":22},{"ruleId":"518","severity":1,"message":"628","line":13,"column":7,"nodeType":"520","messageId":"521","endLine":13,"endColumn":28},{"ruleId":"518","severity":1,"message":"529","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":19},{"ruleId":"518","severity":1,"message":"629","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":15},{"ruleId":"518","severity":1,"message":"630","line":4,"column":8,"nodeType":"520","messageId":"521","endLine":4,"endColumn":13},{"ruleId":"518","severity":1,"message":"629","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":15},{"ruleId":"518","severity":1,"message":"630","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":13},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"546","line":5,"column":8,"nodeType":"520","messageId":"521","endLine":5,"endColumn":13},{"ruleId":"518","severity":1,"message":"631","line":369,"column":15,"nodeType":"520","messageId":"521","endLine":369,"endColumn":21},{"ruleId":"603","severity":1,"message":"614","line":376,"column":21,"nodeType":"520","messageId":"605","endLine":376,"endColumn":25},{"ruleId":"518","severity":1,"message":"615","line":382,"column":13,"nodeType":"520","messageId":"521","endLine":382,"endColumn":17},{"ruleId":"518","severity":1,"message":"632","line":393,"column":15,"nodeType":"520","messageId":"521","endLine":393,"endColumn":21},{"ruleId":"603","severity":1,"message":"616","line":399,"column":25,"nodeType":"520","messageId":"605","endLine":399,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":400,"column":25,"nodeType":"520","messageId":"605","endLine":400,"endColumn":29},{"ruleId":"603","severity":1,"message":"616","line":405,"column":25,"nodeType":"520","messageId":"605","endLine":405,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":406,"column":25,"nodeType":"520","messageId":"605","endLine":406,"endColumn":29},{"ruleId":"603","severity":1,"message":"618","line":419,"column":17,"nodeType":"520","messageId":"605","endLine":419,"endColumn":20},{"ruleId":"603","severity":1,"message":"619","line":420,"column":17,"nodeType":"520","messageId":"605","endLine":420,"endColumn":22},{"ruleId":"518","severity":1,"message":"620","line":435,"column":13,"nodeType":"520","messageId":"521","endLine":435,"endColumn":22},{"ruleId":"518","severity":1,"message":"621","line":441,"column":13,"nodeType":"520","messageId":"521","endLine":441,"endColumn":16},{"ruleId":"603","severity":1,"message":"622","line":446,"column":13,"nodeType":"520","messageId":"605","endLine":446,"endColumn":16},{"ruleId":"518","severity":1,"message":"623","line":505,"column":9,"nodeType":"520","messageId":"521","endLine":505,"endColumn":15},{"ruleId":"518","severity":1,"message":"624","line":506,"column":9,"nodeType":"520","messageId":"521","endLine":506,"endColumn":15},{"ruleId":"518","severity":1,"message":"633","line":630,"column":13,"nodeType":"520","messageId":"521","endLine":630,"endColumn":17},{"ruleId":"518","severity":1,"message":"634","line":631,"column":13,"nodeType":"520","messageId":"521","endLine":631,"endColumn":18},{"ruleId":"518","severity":1,"message":"635","line":632,"column":13,"nodeType":"520","messageId":"521","endLine":632,"endColumn":19},{"ruleId":"518","severity":1,"message":"613","line":641,"column":17,"nodeType":"520","messageId":"521","endLine":641,"endColumn":19},{"ruleId":"518","severity":1,"message":"636","line":652,"column":21,"nodeType":"520","messageId":"521","endLine":652,"endColumn":30},{"ruleId":"518","severity":1,"message":"620","line":653,"column":21,"nodeType":"520","messageId":"521","endLine":653,"endColumn":30},{"ruleId":"518","severity":1,"message":"637","line":664,"column":21,"nodeType":"520","messageId":"521","endLine":664,"endColumn":34},{"ruleId":"518","severity":1,"message":"638","line":668,"column":21,"nodeType":"520","messageId":"521","endLine":668,"endColumn":29},{"ruleId":"518","severity":1,"message":"639","line":669,"column":21,"nodeType":"520","messageId":"521","endLine":669,"endColumn":23},{"ruleId":"518","severity":1,"message":"621","line":670,"column":21,"nodeType":"520","messageId":"521","endLine":670,"endColumn":24},{"ruleId":"518","severity":1,"message":"631","line":378,"column":15,"nodeType":"520","messageId":"521","endLine":378,"endColumn":21},{"ruleId":"603","severity":1,"message":"614","line":388,"column":21,"nodeType":"520","messageId":"605","endLine":388,"endColumn":25},{"ruleId":"518","severity":1,"message":"615","line":394,"column":13,"nodeType":"520","messageId":"521","endLine":394,"endColumn":17},{"ruleId":"518","severity":1,"message":"632","line":405,"column":15,"nodeType":"520","messageId":"521","endLine":405,"endColumn":21},{"ruleId":"603","severity":1,"message":"616","line":411,"column":25,"nodeType":"520","messageId":"605","endLine":411,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":412,"column":25,"nodeType":"520","messageId":"605","endLine":412,"endColumn":29},{"ruleId":"603","severity":1,"message":"616","line":417,"column":25,"nodeType":"520","messageId":"605","endLine":417,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":418,"column":25,"nodeType":"520","messageId":"605","endLine":418,"endColumn":29},{"ruleId":"603","severity":1,"message":"618","line":431,"column":17,"nodeType":"520","messageId":"605","endLine":431,"endColumn":20},{"ruleId":"603","severity":1,"message":"619","line":432,"column":17,"nodeType":"520","messageId":"605","endLine":432,"endColumn":22},{"ruleId":"518","severity":1,"message":"620","line":446,"column":13,"nodeType":"520","messageId":"521","endLine":446,"endColumn":22},{"ruleId":"518","severity":1,"message":"621","line":452,"column":13,"nodeType":"520","messageId":"521","endLine":452,"endColumn":16},{"ruleId":"603","severity":1,"message":"622","line":457,"column":13,"nodeType":"520","messageId":"605","endLine":457,"endColumn":16},{"ruleId":"518","severity":1,"message":"623","line":516,"column":9,"nodeType":"520","messageId":"521","endLine":516,"endColumn":15},{"ruleId":"518","severity":1,"message":"624","line":517,"column":9,"nodeType":"520","messageId":"521","endLine":517,"endColumn":15},{"ruleId":"518","severity":1,"message":"633","line":642,"column":13,"nodeType":"520","messageId":"521","endLine":642,"endColumn":17},{"ruleId":"518","severity":1,"message":"634","line":643,"column":13,"nodeType":"520","messageId":"521","endLine":643,"endColumn":18},{"ruleId":"518","severity":1,"message":"635","line":644,"column":13,"nodeType":"520","messageId":"521","endLine":644,"endColumn":19},{"ruleId":"518","severity":1,"message":"613","line":653,"column":17,"nodeType":"520","messageId":"521","endLine":653,"endColumn":19},{"ruleId":"518","severity":1,"message":"636","line":664,"column":21,"nodeType":"520","messageId":"521","endLine":664,"endColumn":30},{"ruleId":"518","severity":1,"message":"620","line":665,"column":21,"nodeType":"520","messageId":"521","endLine":665,"endColumn":30},{"ruleId":"518","severity":1,"message":"637","line":676,"column":21,"nodeType":"520","messageId":"521","endLine":676,"endColumn":34},{"ruleId":"518","severity":1,"message":"638","line":680,"column":21,"nodeType":"520","messageId":"521","endLine":680,"endColumn":29},{"ruleId":"518","severity":1,"message":"639","line":681,"column":21,"nodeType":"520","messageId":"521","endLine":681,"endColumn":23},{"ruleId":"518","severity":1,"message":"621","line":682,"column":21,"nodeType":"520","messageId":"521","endLine":682,"endColumn":24},{"ruleId":"518","severity":1,"message":"629","line":2,"column":8,"nodeType":"520","messageId":"521","endLine":2,"endColumn":15},{"ruleId":"518","severity":1,"message":"631","line":421,"column":15,"nodeType":"520","messageId":"521","endLine":421,"endColumn":21},{"ruleId":"603","severity":1,"message":"614","line":428,"column":21,"nodeType":"520","messageId":"605","endLine":428,"endColumn":25},{"ruleId":"518","severity":1,"message":"615","line":434,"column":13,"nodeType":"520","messageId":"521","endLine":434,"endColumn":17},{"ruleId":"518","severity":1,"message":"632","line":447,"column":15,"nodeType":"520","messageId":"521","endLine":447,"endColumn":21},{"ruleId":"603","severity":1,"message":"616","line":453,"column":25,"nodeType":"520","messageId":"605","endLine":453,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":454,"column":25,"nodeType":"520","messageId":"605","endLine":454,"endColumn":29},{"ruleId":"603","severity":1,"message":"616","line":459,"column":25,"nodeType":"520","messageId":"605","endLine":459,"endColumn":38},{"ruleId":"603","severity":1,"message":"617","line":460,"column":25,"nodeType":"520","messageId":"605","endLine":460,"endColumn":29},{"ruleId":"603","severity":1,"message":"618","line":473,"column":17,"nodeType":"520","messageId":"605","endLine":473,"endColumn":20},{"ruleId":"603","severity":1,"message":"619","line":474,"column":17,"nodeType":"520","messageId":"605","endLine":474,"endColumn":22},{"ruleId":"518","severity":1,"message":"620","line":488,"column":13,"nodeType":"520","messageId":"521","endLine":488,"endColumn":22},{"ruleId":"518","severity":1,"message":"621","line":494,"column":13,"nodeType":"520","messageId":"521","endLine":494,"endColumn":16},{"ruleId":"603","severity":1,"message":"622","line":499,"column":13,"nodeType":"520","messageId":"605","endLine":499,"endColumn":16},{"ruleId":"518","severity":1,"message":"623","line":558,"column":9,"nodeType":"520","messageId":"521","endLine":558,"endColumn":15},{"ruleId":"518","severity":1,"message":"624","line":559,"column":9,"nodeType":"520","messageId":"521","endLine":559,"endColumn":15},{"ruleId":"518","severity":1,"message":"625","line":670,"column":43,"nodeType":"520","messageId":"521","endLine":670,"endColumn":55},{"ruleId":"518","severity":1,"message":"640","line":670,"column":57,"nodeType":"520","messageId":"521","endLine":670,"endColumn":77},{"ruleId":"518","severity":1,"message":"641","line":670,"column":79,"nodeType":"520","messageId":"521","endLine":670,"endColumn":87},{"ruleId":"518","severity":1,"message":"578","line":670,"column":89,"nodeType":"520","messageId":"521","endLine":670,"endColumn":98},{"ruleId":"518","severity":1,"message":"533","line":670,"column":100,"nodeType":"520","messageId":"521","endLine":670,"endColumn":108},{"ruleId":"518","severity":1,"message":"534","line":670,"column":110,"nodeType":"520","messageId":"521","endLine":670,"endColumn":125},{"ruleId":"518","severity":1,"message":"579","line":670,"column":127,"nodeType":"520","messageId":"521","endLine":670,"endColumn":135},{"ruleId":"518","severity":1,"message":"559","line":670,"column":137,"nodeType":"520","messageId":"521","endLine":670,"endColumn":144},{"ruleId":"518","severity":1,"message":"626","line":671,"column":13,"nodeType":"520","messageId":"521","endLine":671,"endColumn":28},{"ruleId":"518","severity":1,"message":"580","line":671,"column":44,"nodeType":"520","messageId":"521","endLine":671,"endColumn":56},{"ruleId":"518","severity":1,"message":"627","line":671,"column":70,"nodeType":"520","messageId":"521","endLine":671,"endColumn":79},{"ruleId":"518","severity":1,"message":"642","line":671,"column":131,"nodeType":"520","messageId":"521","endLine":671,"endColumn":136},{"ruleId":"518","severity":1,"message":"613","line":696,"column":17,"nodeType":"520","messageId":"521","endLine":696,"endColumn":19},{"ruleId":"518","severity":1,"message":"636","line":707,"column":21,"nodeType":"520","messageId":"521","endLine":707,"endColumn":30},{"ruleId":"518","severity":1,"message":"620","line":708,"column":21,"nodeType":"520","messageId":"521","endLine":708,"endColumn":30},{"ruleId":"518","severity":1,"message":"637","line":719,"column":21,"nodeType":"520","messageId":"521","endLine":719,"endColumn":34},{"ruleId":"518","severity":1,"message":"638","line":723,"column":21,"nodeType":"520","messageId":"521","endLine":723,"endColumn":29},{"ruleId":"518","severity":1,"message":"639","line":724,"column":21,"nodeType":"520","messageId":"521","endLine":724,"endColumn":23},{"ruleId":"518","severity":1,"message":"621","line":725,"column":21,"nodeType":"520","messageId":"521","endLine":725,"endColumn":24},{"ruleId":"518","severity":1,"message":"560","line":6,"column":24,"nodeType":"520","messageId":"521","endLine":6,"endColumn":28},{"ruleId":"518","severity":1,"message":"547","line":6,"column":30,"nodeType":"520","messageId":"521","endLine":6,"endColumn":35},{"ruleId":"518","severity":1,"message":"526","line":12,"column":7,"nodeType":"520","messageId":"521","endLine":12,"endColumn":16},{"ruleId":"518","severity":1,"message":"528","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":25},{"ruleId":"518","severity":1,"message":"529","line":11,"column":8,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"524","line":14,"column":13,"nodeType":"520","messageId":"521","endLine":14,"endColumn":19},{"ruleId":"518","severity":1,"message":"530","line":15,"column":10,"nodeType":"520","messageId":"521","endLine":15,"endColumn":15},{"ruleId":"518","severity":1,"message":"531","line":16,"column":8,"nodeType":"520","messageId":"521","endLine":16,"endColumn":25},{"ruleId":"518","severity":1,"message":"532","line":235,"column":13,"nodeType":"520","messageId":"521","endLine":235,"endColumn":17},{"ruleId":"518","severity":1,"message":"533","line":236,"column":13,"nodeType":"520","messageId":"521","endLine":236,"endColumn":21},{"ruleId":"518","severity":1,"message":"534","line":238,"column":13,"nodeType":"520","messageId":"521","endLine":238,"endColumn":28},{"ruleId":"518","severity":1,"message":"535","line":239,"column":13,"nodeType":"520","messageId":"521","endLine":239,"endColumn":28},{"ruleId":"518","severity":1,"message":"536","line":240,"column":13,"nodeType":"520","messageId":"521","endLine":240,"endColumn":34},{"ruleId":"518","severity":1,"message":"537","line":241,"column":13,"nodeType":"520","messageId":"521","endLine":241,"endColumn":33},{"ruleId":"518","severity":1,"message":"538","line":246,"column":15,"nodeType":"520","messageId":"521","endLine":246,"endColumn":29},"no-native-reassign",["643"],"no-negated-in-lhs",["644"],"no-unused-vars","'Homepage' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'withRouter' is defined but never used.","'moment' is defined but never used.","'axios' is defined but never used.","'initState' is assigned a value but never used.","'orderTarget' is assigned a value but never used.","'CustomizedButtons' is defined but never used.","'ServiceList' is defined but never used.","'store' is defined but never used.","'ReactNotification' is defined but never used.","'name' is assigned a value but never used.","'isDelete' is assigned a value but never used.","'isDeleteSuccess' is assigned a value but never used.","'isDeleteService' is assigned a value but never used.","'isCancelChangeService' is assigned a value but never used.","'isCancelToAddService' is assigned a value but never used.","'listServiceNew' is assigned a value but never used.","'newDocument' is assigned a value but never used.","'flag' is assigned a value but never used.","'isVerified' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CustomizedTables' is defined but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'Input' is defined but never used.","'FormControlLabel' is defined but never used.","'value2' is assigned a value but never used.","'isFilled' is assigned a value but never used.","'sequence' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'userTarget' is assigned a value but never used.","'role_name' is assigned a value but never used.","'isError' is assigned a value but never used.","'Card' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'isErrorMsClosed' is assigned a value but never used.","'isErrorPiClosed' is assigned a value but never used.","'statusMs' is assigned a value but never used.","'statusPi' is assigned a value but never used.","'ordersVerified' is assigned a value but never used.","'isEdit' is assigned a value but never used.","'isExtend' is assigned a value but never used.","'engineers' is assigned a value but never used.","'actualStart' is assigned a value but never used.","'actualEnd' is assigned a value but never used.","'picEngineerMs' is assigned a value but never used.","'isAdded' is assigned a value but never used.","'timeRemaining' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'isFailed' is assigned a value but never used.","'messageError' is assigned a value but never used.","'servicesEngineer' is assigned a value but never used.","'servicesEngineerName' is assigned a value but never used.","'isReport' is assigned a value but never used.","'isReportExtend' is assigned a value but never used.","'orderFiltered' is assigned a value but never used.","'isFiltered' is assigned a value but never used.","'listService' is assigned a value but never used.","'services' is assigned a value but never used.","'piBelumSelesaiMsBelumSelesai' is assigned a value but never used.","'tepatWaktuTelat' is assigned a value but never used.","'piMasuk' is assigned a value but never used.","'piSelesai' is assigned a value but never used.","'listNamaBulanPi' is assigned a value but never used.","'lisNamaBulanMs' is assigned a value but never used.","'msMasuk' is assigned a value but never used.","'msSelesai' is assigned a value but never used.","'startMonth2' is assigned a value but never used.","'endMonth2' is assigned a value but never used.","'startMonth3' is assigned a value but never used.","'endMonth3' is assigned a value but never used.","'startMonth4' is assigned a value but never used.","'endMonth4' is assigned a value but never used.","no-redeclare","'score' is already defined.","redeclared","'count' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'res' is assigned a value but never used.","'pi' is assigned a value but never used.","'mn' is assigned a value but never used.","'bast' is already defined.","'endP' is assigned a value but never used.","'selectedOrder' is already defined.","'tipe' is already defined.","'end' is already defined.","'start' is already defined.","'deskripsi' is assigned a value but never used.","'sph' is assigned a value but never used.","'doc' is already defined.","'adderX' is assigned a value but never used.","'adderY' is assigned a value but never used.","'isMrUploaded' is assigned a value but never used.","'listMaintenance' is assigned a value but never used.","'reportNum' is assigned a value but never used.","'ADD_TASK_API_BASE_URL' is assigned a value but never used.","'classes' is defined but never used.","'Order' is defined but never used.","'report' is assigned a value but never used.","'mnList' is assigned a value but never used.","'tipe' is assigned a value but never used.","'nomor' is assigned a value but never used.","'status' is assigned a value but never used.","'namaOrder' is assigned a value but never used.","'selectedOrder' is assigned a value but never used.","'picKedua' is assigned a value but never used.","'po' is assigned a value but never used.","'isInstallationReport' is assigned a value but never used.","'isUpload' is assigned a value but never used.","'notes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]