[{"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\index.js":"1","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\App.js":"3","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js":"4","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js":"5","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js":"6","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js":"7","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js":"8","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js":"9","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js":"10","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js":"11","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Login\\index.js":"12","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\Homepage\\index.js":"13","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js":"14"},{"size":544,"mtime":1619591270619,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":5414,"mtime":1622164840972,"results":"18","hashOfConfig":"16"},{"size":225,"mtime":1620187315518,"results":"19","hashOfConfig":"16"},{"size":24419,"mtime":1622413313872,"results":"20","hashOfConfig":"16"},{"size":143,"mtime":1618932282107,"results":"21","hashOfConfig":"16"},{"size":802,"mtime":1619176967606,"results":"22","hashOfConfig":"16"},{"size":2994,"mtime":1619024890744,"results":"23","hashOfConfig":"16"},{"size":478,"mtime":1619532665996,"results":"24","hashOfConfig":"16"},{"size":259,"mtime":1618994525865,"results":"25","hashOfConfig":"16"},{"size":31944,"mtime":1622413266997,"results":"26","hashOfConfig":"16"},{"size":847,"mtime":1619584073795,"results":"27","hashOfConfig":"16"},{"size":4619,"mtime":1619585963576,"results":"28","hashOfConfig":"16"},{"size":27699,"mtime":1622414365748,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1qicre3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\index.js",[],["62","63"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\App.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Layout\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PenugasanEngineer\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\APIConfig.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Button\\index.js",[],["64","65"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Table\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Modal\\index.js",[],["66","67"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Backdrop\\index.js",[],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\PeriodeKontrak\\index.js",["68","69","70","71"],"import React, { Component } from \"react\";\r\nimport APIConfig from \"../../APIConfig\";\r\nimport CustomizedTables from \"../../components/Table\";\r\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport classes from \"./styles.module.css\";\r\nimport moment from \"moment\";\r\n\r\nclass PeriodeKontrak extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ordersVerified: [],\r\n            isLoading: false,\r\n            isEdit: false,\r\n            isExtend: false,\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            engineers: [],\r\n            picEngineerMs: null,\r\n            servicesEngineer: [],\r\n            servicesEngineerName: [],\r\n            isReport: false,\r\n            isReportExtend: false,\r\n            orderFiltered: [],\r\n            isFiltered: false,\r\n            currentDateTime: new Date(),\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            totalServices: 0,\r\n            listService: [],\r\n            services: [],\r\n            isAdded: false,\r\n            newNoPO: null,\r\n            timeRemaining: null,\r\n            isFailed: false,\r\n            isError: false,\r\n            isSuccess: false,\r\n            listPi: [],\r\n            listMs: [],\r\n            messageError: null\r\n        };\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleChangeField = this.handleChangeField.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleReport = this.handleReport.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleAddServices = this.handleAddServices.bind(this);\r\n        this.handleChangeListService = this.handleChangeListService.bind(this);\r\n        this.handleCloseNotif = this.handleCloseNotif.bind(this);\r\n        this.handleValidation = this.handleValidation.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n    \r\n    // Mengambil dan mengupdate data yang masuk\r\n    async loadData() {\r\n        try {\r\n            const orders = await APIConfig.get(\"/ordersVerified/ms\");\r\n            const engineers = await APIConfig.get(\"/engineers\");\r\n            const listPi = await APIConfig.get(\"/orders/pi\");\r\n            const listMs = await APIConfig.get(\"/orders/ms\");\r\n            this.setState({ ordersVerified: orders.data, engineers: engineers.data, listPi: listPi.data, listMs: listMs.data});\r\n        } catch (error) {\r\n            this.setState({ isError: true });\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Mengirim data yang akan disimpan ke backend\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        let response;\r\n        let order;\r\n        let pi;\r\n        let ms;\r\n        let newOrder;\r\n        let services;\r\n\r\n        try {\r\n            order = this.state.orderTarget;\r\n            pi = order.projectInstallation === false ? null : this.getPi(order.idOrder).idOrderPi;\r\n            ms = this.getMs(order.idOrder);\r\n            \r\n            // Apabila ingin perpanjang kontrak, maka mengirim data order\r\n            if(this.state.isExtend){\r\n                const dataOrder = {\r\n                    idOrder: order.idOrder,\r\n                    orderName: order.orderName,\r\n                    clientName: order.clientName,\r\n                    clientOrg: order.clientOrg,\r\n                    clientDiv: order.clientDiv,\r\n                    clientPIC: order.clientPIC,\r\n                    clientEmail: order.clientEmail,\r\n                    clientPhone: order.clientPhone,\r\n                    dateOrder: order.dateOrder,\r\n                    noPO: this.state.newNoPO,\r\n                    noSPH: order.noSPH,\r\n                    description: order.description,\r\n                    verified: order.verified,\r\n                    projectInstallation: order.projectInstallation,\r\n                    managedService: order.managedService,\r\n                    idOrderPi: pi,\r\n                    idOrderMs: ms.idOrderMs\r\n                }\r\n                response = await APIConfig.put(`/order/${order.idOrder}/perpanjangKontrak`, dataOrder);\r\n                newOrder = response.data.result;\r\n                this.loadData();\r\n            }\r\n            \r\n            const dataMs = {\r\n                idOrderMs: this.state.isExtend ? null : ms.idOrderMs,\r\n                idUserPic: this.state.picEngineerMs,\r\n                actualStart: this.convertDateToString(this.state.actualStart),\r\n                actualEnd: this.convertDateToString(this.state.actualEnd),\r\n                activated: ms.activated,\r\n                dateClosedMS: null\r\n            }\r\n            response = await APIConfig.put(`/order/${this.state.isExtend ? newOrder.idOrder : order.idOrder}/ms/updateKontrak`, dataMs);\r\n            const newMsUpdated = response.data.result;\r\n            \r\n            // Apabila ingin perpanjang kontrak, maka mengirim data service satu per satu\r\n            if(this.state.isExtend){\r\n                let listServiceName = this.state.servicesEngineerName;\r\n                let listService = this.state.servicesEngineer;\r\n                services = new Array(listService.length);\r\n                for(let i=0; i<listService.length; i++){\r\n                    const dataService = {\r\n                    name: listServiceName[i],\r\n                    idUser: listService[i]\r\n                    }\r\n                    response = await APIConfig.post(`/order/${newOrder.idOrder}/ms/${newMsUpdated.idOrderMs}/createService`, dataService);\r\n                    const service = response.data.result;\r\n                    services[i] = service;\r\n                    this.loadData();\r\n                }\r\n            }\r\n            this.loadData();\r\n        } catch (error) {\r\n            console.log(error);\r\n            return this.setState({isFailed: true, messageError: this.state.isExtend? \"Perpanjangan periode kontrak gagal disimpan.\" : \"Periode kontrak gagal disimpan.\"});\r\n        }\r\n\r\n        if(this.state.isExtend){\r\n            this.setState({orderTarget: newOrder, services: services})\r\n        }\r\n        \r\n        this.setState({isFailed: false, isValid: true, isSuccess: true, isExtend: false, isEdit: false, timeRemaining: this.getTimeRemaining(this.state.actualStart, this.state.actualEnd)});\r\n    }\r\n\r\n    // validasi form\r\n    // jika valid, maka memanggil handleSubmit\r\n    // jika tidak valid, maka memberikan notifikasi\r\n    handleValidation(event){\r\n        event.preventDefault();\r\n\r\n        if(this.state.isExtend){\r\n            let listServiceName = this.state.servicesEngineerName;\r\n            let listService = this.state.servicesEngineer;\r\n            for(let i=0; i<listService.length; i++){\r\n                if(listServiceName[i] === null || listServiceName[i] === \"\"){\r\n                    return this.setState({isFailed: true, messageError: \"Semua service wajib diisi\"});\r\n                }\r\n                if(listService[i] === null || listService[i] === \"\"){\r\n                    return this.setState({isFailed: true, messageError: \"Semua Engineer Service wajib diisi\"});\r\n                }\r\n            }\r\n\r\n            if((this.state.picEngineerMs === null || this.state.picEngineerMs === \"\")){\r\n                return this.setState({isFailed: true, messageError: \"PIC Engineer Managed Service wajib diisi\"});\r\n            }\r\n\r\n            if(this.state.newNoPO === null || this.state.newNoPO === \"\"){\r\n                return this.setState({isFailed: true, messageError: \"Nomor PO baru wajib diisi\"});\r\n            }\r\n        }\r\n\r\n        if(new Date(this.state.actualEnd) < new Date(this.state.actualStart)){\r\n            return this.setState({isFailed: true, messageError: \"Periode mulai harus lebih awal dari periode akhir\"});\r\n        }else{\r\n            this.setState({isFailed: false, messageError: null});\r\n            this.handleSubmit(event);\r\n        }\r\n    }\r\n\r\n    // Menampilkan report setelah berhasil menyimpan data\r\n    handleReport(event){\r\n        event.preventDefault();\r\n\r\n        if(this.state.isExtend){\r\n            this.setState({isReportExtend: true, isAdded: false});\r\n        }else{\r\n            this.setState({isReport: true});\r\n        }\r\n\r\n        this.setState({isSuccess: false, isFailed: false, isValid: true});\r\n    }\r\n\r\n    // Mengambil data dengan format \"tanggal bulan(dalam huruf abjad) tahun\"\r\n    getDate(value){\r\n        let date = new Date(value);\r\n        const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n                            \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\r\n\r\n        return date.getDate()+\" \"+monthNames[date.getMonth()]+\" \"+date.getFullYear();\r\n    }\r\n\r\n    // Kalkulasi waktu tersisa terhitung hari ini sampai periode berakhir\r\n    getTimeRemaining(actualStart, actualEnd){\r\n        const startDate = new Date(actualStart);\r\n        const endDate = new Date(actualEnd);\r\n        let currentDate = this.state.currentDateTime;\r\n\r\n        if ( startDate > currentDate) {\r\n            return \"Belum mulai\";\r\n        } else if ( currentDate > endDate ){\r\n            return \"Habis\";\r\n        }\r\n        \r\n        let startYear = currentDate.getFullYear();\r\n        let startMonth = currentDate.getMonth();\r\n        let startDay = currentDate.getDate();\r\n        \r\n        let endYear = endDate.getFullYear();\r\n        let endMonth = endDate.getMonth();\r\n        let endDay = endDate.getDate();\r\n        \r\n        // Jumlah tanggal februari berdasarkan tahun kabisat\r\n        let february = (((endYear % 4 === 0) && (endYear % 100 !== 0)) || (endYear % 400 === 0)) ? 29 : 28;\r\n        let daysOfMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        \r\n        let startDateNotPassedInEndYear = ((endMonth < startMonth) || (endMonth === startMonth )) && (endDay < startDay);\r\n        let years = endYear - startYear - (startDateNotPassedInEndYear ? 1 : 0);\r\n        \r\n        let months = (12 + endMonth - startMonth - (endDay < startDay ? 1 : 0)) % 12;\r\n        \r\n        // (12 + ...) % 12 untuk memastikan index antara 0 sampai 11 sesuai dengan jumlah bulan\r\n        let days = startDay <= endDay ? endDay - startDay : daysOfMonth[(12 + endMonth - 1) % 12] - startDay + endDay;\r\n\r\n        let timeRemaining = \"\";\r\n        if(years === 0){\r\n            if(months === 0){\r\n                timeRemaining = days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = months+\" bulan\";\r\n                }\r\n                timeRemaining = months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }else{\r\n            if(months === 0){\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+days+\" hari\";\r\n            }else{\r\n                if(days === 0){\r\n                    timeRemaining = years+\" tahun \"+months+\" bulan\";\r\n                }\r\n                timeRemaining = years+\" tahun \"+months+\" bulan \"+days+\" hari\";\r\n            }\r\n        }\r\n\r\n        return timeRemaining;\r\n    }\r\n\r\n    // Mengubah data yang ditargetkan sesuai dengan isi form\r\n    handleChangeField(event) {\r\n        const { name, value } = event.target;\r\n        const servicesEngineerNew = this.state.servicesEngineer;\r\n        const servicesEngineerNameNew = this.state.servicesEngineerName;\r\n\r\n        if( name.substring(0,16) === \"servicesEngineer\"){\r\n            let index = Number(name.substring(16));\r\n            servicesEngineerNew[index] = value;\r\n            this.setState({ servicesEngineer: servicesEngineerNew});\r\n        }else if( name.substring(0,11) === \"serviceName\" ){\r\n            let index = Number(name.substring(11));\r\n            servicesEngineerNameNew[index] = value;\r\n            this.setState({ servicesEngineerName: servicesEngineerNameNew});\r\n        }else{\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    // Menargetkan order yang dipilih untuk diubah periode kontrak nya atau diperpanjang\r\n    handleEdit(order, typeEdit) {\r\n        let ms = this.getMs(order.idOrder);\r\n        let actualStart = moment(new Date(ms.actualStart)).format(\"YYYY-MM-DD\");\r\n        let actualEnd = moment(new Date(ms.actualEnd)).format(\"YYYY-MM-DD\");\r\n\r\n        if(typeEdit === \"perbarui\"){\r\n            this.setState({ isEdit: true , formValid: true});\r\n        }else{\r\n            this.setState({ isExtend: true });\r\n        }\r\n\r\n        this.setState({  \r\n            orderTarget: order,\r\n            actualStart: actualStart,\r\n            actualEnd: actualEnd,\r\n            totalServices: ms.listService.length,\r\n            timeRemaining: this.getTimeRemaining(ms.actualStart, ms.actualEnd)  \r\n        });\r\n        \r\n        if(ms.idUserPic !== null){\r\n            let servicesEngineer = ms.listService.map(service => service.idUser.id);\r\n            let servicesEngineerName = ms.listService.map(service => service.name);\r\n            this.setState({\r\n                picEngineerMs: ms.idUserPic.id, \r\n                servicesEngineer: servicesEngineer,\r\n                servicesEngineerName: servicesEngineerName,\r\n                services: ms.listService\r\n            });\r\n        }\r\n    }\r\n\r\n    // Menutup semua modal\r\n    handleCancel(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            isEdit: false, \r\n            isReport: false, \r\n            isExtend: false, \r\n            isReportExtend: false, \r\n            totalServices: 0,\r\n            isAdded: false,\r\n            timeRemaining: null,\r\n            serviceEngineer: [],\r\n            listService: [],\r\n            services: [],\r\n            orderTarget: null,\r\n            orderTargetUpdated: null,\r\n            picEngineerMs: null,\r\n            newNoPO: null,\r\n            actualStart: null,\r\n            actualEnd: null,\r\n            isFailed: false,\r\n            isSuccess: false,\r\n            isError: false,\r\n            messageError: null\r\n        });\r\n        this.loadData();\r\n    }\r\n\r\n    // Mengambil order jenis managed services yang dipilih\r\n    getMs(idOrder){\r\n        let ms = this.state.listMs.filter(ms => ms.idOrder.idOrder === idOrder);\r\n\r\n        if (ms.length !== 0) {\r\n            return ms[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Mengambil order jenis project installation yang dipilih\r\n    getPi(idOrder){\r\n        let pi = this.state.listPi.filter(pi => pi.idOrder.idOrder === idOrder );\r\n\r\n        if (pi.length !== 0) {\r\n            console.log(pi[0]);\r\n            return pi[0];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Mengambil pic engineer dari order jenis project installation yang dipilih\r\n    getPICMS(idOrder){\r\n        let ms = this.getMs(idOrder);\r\n        \r\n        if(ms !== null){\r\n            let user = ms.idUserPic;\r\n            if(user !== null){\r\n                return user;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Mengambil nama lengkap dari engineer pada service yang dipilih\r\n    getPICService(service){\r\n        if(service.idUser !== null){\r\n            console.log(service.idUser.fullname);\r\n            return service.idUser.fullname;\r\n        }\r\n        return <p style={{color: \"red\"}}>Belum ditugaskan</p>;\r\n    }\r\n\r\n    // Mengubah tanggal sesuai format database\r\n    convertDateToString(date){\r\n        return date+\"T17:00:00.000+00:00\";\r\n    }\r\n\r\n    // Mengambil jumlah hari tersisa dengan format \"jumlah tahun jumlah bulan jumlah hari\"\r\n    getDaysMonthsYears(date){\r\n        const dateSplit = date.split(\" \");\r\n\r\n        if(date.includes(\"tahun\")){\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], dateSplit[4]];\r\n                return [0, dateSplit[2], dateSplit[4]];\r\n            }\r\n            if(date.includes(\"hari\")) return [dateSplit[0], 0, dateSplit[4]];\r\n            return [0, 0, dateSplit[4]];\r\n        }else{\r\n            if(date.includes(\"bulan\")){\r\n                if(date.includes(\"hari\")) return [dateSplit[0], dateSplit[2], 0];\r\n                return [0, dateSplit[2], 0];\r\n            }\r\n            return [dateSplit[0], 0, 0];\r\n        }\r\n    }\r\n\r\n    // Menyaring list order sesuai dengan data yang dimasukkan pada form search\r\n    handleFilter(event){\r\n        let newOrderList = this.state.ordersVerified;\r\n        const { value } = event.target;\r\n\r\n        if( value !== \"\" ){\r\n            newOrderList = newOrderList.filter(order => {\r\n                return (order.orderName.toLowerCase().includes(value.toLowerCase()) ||\r\n                order.noPO.toLowerCase().includes(value.toLowerCase()))\r\n            });\r\n            this.setState({ isFiltered : true });\r\n        }else{\r\n            this.setState({ isFiltered : false });\r\n        }\r\n        this.setState({ orderFiltered : newOrderList });\r\n    }\r\n\r\n    // Menambah slot untuk service baru\r\n    handleAddServices(){\r\n        this.setState({isAdded: true});\r\n        let initialTotal = this.state.listService.length;\r\n        const totalServicesNew = initialTotal+1;\r\n\r\n        this.setState({ totalServices: totalServicesNew });\r\n\r\n        let servicesEngineer = this.state.servicesEngineer.concat(null);\r\n        let servicesEngineerName = this.state.servicesEngineerName.concat(null);\r\n\r\n        this.setState({serviceEngineer: servicesEngineer, servicesEngineerName: servicesEngineerName});\r\n        \r\n        let services = [...this.state.services, null];\r\n        this.setState({services: services});\r\n        this.loadData();\r\n    }\r\n\r\n    // Menambah row pada tabel service apabila ingin menambah service\r\n    handleChangeListService(){\r\n        this.handleAddServices();\r\n\r\n        this.setState({listService: this.state.services.map((service, index) => \r\n            [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} \r\n            value={this.state.servicesEngineerName[index] === null ? service === null ? null : \r\n            service.name : this.state.servicesEngineerName[index]} \r\n            onChange={this.handleChangeField} placeholder=\"masukkan service\"/>,\r\n            <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n            value={this.state.servicesEngineer[index] === null ? \"\" : this.state.servicesEngineer[index]}\r\n            onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n            {this.state.engineers.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n            </Form.Control>])});\r\n    }\r\n\r\n    // Menutup notifikasi gagal\r\n    handleCloseNotif(){\r\n        this.setState({ isFailed: false, messageError: null});\r\n    }\r\n\r\n    render() {\r\n        const { ordersVerified, isEdit, isExtend, orderTarget, engineers, actualStart, actualEnd, picEngineerMs, isAdded, timeRemaining, isSuccess, isFailed, isError, messageError,\r\n            servicesEngineer, servicesEngineerName, isReport, isReportExtend, orderFiltered, isFiltered, listService, services } = this.state;\r\n        \r\n        // Judul untuk setiap kolom di tabel daftar order\r\n        const tableHeaders = ['No.', 'Nomor PO', 'Nama Order', 'Periode Mulai', 'Periode Berakhir', 'Waktu Tersisa', 'Aksi'];                  \r\n        \r\n        // Isi tabel daftar order yang disesuaikan dengan yang dicari\r\n        const tableRows = isFiltered ? orderFiltered.map((order) =>\r\n                        [order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(this.getMs(order.idOrder).actualStart), this.getDate(this.getMs(order.idOrder).actualEnd),\r\n                        this.getTimeRemaining(this.getMs(order.idOrder).actualStart, this.getMs(order.idOrder).actualEnd),\r\n                        <div className=\"justify-content-between\"><Button className={classes.button1} onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</Button>\r\n                        <Button className={classes.button2} onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</Button></div>])\r\n                        : ordersVerified.map((order) =>\r\n                        [order.noPO === null ? \"-\" : order.noPO, order.orderName, \r\n                        this.getDate(this.getMs(order.idOrder).actualStart), this.getDate(this.getMs(order.idOrder).actualEnd),\r\n                        this.getTimeRemaining(this.getMs(order.idOrder).actualStart, this.getMs(order.idOrder).actualEnd),\r\n                        <div className=\"justify-content-between\"><Button className={classes.button1} onClick={() => this.handleEdit(order, \"perbarui\")}>perbarui</Button>\r\n                        <Button className={classes.button2} onClick={() => this.handleEdit(order, \"perpanjang\")}>perpanjang</Button></div>])\r\n\r\n        // Judul untuk setiap kolom di tabel service\r\n        const tableServiceHeaders = ['No.', 'Nama Service', 'Engineer'];\r\n        let tableServiceRows;\r\n\r\n        // Isi tabel service sesuai dengan order yang dipilih\r\n        if(orderTarget !== null){\r\n            tableServiceRows = isExtend ?  \r\n                            services.map((service, index) => \r\n                            [<Form.Control type=\"text\" size=\"sm\" name={\"serviceName\"+index} \r\n                            value={this.state.servicesEngineerName[index] === null ? service === null ? null : \r\n                            service.name : this.state.servicesEngineerName[index]} \r\n                            onChange={this.handleChangeField} placeholder=\"masukkan service\"/>,\r\n                            <Form.Control as=\"select\" size=\"sm\" key={index} name={\"servicesEngineer\"+index} \r\n                            value={this.state.servicesEngineer[index] === null ? \"\" : this.state.servicesEngineer[index]}\r\n                            onChange={this.handleChangeField}><option value=\"\">Belum ditugaskan</option>\r\n                            {this.state.engineers.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                            </Form.Control>])\r\n                            : services.map((service) =>[service.name, this.getPICService(service)]);\r\n        }\r\n\r\n        const titleExtend = isReportExtend? \"Perpanjangan Periode Kontrak\" : \"Form Perpanjangan Periode Kontrak\";\r\n        const title = isReport? \"Rincian Periode Kontrak\" : \"Form Perbarui Periode Kontrak\";\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                \r\n                {/* Menampilkan daftar order */}\r\n                <div><h1 className=\"text-center\">Daftar Order</h1></div>\r\n                <div className=\"d-flex justify-content-end\" style={{padding: 5}}><Form.Control type=\"text\" size=\"sm\" placeholder=\"Cari...\" onChange={this.handleFilter} className={classes.search}/></div>\r\n                <div><CustomizedTables headers={tableHeaders} rows={tableRows}/></div>\r\n                \r\n                {/* Menampilkan modal berisi form mengubah periode kontrak atau perpanjang periode kontrak */}\r\n                <Modal\r\n                    show={isEdit || isReport || isExtend || isReportExtend}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                    <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            {isEdit? title : titleExtend}\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                            { isFailed ? \r\n                               <Card body className={classes.card}>\r\n                                   <div className=\"d-flex justify-content-between\">\r\n                                        {messageError}\r\n                                        <Button size=\"sm\" className=\"bg-transparent border border-0 border-transparent\" onClick={this.handleCloseNotif}>x</Button>\r\n                                    </div>\r\n                                </Card>\r\n                            : <></> }\r\n                            <p>\r\n                                { orderTarget !== null ?\r\n                                <Form>\r\n                                    <Table borderless responsive=\"xl\" size=\"sm\">\r\n                                        <tr>\r\n                                            <td>Nomor PO</td>\r\n                                            <td>: {orderTarget.noPO === null ? \"-\" : orderTarget.noPO}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Nama Order</td>\r\n                                            <td>: {orderTarget.orderName}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Perusahaan</td>\r\n                                            <td>: {orderTarget.clientOrg}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td style={{fontWeight: 'bold'}}>Managed Service</td>\r\n                                            {isExtend ? <td className=\"d-flex justify-content-end\">\r\n                                            <Button className={classes.button1} onClick={this.handleChangeListService}>\r\n                                                + Tambah Services\r\n                                                </Button></td>\r\n                                                : <></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isExtend ? \r\n                                            <td><p className=\"d-flex\">Services<p style={{color: \"red\"}}>*</p></p></td> \r\n                                            : <td>Services</td>}\r\n                                            <td>\r\n                                                <><CustomizedTables headers={tableServiceHeaders} rows={tableServiceRows}></CustomizedTables></>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isExtend ?\r\n                                            <><td><p className=\"d-flex\">PIC Engineer<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control as=\"select\" size=\"sm\" name=\"picEngineerMs\" value={picEngineerMs === null ? \"\" : picEngineerMs} onChange={this.handleChangeField}>\r\n                                                    <option value=\"\">Belum ditugaskan</option>\r\n                                                    {engineers.map(user =><option value={user.id}>{user.fullname}</option>)}\r\n                                                </Form.Control></td></>\r\n                                            : <><td>PIC Engineer</td>\r\n                                            <td>: {this.getPICMS(orderTarget.idOrder) === null? \"Belum ditugaskan\" : this.getPICMS(orderTarget.idOrder).fullname}</td></>}\r\n                                        </tr>\r\n                                        <tr>\r\n                                            { isExtend ? <>\r\n                                            <td><p className=\"d-flex\">Nomor PO Baru<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"text\" size=\"sm\" name=\"newNoPO\" onChange={this.handleChangeField} placeholder=\"masukkan nomor PO baru\"/></td></> : <></> } \r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isReport || isReportExtend ?\r\n                                            <><td>Periode Mulai</td> \r\n                                            <td>: {this.getDate(actualStart)}</td></> :\r\n                                            <><td><p className=\"d-flex\">Periode Mulai<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualStart\" value={actualStart} onChange={this.handleChangeField}/></td></> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            {isReport || isReportExtend  ? \r\n                                            <><td>Periode Berakhir</td>\r\n                                            <td>: {this.getDate(actualEnd)}</td></> :\r\n                                            <><td><p className=\"d-flex\">Periode Berakhir<p style={{color: \"red\"}}>*</p></p></td>\r\n                                            <td><Form.Control type=\"date\" size=\"sm\" name=\"actualEnd\" value={actualEnd} onChange={this.handleChangeField}/></td></> }\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Waktu Tersisa</td> \r\n                                            <td>: {timeRemaining}</td> \r\n                                        </tr>\r\n                                        {isReport || isReportExtend ? <></> :\r\n                                        <tr>\r\n                                            <td style={{color: \"red\"}}>*Wajib diisi</td>\r\n                                            <td className=\"d-flex justify-content-end\">\r\n                                                <Button className={classes.button1} onClick={this.handleValidation}>\r\n                                                    simpan\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr> }\r\n                                    </Table>\r\n                                </Form> : <></>}\r\n                            </p>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                {/* Menampilkan modal berisi notifikasi ketika berhasil menyimpan data atau error */}\r\n                <Modal\r\n                    show={isSuccess || isError}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                >\r\n                     <Modal.Header closeButton onClick={this.handleCancel}>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            Notification\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        {isSuccess?\r\n                        <>\r\n                            <div className=\"d-flex justify-content-center\">{isEdit? \"Periode Kontrak\" : \"Perpanjangan Periode Kontrak\"} berhasil disimpan.</div><br></br>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button variant=\"primary\" className={classes.button1} onClick={this.handleReport}>\r\n                                    Kembali\r\n                                </Button>\r\n                            </div>\r\n                        </> :\r\n                        <>\r\n                        <div className=\"d-flex justify-content-center\">Oops terjadi masalah pada server</div><br></br>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"primary\" className={classes.button1} onClick={this.handleCancel}>\r\n                                Kembali\r\n                            </Button>\r\n                        </div>\r\n                        </>}\r\n                    </Modal.Body>\r\n                </Modal>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PeriodeKontrak;","C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\components\\Login\\index.js",["72"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\Homepage\\index.js",["73"],"C:\\Users\\Hanna Jannatunna'iim\\Documents\\SI\\Semester 6\\Proyek Pengembangan Sistem Informasi\\04 Implementasi\\code\\propen-a01-sipel\\sipel-frontend\\src\\containers\\LaporanInstalasiMaintenance\\index.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"74","replacedBy":"80"},{"ruleId":"76","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":476,"column":114,"nodeType":"84","messageId":"85","endLine":476,"endColumn":121},{"ruleId":"82","severity":1,"message":"86","line":477,"column":13,"nodeType":"84","messageId":"85","endLine":477,"endColumn":29},{"ruleId":"82","severity":1,"message":"87","line":477,"column":31,"nodeType":"84","messageId":"85","endLine":477,"endColumn":51},{"ruleId":"82","severity":1,"message":"88","line":477,"column":106,"nodeType":"84","messageId":"85","endLine":477,"endColumn":117},{"ruleId":"82","severity":1,"message":"89","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"90","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":15},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],["91"],["92"],"no-unused-vars","'isAdded' is assigned a value but never used.","Identifier","unusedVar","'servicesEngineer' is assigned a value but never used.","'servicesEngineerName' is assigned a value but never used.","'listService' is assigned a value but never used.","'Component' is defined but never used.","'classes' is defined but never used.","no-global-assign","no-unsafe-negation"]